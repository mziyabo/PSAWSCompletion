$MaximumFunctionCount = 8000
function Get-accessanalyzer{
   $commands=(
      "create-analyzer", 
      "create-archive-rule", 
      "delete-analyzer", 
      "delete-archive-rule", 
      "get-analyzed-resource", 
      "get-analyzer", 
      "get-archive-rule", 
      "get-finding", 
      "list-analyzed-resources", 
      "list-analyzers", 
      "list-archive-rules", 
      "list-findings", 
      "list-tags-for-resource", 
      "start-resource-scan", 
      "tag-resource", 
      "untag-resource", 
      "update-archive-rule", 
      "update-findings"
    );
   return $commands;
}
function Get-accessanalyzer-create-analyzer{
   $flags=(
      "--analyzer-name", 
      "--archive-rules", 
      "--client-token", 
      "--tags", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-create-archive-rule{
   $flags=(
      "--analyzer-name", 
      "--client-token", 
      "--filter", 
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-delete-analyzer{
   $flags=(
      "--analyzer-name", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-delete-archive-rule{
   $flags=(
      "--analyzer-name", 
      "--client-token", 
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-get-analyzed-resource{
   $flags=(
      "--analyzer-arn", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-get-analyzer{
   $flags=(
      "--analyzer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-get-archive-rule{
   $flags=(
      "--analyzer-name", 
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-get-finding{
   $flags=(
      "--analyzer-arn", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-list-analyzed-resources{
   $flags=(
      "--analyzer-arn", 
      "--resource-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-list-analyzers{
   $flags=(
      "--type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-list-archive-rules{
   $flags=(
      "--analyzer-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-list-findings{
   $flags=(
      "--analyzer-arn", 
      "--filter", 
      "--sort", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-start-resource-scan{
   $flags=(
      "--analyzer-arn", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-update-archive-rule{
   $flags=(
      "--analyzer-name", 
      "--client-token", 
      "--filter", 
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-accessanalyzer-update-findings{
   $flags=(
      "--analyzer-arn", 
      "--client-token", 
      "--ids", 
      "--resource-arn", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm{
   $commands=(
      "add-tags-to-certificate", 
      "delete-certificate", 
      "describe-certificate", 
      "export-certificate", 
      "get-certificate", 
      "import-certificate", 
      "list-certificates", 
      "list-tags-for-certificate", 
      "remove-tags-from-certificate", 
      "renew-certificate", 
      "request-certificate", 
      "resend-validation-email", 
      "update-certificate-options", 
      "wait"
    );
   return $commands;
}
function Get-acm-add-tags-to-certificate{
   $flags=(
      "--certificate-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-delete-certificate{
   $flags=(
      "--certificate-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-describe-certificate{
   $flags=(
      "--certificate-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-export-certificate{
   $flags=(
      "--certificate-arn", 
      "--passphrase", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-get-certificate{
   $flags=(
      "--certificate-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-import-certificate{
   $flags=(
      "--certificate-arn", 
      "--certificate", 
      "--private-key", 
      "--certificate-chain", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-list-certificates{
   $flags=(
      "--certificate-statuses", 
      "--includes", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-list-tags-for-certificate{
   $flags=(
      "--certificate-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-remove-tags-from-certificate{
   $flags=(
      "--certificate-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-renew-certificate{
   $flags=(
      "--certificate-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-request-certificate{
   $flags=(
      "--domain-name", 
      "--validation-method", 
      "--subject-alternative-names", 
      "--idempotency-token", 
      "--domain-validation-options", 
      "--options", 
      "--certificate-authority-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-resend-validation-email{
   $flags=(
      "--certificate-arn", 
      "--domain", 
      "--validation-domain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-update-certificate-options{
   $flags=(
      "--certificate-arn", 
      "--options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-wait{
   $flags=("");
   return $flags;
}
function Get-acm-pca{
   $commands=(
      "create-certificate-authority", 
      "create-certificate-authority-audit-report", 
      "create-permission", 
      "delete-certificate-authority", 
      "delete-permission", 
      "describe-certificate-authority", 
      "describe-certificate-authority-audit-report", 
      "get-certificate", 
      "get-certificate-authority-certificate", 
      "get-certificate-authority-csr", 
      "import-certificate-authority-certificate", 
      "issue-certificate", 
      "list-certificate-authorities", 
      "list-permissions", 
      "list-tags", 
      "restore-certificate-authority", 
      "revoke-certificate", 
      "tag-certificate-authority", 
      "untag-certificate-authority", 
      "update-certificate-authority", 
      "wait"
    );
   return $commands;
}
function Get-acm-pca-create-certificate-authority{
   $flags=(
      "--certificate-authority-configuration", 
      "--revocation-configuration", 
      "--certificate-authority-type", 
      "--idempotency-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-create-certificate-authority-audit-report{
   $flags=(
      "--certificate-authority-arn", 
      "--s3-bucket-name", 
      "--audit-report-response-format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-create-permission{
   $flags=(
      "--certificate-authority-arn", 
      "--principal", 
      "--source-account", 
      "--actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-delete-certificate-authority{
   $flags=(
      "--certificate-authority-arn", 
      "--permanent-deletion-time-in-days", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-delete-permission{
   $flags=(
      "--certificate-authority-arn", 
      "--principal", 
      "--source-account", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-describe-certificate-authority{
   $flags=(
      "--certificate-authority-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-describe-certificate-authority-audit-report{
   $flags=(
      "--certificate-authority-arn", 
      "--audit-report-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-get-certificate{
   $flags=(
      "--certificate-authority-arn", 
      "--certificate-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-get-certificate-authority-certificate{
   $flags=(
      "--certificate-authority-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-get-certificate-authority-csr{
   $flags=(
      "--certificate-authority-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-import-certificate-authority-certificate{
   $flags=(
      "--certificate-authority-arn", 
      "--certificate", 
      "--certificate-chain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-issue-certificate{
   $flags=(
      "--certificate-authority-arn", 
      "--csr", 
      "--signing-algorithm", 
      "--template-arn", 
      "--validity", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-list-certificate-authorities{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-list-permissions{
   $flags=(
      "--certificate-authority-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-list-tags{
   $flags=(
      "--certificate-authority-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-restore-certificate-authority{
   $flags=(
      "--certificate-authority-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-revoke-certificate{
   $flags=(
      "--certificate-authority-arn", 
      "--certificate-serial", 
      "--revocation-reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-tag-certificate-authority{
   $flags=(
      "--certificate-authority-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-untag-certificate-authority{
   $flags=(
      "--certificate-authority-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-update-certificate-authority{
   $flags=(
      "--certificate-authority-arn", 
      "--revocation-configuration", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-acm-pca-wait{
   $flags=("");
   return $flags;
}
function Get-alexaforbusiness{
   $commands=(
      "approve-skill", 
      "associate-contact-with-address-book", 
      "associate-device-with-network-profile", 
      "associate-device-with-room", 
      "associate-skill-group-with-room", 
      "associate-skill-with-skill-group", 
      "associate-skill-with-users", 
      "create-address-book", 
      "create-business-report-schedule", 
      "create-conference-provider", 
      "create-contact", 
      "create-gateway-group", 
      "create-network-profile", 
      "create-profile", 
      "create-room", 
      "create-skill-group", 
      "create-user", 
      "delete-address-book", 
      "delete-business-report-schedule", 
      "delete-conference-provider", 
      "delete-contact", 
      "delete-device", 
      "delete-device-usage-data", 
      "delete-gateway-group", 
      "delete-network-profile", 
      "delete-profile", 
      "delete-room", 
      "delete-room-skill-parameter", 
      "delete-skill-authorization", 
      "delete-skill-group", 
      "delete-user", 
      "disassociate-contact-from-address-book", 
      "disassociate-device-from-room", 
      "disassociate-skill-from-skill-group", 
      "disassociate-skill-from-users", 
      "disassociate-skill-group-from-room", 
      "forget-smart-home-appliances", 
      "get-address-book", 
      "get-conference-preference", 
      "get-conference-provider", 
      "get-contact", 
      "get-device", 
      "get-gateway", 
      "get-gateway-group", 
      "get-invitation-configuration", 
      "get-network-profile", 
      "get-profile", 
      "get-room", 
      "get-room-skill-parameter", 
      "get-skill-group", 
      "list-business-report-schedules", 
      "list-conference-providers", 
      "list-device-events", 
      "list-gateway-groups", 
      "list-gateways", 
      "list-skills", 
      "list-skills-store-categories", 
      "list-skills-store-skills-by-category", 
      "list-smart-home-appliances", 
      "list-tags", 
      "put-conference-preference", 
      "put-invitation-configuration", 
      "put-room-skill-parameter", 
      "put-skill-authorization", 
      "register-avs-device", 
      "reject-skill", 
      "resolve-room", 
      "revoke-invitation", 
      "search-address-books", 
      "search-contacts", 
      "search-devices", 
      "search-network-profiles", 
      "search-profiles", 
      "search-rooms", 
      "search-skill-groups", 
      "search-users", 
      "send-announcement", 
      "send-invitation", 
      "start-device-sync", 
      "start-smart-home-appliance-discovery", 
      "tag-resource", 
      "untag-resource", 
      "update-address-book", 
      "update-business-report-schedule", 
      "update-conference-provider", 
      "update-contact", 
      "update-device", 
      "update-gateway", 
      "update-gateway-group", 
      "update-network-profile", 
      "update-profile", 
      "update-room", 
      "update-skill-group"
    );
   return $commands;
}
function Get-alexaforbusiness-approve-skill{
   $flags=(
      "--skill-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-associate-contact-with-address-book{
   $flags=(
      "--contact-arn", 
      "--address-book-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-associate-device-with-network-profile{
   $flags=(
      "--device-arn", 
      "--network-profile-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-associate-device-with-room{
   $flags=(
      "--device-arn", 
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-associate-skill-group-with-room{
   $flags=(
      "--skill-group-arn", 
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-associate-skill-with-skill-group{
   $flags=(
      "--skill-group-arn", 
      "--skill-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-associate-skill-with-users{
   $flags=(
      "--skill-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-address-book{
   $flags=(
      "--name", 
      "--description", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-business-report-schedule{
   $flags=(
      "--schedule-name", 
      "--s3-bucket-name", 
      "--s3-key-prefix", 
      "--format", 
      "--content-range", 
      "--recurrence", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-conference-provider{
   $flags=(
      "--conference-provider-name", 
      "--conference-provider-type", 
      "--ip-dial-in", 
      "--pstn-dial-in", 
      "--meeting-setting", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-contact{
   $flags=(
      "--display-name", 
      "--first-name", 
      "--last-name", 
      "--phone-number", 
      "--phone-numbers", 
      "--sip-addresses", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-gateway-group{
   $flags=(
      "--name", 
      "--description", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-network-profile{
   $flags=(
      "--network-profile-name", 
      "--description", 
      "--ssid", 
      "--security-type", 
      "--eap-method", 
      "--current-password", 
      "--next-password", 
      "--certificate-authority-arn", 
      "--trust-anchors", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-profile{
   $flags=(
      "--profile-name", 
      "--timezone", 
      "--address", 
      "--distance-unit", 
      "--temperature-unit", 
      "--wake-word", 
      "--locale", 
      "--client-request-token", 
      "--setup-mode-disabled", 
      "--no-setup-mode-disabled", 
      "--max-volume-limit", 
      "--pstn-enabled", 
      "--no-pstn-enabled", 
      "--meeting-room-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-room{
   $flags=(
      "--room-name", 
      "--description", 
      "--profile-arn", 
      "--provider-calendar-id", 
      "--client-request-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-skill-group{
   $flags=(
      "--skill-group-name", 
      "--description", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-create-user{
   $flags=(
      "--user-id", 
      "--first-name", 
      "--last-name", 
      "--email", 
      "--client-request-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-address-book{
   $flags=(
      "--address-book-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-business-report-schedule{
   $flags=(
      "--schedule-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-conference-provider{
   $flags=(
      "--conference-provider-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-contact{
   $flags=(
      "--contact-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-device{
   $flags=(
      "--device-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-device-usage-data{
   $flags=(
      "--device-arn", 
      "--device-usage-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-gateway-group{
   $flags=(
      "--gateway-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-network-profile{
   $flags=(
      "--network-profile-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-profile{
   $flags=(
      "--profile-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-room{
   $flags=(
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-room-skill-parameter{
   $flags=(
      "--room-arn", 
      "--skill-id", 
      "--parameter-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-skill-authorization{
   $flags=(
      "--skill-id", 
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-skill-group{
   $flags=(
      "--skill-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-delete-user{
   $flags=(
      "--user-arn", 
      "--enrollment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-disassociate-contact-from-address-book{
   $flags=(
      "--contact-arn", 
      "--address-book-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-disassociate-device-from-room{
   $flags=(
      "--device-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-disassociate-skill-from-skill-group{
   $flags=(
      "--skill-group-arn", 
      "--skill-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-disassociate-skill-from-users{
   $flags=(
      "--skill-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-disassociate-skill-group-from-room{
   $flags=(
      "--skill-group-arn", 
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-forget-smart-home-appliances{
   $flags=(
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-address-book{
   $flags=(
      "--address-book-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-conference-preference{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-conference-provider{
   $flags=(
      "--conference-provider-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-contact{
   $flags=(
      "--contact-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-device{
   $flags=(
      "--device-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-gateway{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-gateway-group{
   $flags=(
      "--gateway-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-invitation-configuration{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-network-profile{
   $flags=(
      "--network-profile-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-profile{
   $flags=(
      "--profile-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-room{
   $flags=(
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-room-skill-parameter{
   $flags=(
      "--room-arn", 
      "--skill-id", 
      "--parameter-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-get-skill-group{
   $flags=(
      "--skill-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-business-report-schedules{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-conference-providers{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-device-events{
   $flags=(
      "--device-arn", 
      "--event-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-gateway-groups{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-gateways{
   $flags=(
      "--gateway-group-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-skills{
   $flags=(
      "--skill-group-arn", 
      "--enablement-type", 
      "--skill-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-skills-store-categories{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-skills-store-skills-by-category{
   $flags=(
      "--category-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-smart-home-appliances{
   $flags=(
      "--room-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-list-tags{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-put-conference-preference{
   $flags=(
      "--conference-preference", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-put-invitation-configuration{
   $flags=(
      "--organization-name", 
      "--contact-email", 
      "--private-skill-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-put-room-skill-parameter{
   $flags=(
      "--room-arn", 
      "--skill-id", 
      "--room-skill-parameter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-put-skill-authorization{
   $flags=(
      "--authorization-result", 
      "--skill-id", 
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-register-avs-device{
   $flags=(
      "--client-id", 
      "--user-code", 
      "--product-id", 
      "--device-serial-number", 
      "--amazon-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-reject-skill{
   $flags=(
      "--skill-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-resolve-room{
   $flags=(
      "--user-id", 
      "--skill-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-revoke-invitation{
   $flags=(
      "--user-arn", 
      "--enrollment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-search-address-books{
   $flags=(
      "--filters", 
      "--sort-criteria", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-search-contacts{
   $flags=(
      "--filters", 
      "--sort-criteria", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-search-devices{
   $flags=(
      "--filters", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-search-network-profiles{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--filters", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-search-profiles{
   $flags=(
      "--filters", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-search-rooms{
   $flags=(
      "--filters", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-search-skill-groups{
   $flags=(
      "--filters", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-search-users{
   $flags=(
      "--filters", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-send-announcement{
   $flags=(
      "--room-filters", 
      "--content", 
      "--time-to-live-in-seconds", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-send-invitation{
   $flags=(
      "--user-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-start-device-sync{
   $flags=(
      "--room-arn", 
      "--device-arn", 
      "--features", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-start-smart-home-appliance-discovery{
   $flags=(
      "--room-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-tag-resource{
   $flags=(
      "--arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-untag-resource{
   $flags=(
      "--arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-address-book{
   $flags=(
      "--address-book-arn", 
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-business-report-schedule{
   $flags=(
      "--schedule-arn", 
      "--s3-bucket-name", 
      "--s3-key-prefix", 
      "--format", 
      "--schedule-name", 
      "--recurrence", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-conference-provider{
   $flags=(
      "--conference-provider-arn", 
      "--conference-provider-type", 
      "--ip-dial-in", 
      "--pstn-dial-in", 
      "--meeting-setting", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-contact{
   $flags=(
      "--contact-arn", 
      "--display-name", 
      "--first-name", 
      "--last-name", 
      "--phone-number", 
      "--phone-numbers", 
      "--sip-addresses", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-device{
   $flags=(
      "--device-arn", 
      "--device-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-gateway{
   $flags=(
      "--gateway-arn", 
      "--name", 
      "--description", 
      "--software-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-gateway-group{
   $flags=(
      "--gateway-group-arn", 
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-network-profile{
   $flags=(
      "--network-profile-arn", 
      "--network-profile-name", 
      "--description", 
      "--current-password", 
      "--next-password", 
      "--certificate-authority-arn", 
      "--trust-anchors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-profile{
   $flags=(
      "--profile-arn", 
      "--profile-name", 
      "--is-default", 
      "--no-is-default", 
      "--timezone", 
      "--address", 
      "--distance-unit", 
      "--temperature-unit", 
      "--wake-word", 
      "--locale", 
      "--setup-mode-disabled", 
      "--no-setup-mode-disabled", 
      "--max-volume-limit", 
      "--pstn-enabled", 
      "--no-pstn-enabled", 
      "--meeting-room-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-room{
   $flags=(
      "--room-arn", 
      "--room-name", 
      "--description", 
      "--provider-calendar-id", 
      "--profile-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-alexaforbusiness-update-skill-group{
   $flags=(
      "--skill-group-arn", 
      "--skill-group-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify{
   $commands=(
      "create-app", 
      "create-backend-environment", 
      "create-branch", 
      "create-deployment", 
      "create-domain-association", 
      "create-webhook", 
      "delete-app", 
      "delete-backend-environment", 
      "delete-branch", 
      "delete-domain-association", 
      "delete-job", 
      "delete-webhook", 
      "generate-access-logs", 
      "get-app", 
      "get-artifact-url", 
      "get-backend-environment", 
      "get-branch", 
      "get-domain-association", 
      "get-job", 
      "get-webhook", 
      "list-apps", 
      "list-artifacts", 
      "list-backend-environments", 
      "list-branches", 
      "list-domain-associations", 
      "list-jobs", 
      "list-tags-for-resource", 
      "list-webhooks", 
      "start-deployment", 
      "start-job", 
      "stop-job", 
      "tag-resource", 
      "untag-resource", 
      "update-app", 
      "update-branch", 
      "update-domain-association", 
      "update-webhook"
    );
   return $commands;
}
function Get-amplify-create-app{
   $flags=(
      "--name", 
      "--description", 
      "--repository", 
      "--platform", 
      "--iam-service-role-arn", 
      "--oauth-token", 
      "--access-token", 
      "--environment-variables", 
      "--enable-branch-auto-build", 
      "--no-enable-branch-auto-build", 
      "--enable-basic-auth", 
      "--no-enable-basic-auth", 
      "--basic-auth-credentials", 
      "--custom-rules", 
      "--tags", 
      "--build-spec", 
      "--enable-auto-branch-creation", 
      "--no-enable-auto-branch-creation", 
      "--auto-branch-creation-patterns", 
      "--auto-branch-creation-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-create-backend-environment{
   $flags=(
      "--app-id", 
      "--environment-name", 
      "--stack-name", 
      "--deployment-artifacts", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-create-branch{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--description", 
      "--stage", 
      "--framework", 
      "--enable-notification", 
      "--no-enable-notification", 
      "--enable-auto-build", 
      "--no-enable-auto-build", 
      "--environment-variables", 
      "--basic-auth-credentials", 
      "--enable-basic-auth", 
      "--no-enable-basic-auth", 
      "--tags", 
      "--build-spec", 
      "--ttl", 
      "--display-name", 
      "--enable-pull-request-preview", 
      "--no-enable-pull-request-preview", 
      "--pull-request-environment-name", 
      "--backend-environment-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-create-deployment{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--file-map", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-create-domain-association{
   $flags=(
      "--app-id", 
      "--domain-name", 
      "--enable-auto-sub-domain", 
      "--no-enable-auto-sub-domain", 
      "--sub-domain-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-create-webhook{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-delete-app{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-delete-backend-environment{
   $flags=(
      "--app-id", 
      "--environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-delete-branch{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-delete-domain-association{
   $flags=(
      "--app-id", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-delete-job{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-delete-webhook{
   $flags=(
      "--webhook-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-generate-access-logs{
   $flags=(
      "--start-time", 
      "--end-time", 
      "--domain-name", 
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-get-app{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-get-artifact-url{
   $flags=(
      "--artifact-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-get-backend-environment{
   $flags=(
      "--app-id", 
      "--environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-get-branch{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-get-domain-association{
   $flags=(
      "--app-id", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-get-job{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-get-webhook{
   $flags=(
      "--webhook-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-list-apps{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-list-artifacts{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--job-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-list-backend-environments{
   $flags=(
      "--app-id", 
      "--environment-name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-list-branches{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-list-domain-associations{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-list-jobs{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-list-webhooks{
   $flags=(
      "--app-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-start-deployment{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--job-id", 
      "--source-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-start-job{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--job-id", 
      "--job-type", 
      "--job-reason", 
      "--commit-id", 
      "--commit-message", 
      "--commit-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-stop-job{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-update-app{
   $flags=(
      "--app-id", 
      "--name", 
      "--description", 
      "--platform", 
      "--iam-service-role-arn", 
      "--environment-variables", 
      "--enable-branch-auto-build", 
      "--no-enable-branch-auto-build", 
      "--enable-basic-auth", 
      "--no-enable-basic-auth", 
      "--basic-auth-credentials", 
      "--custom-rules", 
      "--build-spec", 
      "--enable-auto-branch-creation", 
      "--no-enable-auto-branch-creation", 
      "--auto-branch-creation-patterns", 
      "--auto-branch-creation-config", 
      "--repository", 
      "--oauth-token", 
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-update-branch{
   $flags=(
      "--app-id", 
      "--branch-name", 
      "--description", 
      "--framework", 
      "--stage", 
      "--enable-notification", 
      "--no-enable-notification", 
      "--enable-auto-build", 
      "--no-enable-auto-build", 
      "--environment-variables", 
      "--basic-auth-credentials", 
      "--enable-basic-auth", 
      "--no-enable-basic-auth", 
      "--build-spec", 
      "--ttl", 
      "--display-name", 
      "--enable-pull-request-preview", 
      "--no-enable-pull-request-preview", 
      "--pull-request-environment-name", 
      "--backend-environment-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-update-domain-association{
   $flags=(
      "--app-id", 
      "--domain-name", 
      "--enable-auto-sub-domain", 
      "--no-enable-auto-sub-domain", 
      "--sub-domain-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-amplify-update-webhook{
   $flags=(
      "--webhook-id", 
      "--branch-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway{
   $commands=(
      "create-api-key", 
      "create-authorizer", 
      "create-base-path-mapping", 
      "create-deployment", 
      "create-documentation-part", 
      "create-documentation-version", 
      "create-domain-name", 
      "create-model", 
      "create-request-validator", 
      "create-resource", 
      "create-rest-api", 
      "create-stage", 
      "create-usage-plan", 
      "create-usage-plan-key", 
      "create-vpc-link", 
      "delete-api-key", 
      "delete-authorizer", 
      "delete-base-path-mapping", 
      "delete-client-certificate", 
      "delete-deployment", 
      "delete-documentation-part", 
      "delete-documentation-version", 
      "delete-domain-name", 
      "delete-gateway-response", 
      "delete-integration", 
      "delete-integration-response", 
      "delete-method", 
      "delete-method-response", 
      "delete-model", 
      "delete-request-validator", 
      "delete-resource", 
      "delete-rest-api", 
      "delete-stage", 
      "delete-usage-plan", 
      "delete-usage-plan-key", 
      "delete-vpc-link", 
      "flush-stage-authorizers-cache", 
      "flush-stage-cache", 
      "generate-client-certificate", 
      "get-account", 
      "get-api-key", 
      "get-api-keys", 
      "get-authorizer", 
      "get-authorizers", 
      "get-base-path-mapping", 
      "get-base-path-mappings", 
      "get-client-certificate", 
      "get-client-certificates", 
      "get-deployment", 
      "get-deployments", 
      "get-documentation-part", 
      "get-documentation-parts", 
      "get-documentation-version", 
      "get-documentation-versions", 
      "get-domain-name", 
      "get-domain-names", 
      "get-export", 
      "get-gateway-response", 
      "get-gateway-responses", 
      "get-integration", 
      "get-integration-response", 
      "get-method", 
      "get-method-response", 
      "get-model", 
      "get-model-template", 
      "get-models", 
      "get-request-validator", 
      "get-request-validators", 
      "get-resource", 
      "get-resources", 
      "get-rest-api", 
      "get-rest-apis", 
      "get-sdk", 
      "get-sdk-type", 
      "get-sdk-types", 
      "get-stage", 
      "get-stages", 
      "get-tags", 
      "get-usage", 
      "get-usage-plan", 
      "get-usage-plan-key", 
      "get-usage-plan-keys", 
      "get-usage-plans", 
      "get-vpc-link", 
      "get-vpc-links", 
      "import-api-keys", 
      "import-documentation-parts", 
      "import-rest-api", 
      "put-gateway-response", 
      "put-integration", 
      "put-integration-response", 
      "put-method", 
      "put-method-response", 
      "put-rest-api", 
      "tag-resource", 
      "test-invoke-authorizer", 
      "test-invoke-method", 
      "untag-resource", 
      "update-account", 
      "update-api-key", 
      "update-authorizer", 
      "update-base-path-mapping", 
      "update-client-certificate", 
      "update-deployment", 
      "update-documentation-part", 
      "update-documentation-version", 
      "update-domain-name", 
      "update-gateway-response", 
      "update-integration", 
      "update-integration-response", 
      "update-method", 
      "update-method-response", 
      "update-model", 
      "update-request-validator", 
      "update-resource", 
      "update-rest-api", 
      "update-stage", 
      "update-usage", 
      "update-usage-plan", 
      "update-vpc-link"
    );
   return $commands;
}
function Get-apigateway-create-api-key{
   $flags=(
      "--name", 
      "--description", 
      "--enabled", 
      "--no-enabled", 
      "--generate-distinct-id", 
      "--no-generate-distinct-id", 
      "--value", 
      "--stage-keys", 
      "--customer-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-authorizer{
   $flags=(
      "--rest-api-id", 
      "--name", 
      "--type", 
      "--provider-arns", 
      "--auth-type", 
      "--authorizer-uri", 
      "--authorizer-credentials", 
      "--identity-source", 
      "--identity-validation-expression", 
      "--authorizer-result-ttl-in-seconds", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-base-path-mapping{
   $flags=(
      "--domain-name", 
      "--base-path", 
      "--rest-api-id", 
      "--stage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-deployment{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--stage-description", 
      "--description", 
      "--cache-cluster-enabled", 
      "--no-cache-cluster-enabled", 
      "--cache-cluster-size", 
      "--variables", 
      "--canary-settings", 
      "--tracing-enabled", 
      "--no-tracing-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-documentation-part{
   $flags=(
      "--rest-api-id", 
      "--location", 
      "--properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-documentation-version{
   $flags=(
      "--rest-api-id", 
      "--documentation-version", 
      "--stage-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-domain-name{
   $flags=(
      "--domain-name", 
      "--certificate-name", 
      "--certificate-body", 
      "--certificate-private-key", 
      "--certificate-chain", 
      "--certificate-arn", 
      "--regional-certificate-name", 
      "--regional-certificate-arn", 
      "--endpoint-configuration", 
      "--tags", 
      "--security-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-model{
   $flags=(
      "--rest-api-id", 
      "--name", 
      "--description", 
      "--schema", 
      "--content-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-request-validator{
   $flags=(
      "--rest-api-id", 
      "--name", 
      "--validate-request-body", 
      "--no-validate-request-body", 
      "--validate-request-parameters", 
      "--no-validate-request-parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-resource{
   $flags=(
      "--rest-api-id", 
      "--parent-id", 
      "--path-part", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-rest-api{
   $flags=(
      "--name", 
      "--description", 
      "--clone-from", 
      "--binary-media-types", 
      "--minimum-compression-size", 
      "--api-key-source", 
      "--endpoint-configuration", 
      "--policy", 
      "--tags", 
      "--api-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-stage{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--deployment-id", 
      "--description", 
      "--cache-cluster-enabled", 
      "--no-cache-cluster-enabled", 
      "--cache-cluster-size", 
      "--variables", 
      "--documentation-version", 
      "--canary-settings", 
      "--tracing-enabled", 
      "--no-tracing-enabled", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-usage-plan{
   $flags=(
      "--name", 
      "--description", 
      "--api-stages", 
      "--throttle", 
      "--quota", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-usage-plan-key{
   $flags=(
      "--usage-plan-id", 
      "--key-id", 
      "--key-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-create-vpc-link{
   $flags=(
      "--name", 
      "--description", 
      "--target-arns", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-api-key{
   $flags=(
      "--api-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-authorizer{
   $flags=(
      "--rest-api-id", 
      "--authorizer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-base-path-mapping{
   $flags=(
      "--domain-name", 
      "--base-path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-client-certificate{
   $flags=(
      "--client-certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-deployment{
   $flags=(
      "--rest-api-id", 
      "--deployment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-documentation-part{
   $flags=(
      "--rest-api-id", 
      "--documentation-part-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-documentation-version{
   $flags=(
      "--rest-api-id", 
      "--documentation-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-domain-name{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-gateway-response{
   $flags=(
      "--rest-api-id", 
      "--response-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-integration{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-integration-response{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--status-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-method{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-method-response{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--status-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-model{
   $flags=(
      "--rest-api-id", 
      "--model-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-request-validator{
   $flags=(
      "--rest-api-id", 
      "--request-validator-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-resource{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-rest-api{
   $flags=(
      "--rest-api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-stage{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-usage-plan{
   $flags=(
      "--usage-plan-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-usage-plan-key{
   $flags=(
      "--usage-plan-id", 
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-delete-vpc-link{
   $flags=(
      "--vpc-link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-flush-stage-authorizers-cache{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-flush-stage-cache{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-generate-client-certificate{
   $flags=(
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-api-key{
   $flags=(
      "--api-key", 
      "--include-value", 
      "--no-include-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-api-keys{
   $flags=(
      "--name-query", 
      "--customer-id", 
      "--include-values", 
      "--no-include-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-authorizer{
   $flags=(
      "--rest-api-id", 
      "--authorizer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-authorizers{
   $flags=(
      "--rest-api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-base-path-mapping{
   $flags=(
      "--domain-name", 
      "--base-path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-base-path-mappings{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-client-certificate{
   $flags=(
      "--client-certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-client-certificates{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-deployment{
   $flags=(
      "--rest-api-id", 
      "--deployment-id", 
      "--embed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-deployments{
   $flags=(
      "--rest-api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-documentation-part{
   $flags=(
      "--rest-api-id", 
      "--documentation-part-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-documentation-parts{
   $flags=(
      "--rest-api-id", 
      "--type", 
      "--name-query", 
      "--path", 
      "--location-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-documentation-version{
   $flags=(
      "--rest-api-id", 
      "--documentation-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-documentation-versions{
   $flags=(
      "--rest-api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-domain-name{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-domain-names{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-export{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--export-type", 
      "--parameters", 
      "--accepts"
    );
   return $flags;
}
function Get-apigateway-get-gateway-response{
   $flags=(
      "--rest-api-id", 
      "--response-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-gateway-responses{
   $flags=(
      "--rest-api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-integration{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-integration-response{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--status-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-method{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-method-response{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--status-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-model{
   $flags=(
      "--rest-api-id", 
      "--model-name", 
      "--flatten", 
      "--no-flatten", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-model-template{
   $flags=(
      "--rest-api-id", 
      "--model-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-models{
   $flags=(
      "--rest-api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-request-validator{
   $flags=(
      "--rest-api-id", 
      "--request-validator-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-request-validators{
   $flags=(
      "--rest-api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-resource{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--embed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-resources{
   $flags=(
      "--rest-api-id", 
      "--embed", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-rest-api{
   $flags=(
      "--rest-api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-rest-apis{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-sdk{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--sdk-type", 
      "--parameters"
    );
   return $flags;
}
function Get-apigateway-get-sdk-type{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-sdk-types{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-stage{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-stages{
   $flags=(
      "--rest-api-id", 
      "--deployment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-tags{
   $flags=(
      "--resource-arn", 
      "--position", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-usage{
   $flags=(
      "--usage-plan-id", 
      "--key-id", 
      "--start-date", 
      "--end-date", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-usage-plan{
   $flags=(
      "--usage-plan-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-usage-plan-key{
   $flags=(
      "--usage-plan-id", 
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-usage-plan-keys{
   $flags=(
      "--usage-plan-id", 
      "--name-query", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-usage-plans{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-vpc-link{
   $flags=(
      "--vpc-link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-get-vpc-links{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-import-api-keys{
   $flags=(
      "--body", 
      "--format", 
      "--fail-on-warnings", 
      "--no-fail-on-warnings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-import-documentation-parts{
   $flags=(
      "--rest-api-id", 
      "--mode", 
      "--fail-on-warnings", 
      "--no-fail-on-warnings", 
      "--body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-import-rest-api{
   $flags=(
      "--fail-on-warnings", 
      "--no-fail-on-warnings", 
      "--parameters", 
      "--body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-put-gateway-response{
   $flags=(
      "--rest-api-id", 
      "--response-type", 
      "--status-code", 
      "--response-parameters", 
      "--response-templates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-put-integration{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--type", 
      "--integration-http-method", 
      "--uri", 
      "--connection-type", 
      "--connection-id", 
      "--credentials", 
      "--request-parameters", 
      "--request-templates", 
      "--passthrough-behavior", 
      "--cache-namespace", 
      "--cache-key-parameters", 
      "--content-handling", 
      "--timeout-in-millis", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-put-integration-response{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--status-code", 
      "--selection-pattern", 
      "--response-parameters", 
      "--response-templates", 
      "--content-handling", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-put-method{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--authorization-type", 
      "--authorizer-id", 
      "--api-key-required", 
      "--no-api-key-required", 
      "--operation-name", 
      "--request-parameters", 
      "--request-models", 
      "--request-validator-id", 
      "--authorization-scopes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-put-method-response{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--status-code", 
      "--response-parameters", 
      "--response-models", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-put-rest-api{
   $flags=(
      "--rest-api-id", 
      "--mode", 
      "--fail-on-warnings", 
      "--no-fail-on-warnings", 
      "--parameters", 
      "--body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-test-invoke-authorizer{
   $flags=(
      "--rest-api-id", 
      "--authorizer-id", 
      "--headers", 
      "--multi-value-headers", 
      "--path-with-query-string", 
      "--body", 
      "--stage-variables", 
      "--additional-context", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-test-invoke-method{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--path-with-query-string", 
      "--body", 
      "--headers", 
      "--multi-value-headers", 
      "--client-certificate-id", 
      "--stage-variables", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-account{
   $flags=(
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-api-key{
   $flags=(
      "--api-key", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-authorizer{
   $flags=(
      "--rest-api-id", 
      "--authorizer-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-base-path-mapping{
   $flags=(
      "--domain-name", 
      "--base-path", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-client-certificate{
   $flags=(
      "--client-certificate-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-deployment{
   $flags=(
      "--rest-api-id", 
      "--deployment-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-documentation-part{
   $flags=(
      "--rest-api-id", 
      "--documentation-part-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-documentation-version{
   $flags=(
      "--rest-api-id", 
      "--documentation-version", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-domain-name{
   $flags=(
      "--domain-name", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-gateway-response{
   $flags=(
      "--rest-api-id", 
      "--response-type", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-integration{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-integration-response{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--status-code", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-method{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-method-response{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--http-method", 
      "--status-code", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-model{
   $flags=(
      "--rest-api-id", 
      "--model-name", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-request-validator{
   $flags=(
      "--rest-api-id", 
      "--request-validator-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-resource{
   $flags=(
      "--rest-api-id", 
      "--resource-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-rest-api{
   $flags=(
      "--rest-api-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-stage{
   $flags=(
      "--rest-api-id", 
      "--stage-name", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-usage{
   $flags=(
      "--usage-plan-id", 
      "--key-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-usage-plan{
   $flags=(
      "--usage-plan-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigateway-update-vpc-link{
   $flags=(
      "--vpc-link-id", 
      "--patch-operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewaymanagementapi{
   $commands=(
      "delete-connection", 
      "get-connection", 
      "post-to-connection"
    );
   return $commands;
}
function Get-apigatewaymanagementapi-delete-connection{
   $flags=(
      "--connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewaymanagementapi-get-connection{
   $flags=(
      "--connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewaymanagementapi-post-to-connection{
   $flags=(
      "--data", 
      "--connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2{
   $commands=(
      "create-api", 
      "create-api-mapping", 
      "create-authorizer", 
      "create-deployment", 
      "create-domain-name", 
      "create-integration", 
      "create-integration-response", 
      "create-model", 
      "create-route", 
      "create-route-response", 
      "create-stage", 
      "create-vpc-link", 
      "delete-access-log-settings", 
      "delete-api", 
      "delete-api-mapping", 
      "delete-authorizer", 
      "delete-cors-configuration", 
      "delete-deployment", 
      "delete-domain-name", 
      "delete-integration", 
      "delete-integration-response", 
      "delete-model", 
      "delete-route", 
      "delete-route-request-parameter", 
      "delete-route-response", 
      "delete-route-settings", 
      "delete-stage", 
      "delete-vpc-link", 
      "export-api", 
      "get-api", 
      "get-api-mapping", 
      "get-api-mappings", 
      "get-apis", 
      "get-authorizer", 
      "get-authorizers", 
      "get-deployment", 
      "get-deployments", 
      "get-domain-name", 
      "get-domain-names", 
      "get-integration", 
      "get-integration-response", 
      "get-integration-responses", 
      "get-integrations", 
      "get-model", 
      "get-model-template", 
      "get-models", 
      "get-route", 
      "get-route-response", 
      "get-route-responses", 
      "get-routes", 
      "get-stage", 
      "get-stages", 
      "get-tags", 
      "get-vpc-link", 
      "get-vpc-links", 
      "import-api", 
      "reimport-api", 
      "tag-resource", 
      "untag-resource", 
      "update-api", 
      "update-api-mapping", 
      "update-authorizer", 
      "update-deployment", 
      "update-domain-name", 
      "update-integration", 
      "update-integration-response", 
      "update-model", 
      "update-route", 
      "update-route-response", 
      "update-stage", 
      "update-vpc-link"
    );
   return $commands;
}
function Get-apigatewayv2-create-api{
   $flags=(
      "--api-key-selection-expression", 
      "--cors-configuration", 
      "--credentials-arn", 
      "--description", 
      "--disable-schema-validation", 
      "--no-disable-schema-validation", 
      "--name", 
      "--protocol-type", 
      "--route-key", 
      "--route-selection-expression", 
      "--tags", 
      "--target", 
      "--api-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-api-mapping{
   $flags=(
      "--api-id", 
      "--api-mapping-key", 
      "--domain-name", 
      "--stage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-authorizer{
   $flags=(
      "--api-id", 
      "--authorizer-credentials-arn", 
      "--authorizer-result-ttl-in-seconds", 
      "--authorizer-type", 
      "--authorizer-uri", 
      "--identity-source", 
      "--identity-validation-expression", 
      "--jwt-configuration", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-deployment{
   $flags=(
      "--api-id", 
      "--description", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-domain-name{
   $flags=(
      "--domain-name", 
      "--domain-name-configurations", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-integration{
   $flags=(
      "--api-id", 
      "--connection-id", 
      "--connection-type", 
      "--content-handling-strategy", 
      "--credentials-arn", 
      "--description", 
      "--integration-method", 
      "--integration-type", 
      "--integration-uri", 
      "--passthrough-behavior", 
      "--payload-format-version", 
      "--request-parameters", 
      "--request-templates", 
      "--template-selection-expression", 
      "--timeout-in-millis", 
      "--tls-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-integration-response{
   $flags=(
      "--api-id", 
      "--content-handling-strategy", 
      "--integration-id", 
      "--integration-response-key", 
      "--response-parameters", 
      "--response-templates", 
      "--template-selection-expression", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-model{
   $flags=(
      "--api-id", 
      "--content-type", 
      "--description", 
      "--name", 
      "--schema", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-route{
   $flags=(
      "--api-id", 
      "--api-key-required", 
      "--no-api-key-required", 
      "--authorization-scopes", 
      "--authorization-type", 
      "--authorizer-id", 
      "--model-selection-expression", 
      "--operation-name", 
      "--request-models", 
      "--request-parameters", 
      "--route-key", 
      "--route-response-selection-expression", 
      "--target", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-route-response{
   $flags=(
      "--api-id", 
      "--model-selection-expression", 
      "--response-models", 
      "--response-parameters", 
      "--route-id", 
      "--route-response-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-stage{
   $flags=(
      "--access-log-settings", 
      "--api-id", 
      "--auto-deploy", 
      "--no-auto-deploy", 
      "--client-certificate-id", 
      "--default-route-settings", 
      "--deployment-id", 
      "--description", 
      "--route-settings", 
      "--stage-name", 
      "--stage-variables", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-create-vpc-link{
   $flags=(
      "--name", 
      "--security-group-ids", 
      "--subnet-ids", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-access-log-settings{
   $flags=(
      "--api-id", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-api{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-api-mapping{
   $flags=(
      "--api-mapping-id", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-authorizer{
   $flags=(
      "--api-id", 
      "--authorizer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-cors-configuration{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-deployment{
   $flags=(
      "--api-id", 
      "--deployment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-domain-name{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-integration{
   $flags=(
      "--api-id", 
      "--integration-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-integration-response{
   $flags=(
      "--api-id", 
      "--integration-id", 
      "--integration-response-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-model{
   $flags=(
      "--api-id", 
      "--model-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-route{
   $flags=(
      "--api-id", 
      "--route-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-route-request-parameter{
   $flags=(
      "--api-id", 
      "--request-parameter-key", 
      "--route-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-route-response{
   $flags=(
      "--api-id", 
      "--route-id", 
      "--route-response-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-route-settings{
   $flags=(
      "--api-id", 
      "--route-key", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-stage{
   $flags=(
      "--api-id", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-delete-vpc-link{
   $flags=(
      "--vpc-link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-export-api{
   $flags=(
      "--api-id", 
      "--export-version", 
      "--include-extensions", 
      "--no-include-extensions", 
      "--output-type", 
      "--specification", 
      "--stage-name"
    );
   return $flags;
}
function Get-apigatewayv2-get-api{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-api-mapping{
   $flags=(
      "--api-mapping-id", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-api-mappings{
   $flags=(
      "--domain-name", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-apis{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-authorizer{
   $flags=(
      "--api-id", 
      "--authorizer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-authorizers{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-deployment{
   $flags=(
      "--api-id", 
      "--deployment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-deployments{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-domain-name{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-domain-names{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-integration{
   $flags=(
      "--api-id", 
      "--integration-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-integration-response{
   $flags=(
      "--api-id", 
      "--integration-id", 
      "--integration-response-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-integration-responses{
   $flags=(
      "--api-id", 
      "--integration-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-integrations{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-model{
   $flags=(
      "--api-id", 
      "--model-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-model-template{
   $flags=(
      "--api-id", 
      "--model-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-models{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-route{
   $flags=(
      "--api-id", 
      "--route-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-route-response{
   $flags=(
      "--api-id", 
      "--route-id", 
      "--route-response-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-route-responses{
   $flags=(
      "--api-id", 
      "--route-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-routes{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-stage{
   $flags=(
      "--api-id", 
      "--stage-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-stages{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-tags{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-vpc-link{
   $flags=(
      "--vpc-link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-get-vpc-links{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-import-api{
   $flags=(
      "--basepath", 
      "--body", 
      "--fail-on-warnings", 
      "--no-fail-on-warnings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-reimport-api{
   $flags=(
      "--api-id", 
      "--basepath", 
      "--body", 
      "--fail-on-warnings", 
      "--no-fail-on-warnings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-api{
   $flags=(
      "--api-id", 
      "--api-key-selection-expression", 
      "--cors-configuration", 
      "--credentials-arn", 
      "--description", 
      "--disable-schema-validation", 
      "--no-disable-schema-validation", 
      "--name", 
      "--route-key", 
      "--route-selection-expression", 
      "--target", 
      "--api-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-api-mapping{
   $flags=(
      "--api-id", 
      "--api-mapping-id", 
      "--api-mapping-key", 
      "--domain-name", 
      "--stage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-authorizer{
   $flags=(
      "--api-id", 
      "--authorizer-credentials-arn", 
      "--authorizer-id", 
      "--authorizer-result-ttl-in-seconds", 
      "--authorizer-type", 
      "--authorizer-uri", 
      "--identity-source", 
      "--identity-validation-expression", 
      "--jwt-configuration", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-deployment{
   $flags=(
      "--api-id", 
      "--deployment-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-domain-name{
   $flags=(
      "--domain-name", 
      "--domain-name-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-integration{
   $flags=(
      "--api-id", 
      "--connection-id", 
      "--connection-type", 
      "--content-handling-strategy", 
      "--credentials-arn", 
      "--description", 
      "--integration-id", 
      "--integration-method", 
      "--integration-type", 
      "--integration-uri", 
      "--passthrough-behavior", 
      "--payload-format-version", 
      "--request-parameters", 
      "--request-templates", 
      "--template-selection-expression", 
      "--timeout-in-millis", 
      "--tls-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-integration-response{
   $flags=(
      "--api-id", 
      "--content-handling-strategy", 
      "--integration-id", 
      "--integration-response-id", 
      "--integration-response-key", 
      "--response-parameters", 
      "--response-templates", 
      "--template-selection-expression", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-model{
   $flags=(
      "--api-id", 
      "--content-type", 
      "--description", 
      "--model-id", 
      "--name", 
      "--schema", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-route{
   $flags=(
      "--api-id", 
      "--api-key-required", 
      "--no-api-key-required", 
      "--authorization-scopes", 
      "--authorization-type", 
      "--authorizer-id", 
      "--model-selection-expression", 
      "--operation-name", 
      "--request-models", 
      "--request-parameters", 
      "--route-id", 
      "--route-key", 
      "--route-response-selection-expression", 
      "--target", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-route-response{
   $flags=(
      "--api-id", 
      "--model-selection-expression", 
      "--response-models", 
      "--response-parameters", 
      "--route-id", 
      "--route-response-id", 
      "--route-response-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-stage{
   $flags=(
      "--access-log-settings", 
      "--api-id", 
      "--auto-deploy", 
      "--no-auto-deploy", 
      "--client-certificate-id", 
      "--default-route-settings", 
      "--deployment-id", 
      "--description", 
      "--route-settings", 
      "--stage-name", 
      "--stage-variables", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-apigatewayv2-update-vpc-link{
   $flags=(
      "--name", 
      "--vpc-link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig{
   $commands=(
      "create-application", 
      "create-configuration-profile", 
      "create-deployment-strategy", 
      "create-environment", 
      "delete-application", 
      "delete-configuration-profile", 
      "delete-deployment-strategy", 
      "delete-environment", 
      "get-application", 
      "get-configuration", 
      "get-configuration-profile", 
      "get-deployment", 
      "get-deployment-strategy", 
      "get-environment", 
      "list-applications", 
      "list-configuration-profiles", 
      "list-deployment-strategies", 
      "list-deployments", 
      "list-environments", 
      "list-tags-for-resource", 
      "start-deployment", 
      "stop-deployment", 
      "tag-resource", 
      "untag-resource", 
      "update-application", 
      "update-configuration-profile", 
      "update-deployment-strategy", 
      "update-environment", 
      "validate-configuration"
    );
   return $commands;
}
function Get-appconfig-create-application{
   $flags=(
      "--name", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-create-configuration-profile{
   $flags=(
      "--application-id", 
      "--name", 
      "--description", 
      "--location-uri", 
      "--retrieval-role-arn", 
      "--validators", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-create-deployment-strategy{
   $flags=(
      "--name", 
      "--description", 
      "--deployment-duration-in-minutes", 
      "--final-bake-time-in-minutes", 
      "--growth-factor", 
      "--growth-type", 
      "--replicate-to", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-create-environment{
   $flags=(
      "--application-id", 
      "--name", 
      "--description", 
      "--monitors", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-delete-application{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-delete-configuration-profile{
   $flags=(
      "--application-id", 
      "--configuration-profile-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-delete-deployment-strategy{
   $flags=(
      "--deployment-strategy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-delete-environment{
   $flags=(
      "--application-id", 
      "--environment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-get-application{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-get-configuration{
   $flags=(
      "--application", 
      "--environment", 
      "--configuration", 
      "--client-id", 
      "--client-configuration-version"
    );
   return $flags;
}
function Get-appconfig-get-configuration-profile{
   $flags=(
      "--application-id", 
      "--configuration-profile-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-get-deployment{
   $flags=(
      "--application-id", 
      "--environment-id", 
      "--deployment-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-get-deployment-strategy{
   $flags=(
      "--deployment-strategy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-get-environment{
   $flags=(
      "--application-id", 
      "--environment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-list-applications{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-list-configuration-profiles{
   $flags=(
      "--application-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-list-deployment-strategies{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-list-deployments{
   $flags=(
      "--application-id", 
      "--environment-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-list-environments{
   $flags=(
      "--application-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-start-deployment{
   $flags=(
      "--application-id", 
      "--environment-id", 
      "--deployment-strategy-id", 
      "--configuration-profile-id", 
      "--configuration-version", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-stop-deployment{
   $flags=(
      "--application-id", 
      "--environment-id", 
      "--deployment-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-update-application{
   $flags=(
      "--application-id", 
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-update-configuration-profile{
   $flags=(
      "--application-id", 
      "--configuration-profile-id", 
      "--name", 
      "--description", 
      "--retrieval-role-arn", 
      "--validators", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-update-deployment-strategy{
   $flags=(
      "--deployment-strategy-id", 
      "--description", 
      "--deployment-duration-in-minutes", 
      "--final-bake-time-in-minutes", 
      "--growth-factor", 
      "--growth-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-update-environment{
   $flags=(
      "--application-id", 
      "--environment-id", 
      "--name", 
      "--description", 
      "--monitors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appconfig-validate-configuration{
   $flags=(
      "--application-id", 
      "--configuration-profile-id", 
      "--configuration-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling{
   $commands=(
      "delete-scaling-policy", 
      "delete-scheduled-action", 
      "deregister-scalable-target", 
      "describe-scalable-targets", 
      "describe-scaling-activities", 
      "describe-scaling-policies", 
      "describe-scheduled-actions", 
      "put-scaling-policy", 
      "put-scheduled-action", 
      "register-scalable-target"
    );
   return $commands;
}
function Get-application-autoscaling-delete-scaling-policy{
   $flags=(
      "--policy-name", 
      "--service-namespace", 
      "--resource-id", 
      "--scalable-dimension", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-delete-scheduled-action{
   $flags=(
      "--service-namespace", 
      "--scheduled-action-name", 
      "--resource-id", 
      "--scalable-dimension", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-deregister-scalable-target{
   $flags=(
      "--service-namespace", 
      "--resource-id", 
      "--scalable-dimension", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-describe-scalable-targets{
   $flags=(
      "--service-namespace", 
      "--resource-ids", 
      "--scalable-dimension", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-describe-scaling-activities{
   $flags=(
      "--service-namespace", 
      "--resource-id", 
      "--scalable-dimension", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-describe-scaling-policies{
   $flags=(
      "--policy-names", 
      "--service-namespace", 
      "--resource-id", 
      "--scalable-dimension", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-describe-scheduled-actions{
   $flags=(
      "--scheduled-action-names", 
      "--service-namespace", 
      "--resource-id", 
      "--scalable-dimension", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-put-scaling-policy{
   $flags=(
      "--policy-name", 
      "--service-namespace", 
      "--resource-id", 
      "--scalable-dimension", 
      "--policy-type", 
      "--step-scaling-policy-configuration", 
      "--target-tracking-scaling-policy-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-put-scheduled-action{
   $flags=(
      "--service-namespace", 
      "--schedule", 
      "--scheduled-action-name", 
      "--resource-id", 
      "--scalable-dimension", 
      "--start-time", 
      "--end-time", 
      "--scalable-target-action", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-autoscaling-register-scalable-target{
   $flags=(
      "--service-namespace", 
      "--resource-id", 
      "--scalable-dimension", 
      "--min-capacity", 
      "--max-capacity", 
      "--role-arn", 
      "--suspended-state", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights{
   $commands=(
      "create-application", 
      "create-component", 
      "create-log-pattern", 
      "delete-application", 
      "delete-component", 
      "delete-log-pattern", 
      "describe-application", 
      "describe-component", 
      "describe-component-configuration", 
      "describe-component-configuration-recommendation", 
      "describe-log-pattern", 
      "describe-observation", 
      "describe-problem", 
      "describe-problem-observations", 
      "list-applications", 
      "list-components", 
      "list-configuration-history", 
      "list-log-pattern-sets", 
      "list-log-patterns", 
      "list-problems", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-application", 
      "update-component", 
      "update-component-configuration", 
      "update-log-pattern"
    );
   return $commands;
}
function Get-application-insights-create-application{
   $flags=(
      "--resource-group-name", 
      "--ops-center-enabled", 
      "--no-ops-center-enabled", 
      "--cwe-monitor-enabled", 
      "--no-cwe-monitor-enabled", 
      "--ops-item-sns-topic-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-create-component{
   $flags=(
      "--resource-group-name", 
      "--component-name", 
      "--resource-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-create-log-pattern{
   $flags=(
      "--resource-group-name", 
      "--pattern-set-name", 
      "--pattern-name", 
      "--pattern", 
      "--rank", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-delete-application{
   $flags=(
      "--resource-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-delete-component{
   $flags=(
      "--resource-group-name", 
      "--component-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-delete-log-pattern{
   $flags=(
      "--resource-group-name", 
      "--pattern-set-name", 
      "--pattern-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-describe-application{
   $flags=(
      "--resource-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-describe-component{
   $flags=(
      "--resource-group-name", 
      "--component-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-describe-component-configuration{
   $flags=(
      "--resource-group-name", 
      "--component-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-describe-component-configuration-recommendation{
   $flags=(
      "--resource-group-name", 
      "--component-name", 
      "--tier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-describe-log-pattern{
   $flags=(
      "--resource-group-name", 
      "--pattern-set-name", 
      "--pattern-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-describe-observation{
   $flags=(
      "--observation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-describe-problem{
   $flags=(
      "--problem-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-describe-problem-observations{
   $flags=(
      "--problem-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-list-applications{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-list-components{
   $flags=(
      "--resource-group-name", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-list-configuration-history{
   $flags=(
      "--resource-group-name", 
      "--start-time", 
      "--end-time", 
      "--event-status", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-list-log-pattern-sets{
   $flags=(
      "--resource-group-name", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-list-log-patterns{
   $flags=(
      "--resource-group-name", 
      "--pattern-set-name", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-list-problems{
   $flags=(
      "--resource-group-name", 
      "--start-time", 
      "--end-time", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-update-application{
   $flags=(
      "--resource-group-name", 
      "--ops-center-enabled", 
      "--no-ops-center-enabled", 
      "--cwe-monitor-enabled", 
      "--no-cwe-monitor-enabled", 
      "--ops-item-sns-topic-arn", 
      "--remove-sns-topic", 
      "--no-remove-sns-topic", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-update-component{
   $flags=(
      "--resource-group-name", 
      "--component-name", 
      "--new-component-name", 
      "--resource-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-update-component-configuration{
   $flags=(
      "--resource-group-name", 
      "--component-name", 
      "--monitor", 
      "--no-monitor", 
      "--tier", 
      "--component-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-application-insights-update-log-pattern{
   $flags=(
      "--resource-group-name", 
      "--pattern-set-name", 
      "--pattern-name", 
      "--pattern", 
      "--rank", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh{
   $commands=(
      "create-mesh", 
      "create-route", 
      "create-virtual-node", 
      "create-virtual-router", 
      "create-virtual-service", 
      "delete-mesh", 
      "delete-route", 
      "delete-virtual-node", 
      "delete-virtual-router", 
      "delete-virtual-service", 
      "describe-mesh", 
      "describe-route", 
      "describe-virtual-node", 
      "describe-virtual-router", 
      "describe-virtual-service", 
      "list-meshes", 
      "list-routes", 
      "list-tags-for-resource", 
      "list-virtual-nodes", 
      "list-virtual-routers", 
      "list-virtual-services", 
      "tag-resource", 
      "untag-resource", 
      "update-mesh", 
      "update-route", 
      "update-virtual-node", 
      "update-virtual-router", 
      "update-virtual-service"
    );
   return $commands;
}
function Get-appmesh-create-mesh{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--spec", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-create-route{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--mesh-owner", 
      "--route-name", 
      "--spec", 
      "--tags", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-create-virtual-node{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--mesh-owner", 
      "--spec", 
      "--tags", 
      "--virtual-node-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-create-virtual-router{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--mesh-owner", 
      "--spec", 
      "--tags", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-create-virtual-service{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--mesh-owner", 
      "--spec", 
      "--tags", 
      "--virtual-service-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-delete-mesh{
   $flags=(
      "--mesh-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-delete-route{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--route-name", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-delete-virtual-node{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--virtual-node-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-delete-virtual-router{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-delete-virtual-service{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--virtual-service-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-describe-mesh{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-describe-route{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--route-name", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-describe-virtual-node{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--virtual-node-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-describe-virtual-router{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-describe-virtual-service{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--virtual-service-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-list-meshes{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-list-routes{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-list-virtual-nodes{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-list-virtual-routers{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-list-virtual-services{
   $flags=(
      "--mesh-name", 
      "--mesh-owner", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-update-mesh{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--spec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-update-route{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--mesh-owner", 
      "--route-name", 
      "--spec", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-update-virtual-node{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--mesh-owner", 
      "--spec", 
      "--virtual-node-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-update-virtual-router{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--mesh-owner", 
      "--spec", 
      "--virtual-router-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appmesh-update-virtual-service{
   $flags=(
      "--client-token", 
      "--mesh-name", 
      "--mesh-owner", 
      "--spec", 
      "--virtual-service-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream{
   $commands=(
      "associate-fleet", 
      "batch-associate-user-stack", 
      "batch-disassociate-user-stack", 
      "copy-image", 
      "create-directory-config", 
      "create-fleet", 
      "create-image-builder", 
      "create-image-builder-streaming-url", 
      "create-stack", 
      "create-streaming-url", 
      "create-usage-report-subscription", 
      "create-user", 
      "delete-directory-config", 
      "delete-fleet", 
      "delete-image", 
      "delete-image-builder", 
      "delete-image-permissions", 
      "delete-stack", 
      "delete-usage-report-subscription", 
      "delete-user", 
      "describe-directory-configs", 
      "describe-fleets", 
      "describe-image-builders", 
      "describe-image-permissions", 
      "describe-images", 
      "describe-sessions", 
      "describe-stacks", 
      "describe-usage-report-subscriptions", 
      "describe-user-stack-associations", 
      "describe-users", 
      "disable-user", 
      "disassociate-fleet", 
      "enable-user", 
      "expire-session", 
      "list-associated-fleets", 
      "list-associated-stacks", 
      "list-tags-for-resource", 
      "start-fleet", 
      "start-image-builder", 
      "stop-fleet", 
      "stop-image-builder", 
      "tag-resource", 
      "untag-resource", 
      "update-directory-config", 
      "update-fleet", 
      "update-image-permissions", 
      "update-stack", 
      "wait"
    );
   return $commands;
}
function Get-appstream-associate-fleet{
   $flags=(
      "--fleet-name", 
      "--stack-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-batch-associate-user-stack{
   $flags=(
      "--user-stack-associations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-batch-disassociate-user-stack{
   $flags=(
      "--user-stack-associations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-copy-image{
   $flags=(
      "--source-image-name", 
      "--destination-image-name", 
      "--destination-region", 
      "--destination-image-description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-create-directory-config{
   $flags=(
      "--directory-name", 
      "--organizational-unit-distinguished-names", 
      "--service-account-credentials", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-create-fleet{
   $flags=(
      "--name", 
      "--image-name", 
      "--image-arn", 
      "--instance-type", 
      "--fleet-type", 
      "--compute-capacity", 
      "--vpc-config", 
      "--max-user-duration-in-seconds", 
      "--disconnect-timeout-in-seconds", 
      "--description", 
      "--display-name", 
      "--enable-default-internet-access", 
      "--no-enable-default-internet-access", 
      "--domain-join-info", 
      "--tags", 
      "--idle-disconnect-timeout-in-seconds", 
      "--iam-role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-create-image-builder{
   $flags=(
      "--name", 
      "--image-name", 
      "--image-arn", 
      "--instance-type", 
      "--description", 
      "--display-name", 
      "--vpc-config", 
      "--iam-role-arn", 
      "--enable-default-internet-access", 
      "--no-enable-default-internet-access", 
      "--domain-join-info", 
      "--appstream-agent-version", 
      "--tags", 
      "--access-endpoints", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-create-image-builder-streaming-url{
   $flags=(
      "--name", 
      "--validity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-create-stack{
   $flags=(
      "--name", 
      "--description", 
      "--display-name", 
      "--storage-connectors", 
      "--redirect-url", 
      "--feedback-url", 
      "--user-settings", 
      "--application-settings", 
      "--tags", 
      "--access-endpoints", 
      "--embed-host-domains", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-create-streaming-url{
   $flags=(
      "--stack-name", 
      "--fleet-name", 
      "--user-id", 
      "--application-id", 
      "--validity", 
      "--session-context", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-create-usage-report-subscription{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-create-user{
   $flags=(
      "--user-name", 
      "--message-action", 
      "--first-name", 
      "--last-name", 
      "--authentication-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-delete-directory-config{
   $flags=(
      "--directory-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-delete-fleet{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-delete-image{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-delete-image-builder{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-delete-image-permissions{
   $flags=(
      "--name", 
      "--shared-account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-delete-stack{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-delete-usage-report-subscription{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-delete-user{
   $flags=(
      "--user-name", 
      "--authentication-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-directory-configs{
   $flags=(
      "--directory-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-fleets{
   $flags=(
      "--names", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-image-builders{
   $flags=(
      "--names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-image-permissions{
   $flags=(
      "--name", 
      "--max-results", 
      "--shared-aws-account-ids", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-images{
   $flags=(
      "--names", 
      "--arns", 
      "--type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-sessions{
   $flags=(
      "--stack-name", 
      "--fleet-name", 
      "--user-id", 
      "--authentication-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-stacks{
   $flags=(
      "--names", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-usage-report-subscriptions{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-user-stack-associations{
   $flags=(
      "--stack-name", 
      "--user-name", 
      "--authentication-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-describe-users{
   $flags=(
      "--authentication-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-disable-user{
   $flags=(
      "--user-name", 
      "--authentication-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-disassociate-fleet{
   $flags=(
      "--fleet-name", 
      "--stack-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-enable-user{
   $flags=(
      "--user-name", 
      "--authentication-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-expire-session{
   $flags=(
      "--session-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-list-associated-fleets{
   $flags=(
      "--stack-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-list-associated-stacks{
   $flags=(
      "--fleet-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-start-fleet{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-start-image-builder{
   $flags=(
      "--name", 
      "--appstream-agent-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-stop-fleet{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-stop-image-builder{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-update-directory-config{
   $flags=(
      "--directory-name", 
      "--organizational-unit-distinguished-names", 
      "--service-account-credentials", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-update-fleet{
   $flags=(
      "--image-name", 
      "--image-arn", 
      "--name", 
      "--instance-type", 
      "--compute-capacity", 
      "--vpc-config", 
      "--max-user-duration-in-seconds", 
      "--disconnect-timeout-in-seconds", 
      "--delete-vpc-config", 
      "--no-delete-vpc-config", 
      "--description", 
      "--display-name", 
      "--enable-default-internet-access", 
      "--no-enable-default-internet-access", 
      "--domain-join-info", 
      "--idle-disconnect-timeout-in-seconds", 
      "--attributes-to-delete", 
      "--iam-role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-update-image-permissions{
   $flags=(
      "--name", 
      "--shared-account-id", 
      "--image-permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-update-stack{
   $flags=(
      "--display-name", 
      "--description", 
      "--name", 
      "--storage-connectors", 
      "--delete-storage-connectors", 
      "--no-delete-storage-connectors", 
      "--redirect-url", 
      "--feedback-url", 
      "--attributes-to-delete", 
      "--user-settings", 
      "--application-settings", 
      "--access-endpoints", 
      "--embed-host-domains", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appstream-wait{
   $flags=("");
   return $flags;
}
function Get-appsync{
   $commands=(
      "create-api-cache", 
      "create-api-key", 
      "create-data-source", 
      "create-function", 
      "create-graphql-api", 
      "create-resolver", 
      "create-type", 
      "delete-api-cache", 
      "delete-api-key", 
      "delete-data-source", 
      "delete-function", 
      "delete-graphql-api", 
      "delete-resolver", 
      "delete-type", 
      "flush-api-cache", 
      "get-api-cache", 
      "get-data-source", 
      "get-function", 
      "get-graphql-api", 
      "get-introspection-schema", 
      "get-resolver", 
      "get-schema-creation-status", 
      "get-type", 
      "list-api-keys", 
      "list-data-sources", 
      "list-functions", 
      "list-graphql-apis", 
      "list-resolvers", 
      "list-resolvers-by-function", 
      "list-tags-for-resource", 
      "list-types", 
      "start-schema-creation", 
      "tag-resource", 
      "untag-resource", 
      "update-api-cache", 
      "update-api-key", 
      "update-data-source", 
      "update-function", 
      "update-graphql-api", 
      "update-resolver", 
      "update-type"
    );
   return $commands;
}
function Get-appsync-create-api-cache{
   $flags=(
      "--api-id", 
      "--ttl", 
      "--transit-encryption-enabled", 
      "--no-transit-encryption-enabled", 
      "--at-rest-encryption-enabled", 
      "--no-at-rest-encryption-enabled", 
      "--api-caching-behavior", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-create-api-key{
   $flags=(
      "--api-id", 
      "--description", 
      "--expires", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-create-data-source{
   $flags=(
      "--api-id", 
      "--name", 
      "--description", 
      "--type", 
      "--service-role-arn", 
      "--dynamodb-config", 
      "--lambda-config", 
      "--elasticsearch-config", 
      "--http-config", 
      "--relational-database-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-create-{
   $flags=(
      "--api-id", 
      "--name", 
      "--description", 
      "--data-source-name", 
      "--request-mapping-template", 
      "--response-mapping-template", 
      "---version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-create-graphql-api{
   $flags=(
      "--name", 
      "--log-config", 
      "--authentication-type", 
      "--user-pool-config", 
      "--open-id-connect-config", 
      "--tags", 
      "--additional-authentication-providers", 
      "--xray-enabled", 
      "--no-xray-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-create-resolver{
   $flags=(
      "--api-id", 
      "--type-name", 
      "--field-name", 
      "--data-source-name", 
      "--request-mapping-template", 
      "--response-mapping-template", 
      "--kind", 
      "--pipeline-config", 
      "--sync-config", 
      "--caching-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-create-type{
   $flags=(
      "--api-id", 
      "--definition", 
      "--format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-delete-api-cache{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-delete-api-key{
   $flags=(
      "--api-id", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-delete-data-source{
   $flags=(
      "--api-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-delete-{
   $flags=(
      "--api-id", 
      "---id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-delete-graphql-api{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-delete-resolver{
   $flags=(
      "--api-id", 
      "--type-name", 
      "--field-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-delete-type{
   $flags=(
      "--api-id", 
      "--type-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-flush-api-cache{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-get-api-cache{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-get-data-source{
   $flags=(
      "--api-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-get-{
   $flags=(
      "--api-id", 
      "---id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-get-graphql-api{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-get-introspection-schema{
   $flags=(
      "--api-id", 
      "--format", 
      "--include-directives", 
      "--no-include-directives"
    );
   return $flags;
}
function Get-appsync-get-resolver{
   $flags=(
      "--api-id", 
      "--type-name", 
      "--field-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-get-schema-creation-status{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-get-type{
   $flags=(
      "--api-id", 
      "--type-name", 
      "--format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-list-api-keys{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-list-data-sources{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-list-s{
   $flags=(
      "--api-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-list-graphql-apis{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-list-resolvers{
   $flags=(
      "--api-id", 
      "--type-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-list-resolvers-by-{
   $flags=(
      "--api-id", 
      "---id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-list-types{
   $flags=(
      "--api-id", 
      "--format", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-start-schema-creation{
   $flags=(
      "--api-id", 
      "--definition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-update-api-cache{
   $flags=(
      "--api-id", 
      "--ttl", 
      "--api-caching-behavior", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-update-api-key{
   $flags=(
      "--api-id", 
      "--id", 
      "--description", 
      "--expires", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-update-data-source{
   $flags=(
      "--api-id", 
      "--name", 
      "--description", 
      "--type", 
      "--service-role-arn", 
      "--dynamodb-config", 
      "--lambda-config", 
      "--elasticsearch-config", 
      "--http-config", 
      "--relational-database-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-update-{
   $flags=(
      "--api-id", 
      "--name", 
      "--description", 
      "---id", 
      "--data-source-name", 
      "--request-mapping-template", 
      "--response-mapping-template", 
      "---version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-update-graphql-api{
   $flags=(
      "--api-id", 
      "--name", 
      "--log-config", 
      "--authentication-type", 
      "--user-pool-config", 
      "--open-id-connect-config", 
      "--additional-authentication-providers", 
      "--xray-enabled", 
      "--no-xray-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-update-resolver{
   $flags=(
      "--api-id", 
      "--type-name", 
      "--field-name", 
      "--data-source-name", 
      "--request-mapping-template", 
      "--response-mapping-template", 
      "--kind", 
      "--pipeline-config", 
      "--sync-config", 
      "--caching-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-appsync-update-type{
   $flags=(
      "--api-id", 
      "--type-name", 
      "--definition", 
      "--format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena{
   $commands=(
      "batch-get-named-query", 
      "batch-get-query-execution", 
      "create-named-query", 
      "create-work-group", 
      "delete-named-query", 
      "delete-work-group", 
      "get-named-query", 
      "get-query-execution", 
      "get-query-results", 
      "get-work-group", 
      "list-named-queries", 
      "list-query-executions", 
      "list-tags-for-resource", 
      "list-work-groups", 
      "start-query-execution", 
      "stop-query-execution", 
      "tag-resource", 
      "untag-resource", 
      "update-work-group"
    );
   return $commands;
}
function Get-athena-batch-get-named-query{
   $flags=(
      "--named-query-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-batch-get-query-execution{
   $flags=(
      "--query-execution-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-create-named-query{
   $flags=(
      "--name", 
      "--description", 
      "--database", 
      "--query-string", 
      "--client-request-token", 
      "--work-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-create-work-group{
   $flags=(
      "--name", 
      "--configuration", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-delete-named-query{
   $flags=(
      "--named-query-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-delete-work-group{
   $flags=(
      "--work-group", 
      "--recursive-delete-option", 
      "--no-recursive-delete-option", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-get-named-query{
   $flags=(
      "--named-query-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-get-query-execution{
   $flags=(
      "--query-execution-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-get-query-results{
   $flags=(
      "--query-execution-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-get-work-group{
   $flags=(
      "--work-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-list-named-queries{
   $flags=(
      "--work-group", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-list-query-executions{
   $flags=(
      "--work-group", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-list-work-groups{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-start-query-execution{
   $flags=(
      "--query-string", 
      "--client-request-token", 
      "--query-execution-context", 
      "--result-configuration", 
      "--work-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-stop-query-execution{
   $flags=(
      "--query-execution-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-athena-update-work-group{
   $flags=(
      "--work-group", 
      "--description", 
      "--configuration-updates", 
      "--state", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling{
   $commands=(
      "attach-instances", 
      "attach-load-balancer-target-groups", 
      "attach-load-balancers", 
      "batch-delete-scheduled-action", 
      "batch-put-scheduled-update-group-action", 
      "complete-lifecycle-action", 
      "create-auto-scaling-group", 
      "create-launch-configuration", 
      "create-or-update-tags", 
      "delete-auto-scaling-group", 
      "delete-launch-configuration", 
      "delete-lifecycle-hook", 
      "delete-notification-configuration", 
      "delete-policy", 
      "delete-scheduled-action", 
      "delete-tags", 
      "describe-account-limits", 
      "describe-adjustment-types", 
      "describe-auto-scaling-groups", 
      "describe-auto-scaling-instances", 
      "describe-auto-scaling-notification-types", 
      "describe-launch-configurations", 
      "describe-lifecycle-hook-types", 
      "describe-lifecycle-hooks", 
      "describe-load-balancer-target-groups", 
      "describe-load-balancers", 
      "describe-metric-collection-types", 
      "describe-notification-configurations", 
      "describe-policies", 
      "describe-scaling-activities", 
      "describe-scaling-process-types", 
      "describe-scheduled-actions", 
      "describe-tags", 
      "describe-termination-policy-types", 
      "detach-instances", 
      "detach-load-balancer-target-groups", 
      "detach-load-balancers", 
      "disable-metrics-collection", 
      "enable-metrics-collection", 
      "enter-standby", 
      "execute-policy", 
      "exit-standby", 
      "put-lifecycle-hook", 
      "put-notification-configuration", 
      "put-scaling-policy", 
      "put-scheduled-update-group-action", 
      "record-lifecycle-action-heartbeat", 
      "resume-processes", 
      "set-desired-capacity", 
      "set-instance-health", 
      "set-instance-protection", 
      "suspend-processes", 
      "terminate-instance-in-auto-scaling-group", 
      "update-auto-scaling-group"
    );
   return $commands;
}
function Get-autoscaling-attach-instances{
   $flags=(
      "--instance-ids", 
      "--auto-scaling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-attach-load-balancer-target-groups{
   $flags=(
      "--auto-scaling-group-name", 
      "--target-group-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-attach-load-balancers{
   $flags=(
      "--auto-scaling-group-name", 
      "--load-balancer-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-batch-delete-scheduled-action{
   $flags=(
      "--auto-scaling-group-name", 
      "--scheduled-action-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-batch-put-scheduled-update-group-action{
   $flags=(
      "--auto-scaling-group-name", 
      "--scheduled-update-group-actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-complete-lifecycle-action{
   $flags=(
      "--lifecycle-hook-name", 
      "--auto-scaling-group-name", 
      "--lifecycle-action-token", 
      "--lifecycle-action-result", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-create-auto-scaling-group{
   $flags=(
      "--auto-scaling-group-name", 
      "--launch-configuration-name", 
      "--launch-template", 
      "--mixed-instances-policy", 
      "--instance-id", 
      "--min-size", 
      "--max-size", 
      "--desired-capacity", 
      "--default-cooldown", 
      "--availability-zones", 
      "--load-balancer-names", 
      "--target-group-arns", 
      "--health-check-type", 
      "--health-check-grace-period", 
      "--placement-group", 
      "--vpc-zone-identifier", 
      "--termination-policies", 
      "--new-instances-protected-from-scale-in", 
      "--no-new-instances-protected-from-scale-in", 
      "--lifecycle-hook-specification-list", 
      "--tags", 
      "--service-linked-role-arn", 
      "--max-instance-lifetime", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-create-launch-configuration{
   $flags=(
      "--launch-configuration-name", 
      "--image-id", 
      "--key-name", 
      "--security-groups", 
      "--classic-link-vpc-id", 
      "--classic-link-vpc-security-groups", 
      "--user-data", 
      "--instance-id", 
      "--instance-type", 
      "--kernel-id", 
      "--ramdisk-id", 
      "--block-device-mappings", 
      "--instance-monitoring", 
      "--spot-price", 
      "--iam-instance-profile", 
      "--ebs-optimized", 
      "--no-ebs-optimized", 
      "--associate-public-ip-address", 
      "--no-associate-public-ip-address", 
      "--placement-tenancy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-create-or-update-tags{
   $flags=(
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-delete-auto-scaling-group{
   $flags=(
      "--auto-scaling-group-name", 
      "--force-delete", 
      "--no-force-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-delete-launch-configuration{
   $flags=(
      "--launch-configuration-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-delete-lifecycle-hook{
   $flags=(
      "--lifecycle-hook-name", 
      "--auto-scaling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-delete-notification-configuration{
   $flags=(
      "--auto-scaling-group-name", 
      "--topic-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-delete-policy{
   $flags=(
      "--auto-scaling-group-name", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-delete-scheduled-action{
   $flags=(
      "--auto-scaling-group-name", 
      "--scheduled-action-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-delete-tags{
   $flags=(
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-account-limits{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-adjustment-types{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-auto-scaling-groups{
   $flags=(
      "--auto-scaling-group-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-auto-scaling-instances{
   $flags=(
      "--instance-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-auto-scaling-notification-types{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-launch-configurations{
   $flags=(
      "--launch-configuration-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-lifecycle-hook-types{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-lifecycle-hooks{
   $flags=(
      "--auto-scaling-group-name", 
      "--lifecycle-hook-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-load-balancer-target-groups{
   $flags=(
      "--auto-scaling-group-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-load-balancers{
   $flags=(
      "--auto-scaling-group-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-metric-collection-types{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-notification-configurations{
   $flags=(
      "--auto-scaling-group-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-policies{
   $flags=(
      "--auto-scaling-group-name", 
      "--policy-names", 
      "--policy-types", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-scaling-activities{
   $flags=(
      "--activity-ids", 
      "--auto-scaling-group-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-scaling-process-types{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-scheduled-actions{
   $flags=(
      "--auto-scaling-group-name", 
      "--scheduled-action-names", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-tags{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-describe-termination-policy-types{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-detach-instances{
   $flags=(
      "--instance-ids", 
      "--auto-scaling-group-name", 
      "--should-decrement-desired-capacity", 
      "--no-should-decrement-desired-capacity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-detach-load-balancer-target-groups{
   $flags=(
      "--auto-scaling-group-name", 
      "--target-group-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-detach-load-balancers{
   $flags=(
      "--auto-scaling-group-name", 
      "--load-balancer-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-disable-metrics-collection{
   $flags=(
      "--auto-scaling-group-name", 
      "--metrics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-enable-metrics-collection{
   $flags=(
      "--auto-scaling-group-name", 
      "--metrics", 
      "--granularity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-enter-standby{
   $flags=(
      "--instance-ids", 
      "--auto-scaling-group-name", 
      "--should-decrement-desired-capacity", 
      "--no-should-decrement-desired-capacity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-execute-policy{
   $flags=(
      "--auto-scaling-group-name", 
      "--policy-name", 
      "--honor-cooldown", 
      "--no-honor-cooldown", 
      "--metric-value", 
      "--breach-threshold", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-exit-standby{
   $flags=(
      "--instance-ids", 
      "--auto-scaling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-put-lifecycle-hook{
   $flags=(
      "--lifecycle-hook-name", 
      "--auto-scaling-group-name", 
      "--lifecycle-transition", 
      "--role-arn", 
      "--notification-target-arn", 
      "--notification-metadata", 
      "--heartbeat-timeout", 
      "--default-result", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-put-notification-configuration{
   $flags=(
      "--auto-scaling-group-name", 
      "--topic-arn", 
      "--notification-types", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-put-scaling-policy{
   $flags=(
      "--auto-scaling-group-name", 
      "--policy-name", 
      "--policy-type", 
      "--adjustment-type", 
      "--min-adjustment-step", 
      "--min-adjustment-magnitude", 
      "--scaling-adjustment", 
      "--cooldown", 
      "--metric-aggregation-type", 
      "--step-adjustments", 
      "--estimated-instance-warmup", 
      "--target-tracking-configuration", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-put-scheduled-update-group-action{
   $flags=(
      "--auto-scaling-group-name", 
      "--scheduled-action-name", 
      "--time", 
      "--start-time", 
      "--end-time", 
      "--recurrence", 
      "--min-size", 
      "--max-size", 
      "--desired-capacity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-record-lifecycle-action-heartbeat{
   $flags=(
      "--lifecycle-hook-name", 
      "--auto-scaling-group-name", 
      "--lifecycle-action-token", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-resume-processes{
   $flags=(
      "--auto-scaling-group-name", 
      "--scaling-processes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-set-desired-capacity{
   $flags=(
      "--auto-scaling-group-name", 
      "--desired-capacity", 
      "--honor-cooldown", 
      "--no-honor-cooldown", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-set-instance-health{
   $flags=(
      "--instance-id", 
      "--health-status", 
      "--should-respect-grace-period", 
      "--no-should-respect-grace-period", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-set-instance-protection{
   $flags=(
      "--instance-ids", 
      "--auto-scaling-group-name", 
      "--protected-from-scale-in", 
      "--no-protected-from-scale-in", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-suspend-processes{
   $flags=(
      "--auto-scaling-group-name", 
      "--scaling-processes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-terminate-instance-in-auto-scaling-group{
   $flags=(
      "--instance-id", 
      "--should-decrement-desired-capacity", 
      "--no-should-decrement-desired-capacity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-update-auto-scaling-group{
   $flags=(
      "--auto-scaling-group-name", 
      "--launch-configuration-name", 
      "--launch-template", 
      "--mixed-instances-policy", 
      "--min-size", 
      "--max-size", 
      "--desired-capacity", 
      "--default-cooldown", 
      "--availability-zones", 
      "--health-check-type", 
      "--health-check-grace-period", 
      "--placement-group", 
      "--vpc-zone-identifier", 
      "--termination-policies", 
      "--new-instances-protected-from-scale-in", 
      "--no-new-instances-protected-from-scale-in", 
      "--service-linked-role-arn", 
      "--max-instance-lifetime", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-plans{
   $commands=(
      "create-scaling-plan", 
      "delete-scaling-plan", 
      "describe-scaling-plan-resources", 
      "describe-scaling-plans", 
      "get-scaling-plan-resource-forecast-data", 
      "update-scaling-plan"
    );
   return $commands;
}
function Get-autoscaling-plans-create-scaling-plan{
   $flags=(
      "--scaling-plan-name", 
      "--application-source", 
      "--scaling-instructions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-plans-delete-scaling-plan{
   $flags=(
      "--scaling-plan-name", 
      "--scaling-plan-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-plans-describe-scaling-plan-resources{
   $flags=(
      "--scaling-plan-name", 
      "--scaling-plan-version", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-plans-describe-scaling-plans{
   $flags=(
      "--scaling-plan-names", 
      "--scaling-plan-version", 
      "--application-sources", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-plans-get-scaling-plan-resource-forecast-data{
   $flags=(
      "--scaling-plan-name", 
      "--scaling-plan-version", 
      "--service-namespace", 
      "--resource-id", 
      "--scalable-dimension", 
      "--forecast-data-type", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-autoscaling-plans-update-scaling-plan{
   $flags=(
      "--scaling-plan-name", 
      "--scaling-plan-version", 
      "--application-source", 
      "--scaling-instructions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup{
   $commands=(
      "create-backup-plan", 
      "create-backup-selection", 
      "create-backup-vault", 
      "delete-backup-plan", 
      "delete-backup-selection", 
      "delete-backup-vault", 
      "delete-backup-vault-access-policy", 
      "delete-backup-vault-notifications", 
      "delete-recovery-point", 
      "describe-backup-job", 
      "describe-backup-vault", 
      "describe-copy-job", 
      "describe-protected-resource", 
      "describe-recovery-point", 
      "describe-restore-job", 
      "export-backup-plan-template", 
      "get-backup-plan", 
      "get-backup-plan-from-json", 
      "get-backup-plan-from-template", 
      "get-backup-selection", 
      "get-backup-vault-access-policy", 
      "get-backup-vault-notifications", 
      "get-recovery-point-restore-metadata", 
      "get-supported-resource-types", 
      "list-backup-jobs", 
      "list-backup-plan-templates", 
      "list-backup-plan-versions", 
      "list-backup-plans", 
      "list-backup-selections", 
      "list-backup-vaults", 
      "list-copy-jobs", 
      "list-protected-resources", 
      "list-recovery-points-by-backup-vault", 
      "list-recovery-points-by-resource", 
      "list-restore-jobs", 
      "list-tags", 
      "put-backup-vault-access-policy", 
      "put-backup-vault-notifications", 
      "start-backup-job", 
      "start-copy-job", 
      "start-restore-job", 
      "stop-backup-job", 
      "tag-resource", 
      "untag-resource", 
      "update-backup-plan", 
      "update-recovery-point-lifecycle"
    );
   return $commands;
}
function Get-backup-create-backup-plan{
   $flags=(
      "--backup-plan", 
      "--backup-plan-tags", 
      "--creator-request-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-create-backup-selection{
   $flags=(
      "--backup-plan-id", 
      "--backup-selection", 
      "--creator-request-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-create-backup-vault{
   $flags=(
      "--backup-vault-name", 
      "--backup-vault-tags", 
      "--encryption-key-arn", 
      "--creator-request-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-delete-backup-plan{
   $flags=(
      "--backup-plan-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-delete-backup-selection{
   $flags=(
      "--backup-plan-id", 
      "--selection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-delete-backup-vault{
   $flags=(
      "--backup-vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-delete-backup-vault-access-policy{
   $flags=(
      "--backup-vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-delete-backup-vault-notifications{
   $flags=(
      "--backup-vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-delete-recovery-point{
   $flags=(
      "--backup-vault-name", 
      "--recovery-point-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-describe-backup-job{
   $flags=(
      "--backup-job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-describe-backup-vault{
   $flags=(
      "--backup-vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-describe-copy-job{
   $flags=(
      "--copy-job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-describe-protected-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-describe-recovery-point{
   $flags=(
      "--backup-vault-name", 
      "--recovery-point-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-describe-restore-job{
   $flags=(
      "--restore-job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-export-backup-plan-template{
   $flags=(
      "--backup-plan-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-get-backup-plan{
   $flags=(
      "--backup-plan-id", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-get-backup-plan-from-json{
   $flags=(
      "--backup-plan-template-json", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-get-backup-plan-from-template{
   $flags=(
      "--backup-plan-template-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-get-backup-selection{
   $flags=(
      "--backup-plan-id", 
      "--selection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-get-backup-vault-access-policy{
   $flags=(
      "--backup-vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-get-backup-vault-notifications{
   $flags=(
      "--backup-vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-get-recovery-point-restore-metadata{
   $flags=(
      "--backup-vault-name", 
      "--recovery-point-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-get-supported-resource-types{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-backup-jobs{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--by-resource-arn", 
      "--by-state", 
      "--by-backup-vault-name", 
      "--by-created-before", 
      "--by-created-after", 
      "--by-resource-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-backup-plan-templates{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-backup-plan-versions{
   $flags=(
      "--backup-plan-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-backup-plans{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--include-deleted", 
      "--no-include-deleted", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-backup-selections{
   $flags=(
      "--backup-plan-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-backup-vaults{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-copy-jobs{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--by-resource-arn", 
      "--by-state", 
      "--by-created-before", 
      "--by-created-after", 
      "--by-resource-type", 
      "--by-destination-vault-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-protected-resources{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-recovery-points-by-backup-vault{
   $flags=(
      "--backup-vault-name", 
      "--next-token", 
      "--max-results", 
      "--by-resource-arn", 
      "--by-resource-type", 
      "--by-backup-plan-id", 
      "--by-created-before", 
      "--by-created-after", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-recovery-points-by-resource{
   $flags=(
      "--resource-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-restore-jobs{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-list-tags{
   $flags=(
      "--resource-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-put-backup-vault-access-policy{
   $flags=(
      "--backup-vault-name", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-put-backup-vault-notifications{
   $flags=(
      "--backup-vault-name", 
      "--sns-topic-arn", 
      "--backup-vault-events", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-start-backup-job{
   $flags=(
      "--backup-vault-name", 
      "--resource-arn", 
      "--iam-role-arn", 
      "--idempotency-token", 
      "--start-window-minutes", 
      "--complete-window-minutes", 
      "--lifecycle", 
      "--recovery-point-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-start-copy-job{
   $flags=(
      "--recovery-point-arn", 
      "--source-backup-vault-name", 
      "--destination-backup-vault-arn", 
      "--iam-role-arn", 
      "--idempotency-token", 
      "--lifecycle", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-start-restore-job{
   $flags=(
      "--recovery-point-arn", 
      "--metadata", 
      "--iam-role-arn", 
      "--idempotency-token", 
      "--resource-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-stop-backup-job{
   $flags=(
      "--backup-job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-key-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-update-backup-plan{
   $flags=(
      "--backup-plan-id", 
      "--backup-plan", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-backup-update-recovery-point-lifecycle{
   $flags=(
      "--backup-vault-name", 
      "--recovery-point-arn", 
      "--lifecycle", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch{
   $commands=(
      "cancel-job", 
      "create-compute-environment", 
      "create-job-queue", 
      "delete-compute-environment", 
      "delete-job-queue", 
      "deregister-job-definition", 
      "describe-compute-environments", 
      "describe-job-definitions", 
      "describe-job-queues", 
      "describe-jobs", 
      "list-jobs", 
      "register-job-definition", 
      "submit-job", 
      "terminate-job", 
      "update-compute-environment", 
      "update-job-queue"
    );
   return $commands;
}
function Get-batch-cancel-job{
   $flags=(
      "--job-id", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-create-compute-environment{
   $flags=(
      "--compute-environment-name", 
      "--type", 
      "--state", 
      "--compute-resources", 
      "--service-role", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-create-job-queue{
   $flags=(
      "--job-queue-name", 
      "--state", 
      "--priority", 
      "--compute-environment-order", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-delete-compute-environment{
   $flags=(
      "--compute-environment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-delete-job-queue{
   $flags=(
      "--job-queue", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-deregister-job-definition{
   $flags=(
      "--job-definition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-describe-compute-environments{
   $flags=(
      "--compute-environments", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-describe-job-definitions{
   $flags=(
      "--job-definitions", 
      "--job-definition-name", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-describe-job-queues{
   $flags=(
      "--job-queues", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-describe-jobs{
   $flags=(
      "--jobs", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-list-jobs{
   $flags=(
      "--job-queue", 
      "--array-job-id", 
      "--multi-node-job-id", 
      "--job-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-register-job-definition{
   $flags=(
      "--job-definition-name", 
      "--type", 
      "--parameters", 
      "--container-properties", 
      "--node-properties", 
      "--retry-strategy", 
      "--timeout", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-submit-job{
   $flags=(
      "--job-name", 
      "--job-queue", 
      "--array-properties", 
      "--depends-on", 
      "--job-definition", 
      "--parameters", 
      "--container-overrides", 
      "--node-overrides", 
      "--retry-strategy", 
      "--timeout", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-terminate-job{
   $flags=(
      "--job-id", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-update-compute-environment{
   $flags=(
      "--compute-environment", 
      "--state", 
      "--compute-resources", 
      "--service-role", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-batch-update-job-queue{
   $flags=(
      "--job-queue", 
      "--state", 
      "--priority", 
      "--compute-environment-order", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets{
   $commands=(
      "create-budget", 
      "create-notification", 
      "create-subscriber", 
      "delete-budget", 
      "delete-notification", 
      "delete-subscriber", 
      "describe-budget", 
      "describe-budget-performance-history", 
      "describe-budgets", 
      "describe-notifications-for-budget", 
      "describe-subscribers-for-notification", 
      "update-budget", 
      "update-notification", 
      "update-subscriber"
    );
   return $commands;
}
function Get-budgets-create-budget{
   $flags=(
      "--account-id", 
      "--budget", 
      "--notifications-with-subscribers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-create-notification{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--notification", 
      "--subscribers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-create-subscriber{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--notification", 
      "--subscriber", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-delete-budget{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-delete-notification{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--notification", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-delete-subscriber{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--notification", 
      "--subscriber", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-describe-budget{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-describe-budget-performance-history{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--time-period", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-describe-budgets{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-describe-notifications-for-budget{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-describe-subscribers-for-notification{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--notification", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-update-budget{
   $flags=(
      "--account-id", 
      "--new-budget", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-update-notification{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--old-notification", 
      "--new-notification", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-budgets-update-subscriber{
   $flags=(
      "--account-id", 
      "--budget-name", 
      "--notification", 
      "--old-subscriber", 
      "--new-subscriber", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce{
   $commands=(
      "create-cost-category-definition", 
      "delete-cost-category-definition", 
      "describe-cost-category-definition", 
      "get-cost-and-usage", 
      "get-cost-and-usage-with-resources", 
      "get-cost-forecast", 
      "get-dimension-values", 
      "get-reservation-coverage", 
      "get-reservation-purchase-recommendation", 
      "get-reservation-utilization", 
      "get-rightsizing-recommendation", 
      "get-savings-plans-coverage", 
      "get-savings-plans-purchase-recommendation", 
      "get-savings-plans-utilization", 
      "get-savings-plans-utilization-details", 
      "get-tags", 
      "get-usage-forecast", 
      "list-cost-category-definitions", 
      "update-cost-category-definition"
    );
   return $commands;
}
function Get-ce-create-cost-category-definition{
   $flags=(
      "--name", 
      "--rule-version", 
      "--rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-delete-cost-category-definition{
   $flags=(
      "--cost-category-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-describe-cost-category-definition{
   $flags=(
      "--cost-category-arn", 
      "--effective-on", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-cost-and-usage{
   $flags=(
      "--time-period", 
      "--granularity", 
      "--filter", 
      "--metrics", 
      "--group-by", 
      "--next-page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-cost-and-usage-with-resources{
   $flags=(
      "--time-period", 
      "--granularity", 
      "--filter", 
      "--metrics", 
      "--group-by", 
      "--next-page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-cost-forecast{
   $flags=(
      "--time-period", 
      "--metric", 
      "--granularity", 
      "--filter", 
      "--prediction-interval-level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-dimension-values{
   $flags=(
      "--search-string", 
      "--time-period", 
      "--dimension", 
      "--context", 
      "--next-page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-reservation-coverage{
   $flags=(
      "--time-period", 
      "--group-by", 
      "--granularity", 
      "--filter", 
      "--metrics", 
      "--next-page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-reservation-purchase-recommendation{
   $flags=(
      "--account-id", 
      "--service", 
      "--account-scope", 
      "--lookback-period-in-days", 
      "--term-in-years", 
      "--payment-option", 
      "--service-specification", 
      "--page-size", 
      "--next-page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-reservation-utilization{
   $flags=(
      "--time-period", 
      "--group-by", 
      "--granularity", 
      "--filter", 
      "--next-page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-rightsizing-recommendation{
   $flags=(
      "--filter", 
      "--configuration", 
      "--service", 
      "--page-size", 
      "--next-page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-savings-plans-coverage{
   $flags=(
      "--time-period", 
      "--group-by", 
      "--granularity", 
      "--filter", 
      "--metrics", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-savings-plans-purchase-recommendation{
   $flags=(
      "--savings-plans-type", 
      "--term-in-years", 
      "--payment-option", 
      "--account-scope", 
      "--next-page-token", 
      "--page-size", 
      "--lookback-period-in-days", 
      "--filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-savings-plans-utilization{
   $flags=(
      "--time-period", 
      "--granularity", 
      "--filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-savings-plans-utilization-details{
   $flags=(
      "--time-period", 
      "--filter", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-tags{
   $flags=(
      "--search-string", 
      "--time-period", 
      "--tag-key", 
      "--next-page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-get-usage-forecast{
   $flags=(
      "--time-period", 
      "--metric", 
      "--granularity", 
      "--filter", 
      "--prediction-interval-level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-list-cost-category-definitions{
   $flags=(
      "--effective-on", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ce-update-cost-category-definition{
   $flags=(
      "--cost-category-arn", 
      "--rule-version", 
      "--rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime{
   $commands=(
      "associate-phone-number-with-user", 
      "associate-phone-numbers-with-voice-connector", 
      "associate-phone-numbers-with-voice-connector-group", 
      "associate-signin-delegate-groups-with-account", 
      "batch-create-attendee", 
      "batch-create-room-membership", 
      "batch-delete-phone-number", 
      "batch-suspend-user", 
      "batch-unsuspend-user", 
      "batch-update-phone-number", 
      "batch-update-user", 
      "create-account", 
      "create-attendee", 
      "create-bot", 
      "create-meeting", 
      "create-phone-number-order", 
      "create-proxy-session", 
      "create-room", 
      "create-room-membership", 
      "create-user", 
      "create-voice-connector", 
      "create-voice-connector-group", 
      "delete-account", 
      "delete-attendee", 
      "delete-events-configuration", 
      "delete-meeting", 
      "delete-phone-number", 
      "delete-proxy-session", 
      "delete-room", 
      "delete-room-membership", 
      "delete-voice-connector", 
      "delete-voice-connector-group", 
      "delete-voice-connector-origination", 
      "delete-voice-connector-proxy", 
      "delete-voice-connector-streaming-configuration", 
      "delete-voice-connector-termination", 
      "delete-voice-connector-termination-credentials", 
      "disassociate-phone-number-from-user", 
      "disassociate-phone-numbers-from-voice-connector", 
      "disassociate-phone-numbers-from-voice-connector-group", 
      "disassociate-signin-delegate-groups-from-account", 
      "get-account", 
      "get-account-settings", 
      "get-attendee", 
      "get-bot", 
      "get-events-configuration", 
      "get-global-settings", 
      "get-meeting", 
      "get-phone-number", 
      "get-phone-number-order", 
      "get-phone-number-settings", 
      "get-proxy-session", 
      "get-room", 
      "get-user", 
      "get-user-settings", 
      "get-voice-connector", 
      "get-voice-connector-group", 
      "get-voice-connector-logging-configuration", 
      "get-voice-connector-origination", 
      "get-voice-connector-proxy", 
      "get-voice-connector-streaming-configuration", 
      "get-voice-connector-termination", 
      "get-voice-connector-termination-health", 
      "invite-users", 
      "list-accounts", 
      "list-attendee-tags", 
      "list-attendees", 
      "list-bots", 
      "list-meeting-tags", 
      "list-meetings", 
      "list-phone-number-orders", 
      "list-phone-numbers", 
      "list-proxy-sessions", 
      "list-room-memberships", 
      "list-rooms", 
      "list-tags-for-resource", 
      "list-users", 
      "list-voice-connector-groups", 
      "list-voice-connector-termination-credentials", 
      "list-voice-connectors", 
      "logout-user", 
      "put-events-configuration", 
      "put-voice-connector-logging-configuration", 
      "put-voice-connector-origination", 
      "put-voice-connector-proxy", 
      "put-voice-connector-streaming-configuration", 
      "put-voice-connector-termination", 
      "put-voice-connector-termination-credentials", 
      "regenerate-security-token", 
      "reset-personal-pin", 
      "restore-phone-number", 
      "search-available-phone-numbers", 
      "tag-attendee", 
      "tag-meeting", 
      "tag-resource", 
      "untag-attendee", 
      "untag-meeting", 
      "untag-resource", 
      "update-account", 
      "update-account-settings", 
      "update-bot", 
      "update-global-settings", 
      "update-phone-number", 
      "update-phone-number-settings", 
      "update-proxy-session", 
      "update-room", 
      "update-room-membership", 
      "update-user", 
      "update-user-settings", 
      "update-voice-connector", 
      "update-voice-connector-group"
    );
   return $commands;
}
function Get-chime-associate-phone-number-with-user{
   $flags=(
      "--account-id", 
      "--user-id", 
      "--e", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-associate-phone-numbers-with-voice-connector{
   $flags=(
      "--voice-connector-id", 
      "--e", 
      "--force-associate", 
      "--no-force-associate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-associate-phone-numbers-with-voice-connector-group{
   $flags=(
      "--voice-connector-group-id", 
      "--e", 
      "--force-associate", 
      "--no-force-associate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-associate-signin-delegate-groups-with-account{
   $flags=(
      "--account-id", 
      "--signin-delegate-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-batch-create-attendee{
   $flags=(
      "--meeting-id", 
      "--attendees", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-batch-create-room-membership{
   $flags=(
      "--account-id", 
      "--room-id", 
      "--membership-item-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-batch-delete-phone-number{
   $flags=(
      "--phone-number-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-batch-suspend-user{
   $flags=(
      "--account-id", 
      "--user-id-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-batch-unsuspend-user{
   $flags=(
      "--account-id", 
      "--user-id-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-batch-update-phone-number{
   $flags=(
      "--update-phone-number-request-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-batch-update-user{
   $flags=(
      "--account-id", 
      "--update-user-request-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-account{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-attendee{
   $flags=(
      "--meeting-id", 
      "--external-user-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-bot{
   $flags=(
      "--account-id", 
      "--display-name", 
      "--domain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-meeting{
   $flags=(
      "--client-request-token", 
      "--external-meeting-id", 
      "--meeting-host-id", 
      "--media-region", 
      "--tags", 
      "--notifications-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-phone-number-order{
   $flags=(
      "--product-type", 
      "--e", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-proxy-session{
   $flags=(
      "--voice-connector-id", 
      "--participant-phone-numbers", 
      "--name", 
      "--expiry-minutes", 
      "--capabilities", 
      "--number-selection-behavior", 
      "--geo-match-level", 
      "--geo-match-params", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-room{
   $flags=(
      "--account-id", 
      "--name", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-room-membership{
   $flags=(
      "--account-id", 
      "--room-id", 
      "--member-id", 
      "--role", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-user{
   $flags=(
      "--account-id", 
      "--username", 
      "--email", 
      "--user-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-voice-connector{
   $flags=(
      "--name", 
      "--aws-region", 
      "--require-encryption", 
      "--no-require-encryption", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-create-voice-connector-group{
   $flags=(
      "--name", 
      "--voice-connector-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-account{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-attendee{
   $flags=(
      "--meeting-id", 
      "--attendee-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-events-configuration{
   $flags=(
      "--account-id", 
      "--bot-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-meeting{
   $flags=(
      "--meeting-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-phone-number{
   $flags=(
      "--phone-number-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-proxy-session{
   $flags=(
      "--voice-connector-id", 
      "--proxy-session-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-room{
   $flags=(
      "--account-id", 
      "--room-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-room-membership{
   $flags=(
      "--account-id", 
      "--room-id", 
      "--member-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-voice-connector{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-voice-connector-group{
   $flags=(
      "--voice-connector-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-voice-connector-origination{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-voice-connector-proxy{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-voice-connector-streaming-configuration{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-voice-connector-termination{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-delete-voice-connector-termination-credentials{
   $flags=(
      "--voice-connector-id", 
      "--usernames", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-disassociate-phone-number-from-user{
   $flags=(
      "--account-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-disassociate-phone-numbers-from-voice-connector{
   $flags=(
      "--voice-connector-id", 
      "--e", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-disassociate-phone-numbers-from-voice-connector-group{
   $flags=(
      "--voice-connector-group-id", 
      "--e", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-disassociate-signin-delegate-groups-from-account{
   $flags=(
      "--account-id", 
      "--group-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-account{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-account-settings{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-attendee{
   $flags=(
      "--meeting-id", 
      "--attendee-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-bot{
   $flags=(
      "--account-id", 
      "--bot-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-events-configuration{
   $flags=(
      "--account-id", 
      "--bot-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-global-settings{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-meeting{
   $flags=(
      "--meeting-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-phone-number{
   $flags=(
      "--phone-number-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-phone-number-order{
   $flags=(
      "--phone-number-order-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-phone-number-settings{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-proxy-session{
   $flags=(
      "--voice-connector-id", 
      "--proxy-session-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-room{
   $flags=(
      "--account-id", 
      "--room-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-user{
   $flags=(
      "--account-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-user-settings{
   $flags=(
      "--account-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-voice-connector{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-voice-connector-group{
   $flags=(
      "--voice-connector-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-voice-connector-logging-configuration{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-voice-connector-origination{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-voice-connector-proxy{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-voice-connector-streaming-configuration{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-voice-connector-termination{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-get-voice-connector-termination-health{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-invite-users{
   $flags=(
      "--account-id", 
      "--user-email-list", 
      "--user-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-accounts{
   $flags=(
      "--name", 
      "--user-email", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-attendee-tags{
   $flags=(
      "--meeting-id", 
      "--attendee-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-attendees{
   $flags=(
      "--meeting-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-bots{
   $flags=(
      "--account-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-meeting-tags{
   $flags=(
      "--meeting-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-meetings{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-phone-number-orders{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-phone-numbers{
   $flags=(
      "--status", 
      "--product-type", 
      "--filter-name", 
      "--filter-value", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-proxy-sessions{
   $flags=(
      "--voice-connector-id", 
      "--status", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-room-memberships{
   $flags=(
      "--account-id", 
      "--room-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-rooms{
   $flags=(
      "--account-id", 
      "--member-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-users{
   $flags=(
      "--account-id", 
      "--user-email", 
      "--user-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-voice-connector-groups{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-voice-connector-termination-credentials{
   $flags=(
      "--voice-connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-list-voice-connectors{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-logout-user{
   $flags=(
      "--account-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-put-events-configuration{
   $flags=(
      "--account-id", 
      "--bot-id", 
      "--outbound-events-https-endpoint", 
      "--lambda-function-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-put-voice-connector-logging-configuration{
   $flags=(
      "--voice-connector-id", 
      "--logging-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-put-voice-connector-origination{
   $flags=(
      "--voice-connector-id", 
      "--origination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-put-voice-connector-proxy{
   $flags=(
      "--voice-connector-id", 
      "--default-session-expiry-minutes", 
      "--phone-number-pool-countries", 
      "--fall-back-phone-number", 
      "--disabled", 
      "--no-disabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-put-voice-connector-streaming-configuration{
   $flags=(
      "--voice-connector-id", 
      "--streaming-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-put-voice-connector-termination{
   $flags=(
      "--voice-connector-id", 
      "--termination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-put-voice-connector-termination-credentials{
   $flags=(
      "--voice-connector-id", 
      "--credentials", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-regenerate-security-token{
   $flags=(
      "--account-id", 
      "--bot-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-reset-personal-pin{
   $flags=(
      "--account-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-restore-phone-number{
   $flags=(
      "--phone-number-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-search-available-phone-numbers{
   $flags=(
      "--area-code", 
      "--city", 
      "--country", 
      "--state", 
      "--toll-free-prefix", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-tag-attendee{
   $flags=(
      "--meeting-id", 
      "--attendee-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-tag-meeting{
   $flags=(
      "--meeting-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-untag-attendee{
   $flags=(
      "--meeting-id", 
      "--attendee-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-untag-meeting{
   $flags=(
      "--meeting-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-account{
   $flags=(
      "--account-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-account-settings{
   $flags=(
      "--account-id", 
      "--account-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-bot{
   $flags=(
      "--account-id", 
      "--bot-id", 
      "--disabled", 
      "--no-disabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-global-settings{
   $flags=(
      "--business-calling", 
      "--voice-connector", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-phone-number{
   $flags=(
      "--phone-number-id", 
      "--product-type", 
      "--calling-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-phone-number-settings{
   $flags=(
      "--calling-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-proxy-session{
   $flags=(
      "--voice-connector-id", 
      "--proxy-session-id", 
      "--capabilities", 
      "--expiry-minutes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-room{
   $flags=(
      "--account-id", 
      "--room-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-room-membership{
   $flags=(
      "--account-id", 
      "--room-id", 
      "--member-id", 
      "--role", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-user{
   $flags=(
      "--account-id", 
      "--user-id", 
      "--license-type", 
      "--user-type", 
      "--alexa-for-business-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-user-settings{
   $flags=(
      "--account-id", 
      "--user-id", 
      "--user-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-voice-connector{
   $flags=(
      "--voice-connector-id", 
      "--name", 
      "--require-encryption", 
      "--no-require-encryption", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-chime-update-voice-connector-group{
   $flags=(
      "--voice-connector-group-id", 
      "--name", 
      "--voice-connector-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9{
   $commands=(
      "create-environment-ec2", 
      "create-environment-membership", 
      "delete-environment", 
      "delete-environment-membership", 
      "describe-environment-memberships", 
      "describe-environment-status", 
      "describe-environments", 
      "list-environments", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-environment", 
      "update-environment-membership"
    );
   return $commands;
}
function Get-cloud9-create-environment-ec2{
   $flags=(
      "--name", 
      "--description", 
      "--client-request-token", 
      "--instance-type", 
      "--subnet-id", 
      "--automatic-stop-time-minutes", 
      "--owner-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-create-environment-membership{
   $flags=(
      "--environment-id", 
      "--user-arn", 
      "--permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-delete-environment{
   $flags=(
      "--environment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-delete-environment-membership{
   $flags=(
      "--environment-id", 
      "--user-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-describe-environment-memberships{
   $flags=(
      "--user-arn", 
      "--environment-id", 
      "--permissions", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-describe-environment-status{
   $flags=(
      "--environment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-describe-environments{
   $flags=(
      "--environment-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-list-environments{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-update-environment{
   $flags=(
      "--environment-id", 
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloud9-update-environment-membership{
   $flags=(
      "--environment-id", 
      "--user-arn", 
      "--permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory{
   $commands=(
      "add-facet-to-object", 
      "apply-schema", 
      "attach-object", 
      "attach-policy", 
      "attach-to-index", 
      "attach-typed-link", 
      "batch-read", 
      "batch-write", 
      "create-directory", 
      "create-facet", 
      "create-index", 
      "create-object", 
      "create-schema", 
      "create-typed-link-facet", 
      "delete-directory", 
      "delete-facet", 
      "delete-object", 
      "delete-schema", 
      "delete-typed-link-facet", 
      "detach-from-index", 
      "detach-object", 
      "detach-policy", 
      "detach-typed-link", 
      "disable-directory", 
      "enable-directory", 
      "get-applied-schema-version", 
      "get-directory", 
      "get-facet", 
      "get-link-attributes", 
      "get-object-attributes", 
      "get-object-information", 
      "get-schema-as-json", 
      "get-typed-link-facet-information", 
      "list-applied-schema-arns", 
      "list-attached-indices", 
      "list-development-schema-arns", 
      "list-directories", 
      "list-facet-attributes", 
      "list-facet-names", 
      "list-incoming-typed-links", 
      "list-index", 
      "list-managed-schema-arns", 
      "list-object-attributes", 
      "list-object-children", 
      "list-object-parent-paths", 
      "list-object-parents", 
      "list-object-policies", 
      "list-outgoing-typed-links", 
      "list-policy-attachments", 
      "list-published-schema-arns", 
      "list-tags-for-resource", 
      "list-typed-link-facet-attributes", 
      "list-typed-link-facet-names", 
      "lookup-policy", 
      "publish-schema", 
      "put-schema-from-json", 
      "remove-facet-from-object", 
      "tag-resource", 
      "untag-resource", 
      "update-facet", 
      "update-link-attributes", 
      "update-object-attributes", 
      "update-schema", 
      "update-typed-link-facet", 
      "upgrade-applied-schema", 
      "upgrade-published-schema"
    );
   return $commands;
}
function Get-clouddirectory-add-facet-to-object{
   $flags=(
      "--directory-arn", 
      "--schema-facet", 
      "--object-attribute-list", 
      "--object-reference", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-apply-schema{
   $flags=(
      "--published-schema-arn", 
      "--directory-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-attach-object{
   $flags=(
      "--directory-arn", 
      "--parent-reference", 
      "--child-reference", 
      "--link-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-attach-policy{
   $flags=(
      "--directory-arn", 
      "--policy-reference", 
      "--object-reference", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-attach-to-index{
   $flags=(
      "--directory-arn", 
      "--index-reference", 
      "--target-reference", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-attach-typed-link{
   $flags=(
      "--directory-arn", 
      "--source-object-reference", 
      "--target-object-reference", 
      "--typed-link-facet", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-batch-read{
   $flags=(
      "--directory-arn", 
      "--operations", 
      "--consistency-level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-batch-write{
   $flags=(
      "--directory-arn", 
      "--operations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-create-directory{
   $flags=(
      "--name", 
      "--schema-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-create-facet{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--attributes", 
      "--object-type", 
      "--facet-style", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-create-index{
   $flags=(
      "--directory-arn", 
      "--ordered-indexed-attribute-list", 
      "--is-unique", 
      "--no-is-unique", 
      "--parent-reference", 
      "--link-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-create-object{
   $flags=(
      "--directory-arn", 
      "--schema-facets", 
      "--object-attribute-list", 
      "--parent-reference", 
      "--link-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-create-schema{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-create-typed-link-facet{
   $flags=(
      "--schema-arn", 
      "--facet", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-delete-directory{
   $flags=(
      "--directory-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-delete-facet{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-delete-object{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-delete-schema{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-delete-typed-link-facet{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-detach-from-index{
   $flags=(
      "--directory-arn", 
      "--index-reference", 
      "--target-reference", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-detach-object{
   $flags=(
      "--directory-arn", 
      "--parent-reference", 
      "--link-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-detach-policy{
   $flags=(
      "--directory-arn", 
      "--policy-reference", 
      "--object-reference", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-detach-typed-link{
   $flags=(
      "--directory-arn", 
      "--typed-link-specifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-disable-directory{
   $flags=(
      "--directory-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-enable-directory{
   $flags=(
      "--directory-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-get-applied-schema-version{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-get-directory{
   $flags=(
      "--directory-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-get-facet{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-get-link-attributes{
   $flags=(
      "--directory-arn", 
      "--typed-link-specifier", 
      "--attribute-names", 
      "--consistency-level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-get-object-attributes{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--consistency-level", 
      "--schema-facet", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-get-object-information{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--consistency-level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-get-schema-as-json{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-get-typed-link-facet-information{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-applied-schema-arns{
   $flags=(
      "--directory-arn", 
      "--schema-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-attached-indices{
   $flags=(
      "--directory-arn", 
      "--target-reference", 
      "--consistency-level", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-development-schema-arns{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-directories{
   $flags=(
      "--state", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-facet-attributes{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-facet-names{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-incoming-typed-links{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--filter-attribute-ranges", 
      "--filter-typed-link", 
      "--consistency-level", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-index{
   $flags=(
      "--directory-arn", 
      "--ranges-on-indexed-values", 
      "--index-reference", 
      "--consistency-level", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-managed-schema-arns{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-object-attributes{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--consistency-level", 
      "--facet-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-object-children{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--next-token", 
      "--max-results", 
      "--consistency-level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-object-parent-paths{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-object-parents{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--next-token", 
      "--max-results", 
      "--consistency-level", 
      "--include-all-links-to-each-parent", 
      "--no-include-all-links-to-each-parent", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-object-policies{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--consistency-level", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-outgoing-typed-links{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--filter-attribute-ranges", 
      "--filter-typed-link", 
      "--consistency-level", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-policy-attachments{
   $flags=(
      "--directory-arn", 
      "--policy-reference", 
      "--consistency-level", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-published-schema-arns{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-typed-link-facet-attributes{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-list-typed-link-facet-names{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-lookup-policy{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-publish-schema{
   $flags=(
      "--development-schema-arn", 
      "--minor-version", 
      "--name", 
      "--schema-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-put-schema-from-json{
   $flags=(
      "--schema-arn", 
      "--document", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-remove-facet-from-object{
   $flags=(
      "--directory-arn", 
      "--schema-facet", 
      "--object-reference", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-update-facet{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--attribute-updates", 
      "--object-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-update-link-attributes{
   $flags=(
      "--directory-arn", 
      "--typed-link-specifier", 
      "--attribute-updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-update-object-attributes{
   $flags=(
      "--directory-arn", 
      "--object-reference", 
      "--attribute-updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-update-schema{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-update-typed-link-facet{
   $flags=(
      "--schema-arn", 
      "--name", 
      "--attribute-updates", 
      "--identity-attribute-order", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-upgrade-applied-schema{
   $flags=(
      "--published-schema-arn", 
      "--directory-arn", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-clouddirectory-upgrade-published-schema{
   $flags=(
      "--development-schema-arn", 
      "--published-schema-arn", 
      "--minor-version", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation{
   $commands=(
      "cancel-update-stack", 
      "continue-update-rollback", 
      "create-change-set", 
      "create-stack", 
      "create-stack-instances", 
      "create-stack-set", 
      "delete-change-set", 
      "delete-stack", 
      "delete-stack-instances", 
      "delete-stack-set", 
      "deploy", 
      "deregister-type", 
      "describe-account-limits", 
      "describe-change-set", 
      "describe-stack-drift-detection-status", 
      "describe-stack-events", 
      "describe-stack-instance", 
      "describe-stack-resource", 
      "describe-stack-resource-drifts", 
      "describe-stack-resources", 
      "describe-stack-set", 
      "describe-stack-set-operation", 
      "describe-stacks", 
      "describe-type", 
      "describe-type-registration", 
      "detect-stack-drift", 
      "detect-stack-resource-drift", 
      "detect-stack-set-drift", 
      "estimate-template-cost", 
      "execute-change-set", 
      "get-stack-policy", 
      "get-template", 
      "get-template-summary", 
      "list-change-sets", 
      "list-exports", 
      "list-imports", 
      "list-stack-instances", 
      "list-stack-resources", 
      "list-stack-set-operation-results", 
      "list-stack-set-operations", 
      "list-stack-sets", 
      "list-stacks", 
      "list-type-registrations", 
      "list-type-versions", 
      "list-types", 
      "package", 
      "record-handler-progress", 
      "register-type", 
      "set-stack-policy", 
      "set-type-default-version", 
      "signal-resource", 
      "stop-stack-set-operation", 
      "update-stack", 
      "update-stack-instances", 
      "update-stack-set", 
      "update-termination-protection", 
      "validate-template", 
      "wait"
    );
   return $commands;
}
function Get-cloudformation-cancel-update-stack{
   $flags=(
      "--stack-name", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-continue-update-rollback{
   $flags=(
      "--stack-name", 
      "--role-arn", 
      "--resources-to-skip", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-create-change-set{
   $flags=(
      "--stack-name", 
      "--template-body", 
      "--template-url", 
      "--use-previous-template", 
      "--no-use-previous-template", 
      "--parameters", 
      "--capabilities", 
      "--resource-types", 
      "--role-arn", 
      "--rollback-configuration", 
      "--notification-arns", 
      "--tags", 
      "--change-set-name", 
      "--client-token", 
      "--description", 
      "--change-set-type", 
      "--resources-to-import", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-create-stack{
   $flags=(
      "--stack-name", 
      "--template-body", 
      "--template-url", 
      "--parameters", 
      "--disable-rollback", 
      "--no-disable-rollback", 
      "--rollback-configuration", 
      "--timeout-in-minutes", 
      "--notification-arns", 
      "--capabilities", 
      "--resource-types", 
      "--role-arn", 
      "--on-failure", 
      "--stack-policy-body", 
      "--stack-policy-url", 
      "--tags", 
      "--client-request-token", 
      "--enable-termination-protection", 
      "--no-enable-termination-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-create-stack-instances{
   $flags=(
      "--stack-set-name", 
      "--accounts", 
      "--deployment-targets", 
      "--regions", 
      "--parameter-overrides", 
      "--operation-preferences", 
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-create-stack-set{
   $flags=(
      "--stack-set-name", 
      "--description", 
      "--template-body", 
      "--template-url", 
      "--parameters", 
      "--capabilities", 
      "--tags", 
      "--administration-role-arn", 
      "--execution-role-name", 
      "--permission-model", 
      "--auto-deployment", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-delete-change-set{
   $flags=(
      "--change-set-name", 
      "--stack-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-delete-stack{
   $flags=(
      "--stack-name", 
      "--retain-resources", 
      "--role-arn", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-delete-stack-instances{
   $flags=(
      "--stack-set-name", 
      "--accounts", 
      "--deployment-targets", 
      "--regions", 
      "--operation-preferences", 
      "--retain-stacks", 
      "--no-retain-stacks", 
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-delete-stack-set{
   $flags=(
      "--stack-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-deploy{
   $flags=(
      "--template-file", 
      "--stack-name", 
      "--s3-bucket", 
      "--force-upload", 
      "--s3-prefix", 
      "--kms-key-id", 
      "--parameter-overrides", 
      "--capabilities", 
      "--no-execute-changeset", 
      "--role-arn", 
      "--notification-arns", 
      "--fail-on-empty-changeset", 
      "--no-fail-on-empty-changeset", 
      "--tags"
    );
   return $flags;
}
function Get-cloudformation-deregister-type{
   $flags=(
      "--arn", 
      "--type", 
      "--type-name", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-account-limits{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-change-set{
   $flags=(
      "--change-set-name", 
      "--stack-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stack-drift-detection-status{
   $flags=(
      "--stack-drift-detection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stack-events{
   $flags=(
      "--stack-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stack-instance{
   $flags=(
      "--stack-set-name", 
      "--stack-instance-account", 
      "--stack-instance-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stack-resource{
   $flags=(
      "--stack-name", 
      "--logical-resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stack-resource-drifts{
   $flags=(
      "--stack-name", 
      "--stack-resource-drift-status-filters", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stack-resources{
   $flags=(
      "--stack-name", 
      "--logical-resource-id", 
      "--physical-resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stack-set{
   $flags=(
      "--stack-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stack-set-operation{
   $flags=(
      "--stack-set-name", 
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-stacks{
   $flags=(
      "--stack-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-type{
   $flags=(
      "--type", 
      "--type-name", 
      "--arn", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-describe-type-registration{
   $flags=(
      "--registration-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-detect-stack-drift{
   $flags=(
      "--stack-name", 
      "--logical-resource-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-detect-stack-resource-drift{
   $flags=(
      "--stack-name", 
      "--logical-resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-detect-stack-set-drift{
   $flags=(
      "--stack-set-name", 
      "--operation-preferences", 
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-estimate-template-cost{
   $flags=(
      "--template-body", 
      "--template-url", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-execute-change-set{
   $flags=(
      "--change-set-name", 
      "--stack-name", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-get-stack-policy{
   $flags=(
      "--stack-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-get-template{
   $flags=(
      "--stack-name", 
      "--change-set-name", 
      "--template-stage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-get-template-summary{
   $flags=(
      "--template-body", 
      "--template-url", 
      "--stack-name", 
      "--stack-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-change-sets{
   $flags=(
      "--stack-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-exports{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-imports{
   $flags=(
      "--export-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-stack-instances{
   $flags=(
      "--stack-set-name", 
      "--stack-instance-account", 
      "--stack-instance-region", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-stack-resources{
   $flags=(
      "--stack-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-stack-set-operation-results{
   $flags=(
      "--stack-set-name", 
      "--operation-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-stack-set-operations{
   $flags=(
      "--stack-set-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-stack-sets{
   $flags=(
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-stacks{
   $flags=(
      "--stack-status-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-type-registrations{
   $flags=(
      "--type", 
      "--type-name", 
      "--type-arn", 
      "--registration-status-filter", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-type-versions{
   $flags=(
      "--type", 
      "--type-name", 
      "--arn", 
      "--max-results", 
      "--next-token", 
      "--deprecated-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-list-types{
   $flags=(
      "--visibility", 
      "--provisioning-type", 
      "--deprecated-status", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-package{
   $flags=(
      "--template-file", 
      "--s3-bucket", 
      "--s3-prefix", 
      "--kms-key-id", 
      "--output-template-file", 
      "--use-json", 
      "--force-upload", 
      "--metadata"
    );
   return $flags;
}
function Get-cloudformation-record-handler-progress{
   $flags=(
      "--bearer-token", 
      "--operation-status", 
      "--current-operation-status", 
      "--status-message", 
      "--error-code", 
      "--resource-model", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-register-type{
   $flags=(
      "--type", 
      "--type-name", 
      "--schema-handler-package", 
      "--logging-config", 
      "--execution-role-arn", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-set-stack-policy{
   $flags=(
      "--stack-name", 
      "--stack-policy-body", 
      "--stack-policy-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-set-type-default-version{
   $flags=(
      "--arn", 
      "--type", 
      "--type-name", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-signal-resource{
   $flags=(
      "--stack-name", 
      "--logical-resource-id", 
      "--unique-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-stop-stack-set-operation{
   $flags=(
      "--stack-set-name", 
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-update-stack{
   $flags=(
      "--stack-name", 
      "--template-body", 
      "--template-url", 
      "--use-previous-template", 
      "--no-use-previous-template", 
      "--stack-policy-during-update-body", 
      "--stack-policy-during-update-url", 
      "--parameters", 
      "--capabilities", 
      "--resource-types", 
      "--role-arn", 
      "--rollback-configuration", 
      "--stack-policy-body", 
      "--stack-policy-url", 
      "--notification-arns", 
      "--tags", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-update-stack-instances{
   $flags=(
      "--stack-set-name", 
      "--accounts", 
      "--deployment-targets", 
      "--regions", 
      "--parameter-overrides", 
      "--operation-preferences", 
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-update-stack-set{
   $flags=(
      "--stack-set-name", 
      "--description", 
      "--template-body", 
      "--template-url", 
      "--use-previous-template", 
      "--no-use-previous-template", 
      "--parameters", 
      "--capabilities", 
      "--tags", 
      "--operation-preferences", 
      "--administration-role-arn", 
      "--execution-role-name", 
      "--deployment-targets", 
      "--permission-model", 
      "--auto-deployment", 
      "--operation-id", 
      "--accounts", 
      "--regions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-update-termination-protection{
   $flags=(
      "--enable-termination-protection", 
      "--no-enable-termination-protection", 
      "--stack-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-validate-template{
   $flags=(
      "--template-body", 
      "--template-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudformation-wait{
   $flags=("");
   return $flags;
}
function Get-cloudfront{
   $commands=(
      "create-cloud-front-origin-access-identity", 
      "create-distribution", 
      "create-distribution-with-tags", 
      "create-field-level-encryption-config", 
      "create-field-level-encryption-profile", 
      "create-invalidation", 
      "create-public-key", 
      "create-streaming-distribution", 
      "create-streaming-distribution-with-tags", 
      "delete-cloud-front-origin-access-identity", 
      "delete-distribution", 
      "delete-field-level-encryption-config", 
      "delete-field-level-encryption-profile", 
      "delete-public-key", 
      "delete-streaming-distribution", 
      "get-cloud-front-origin-access-identity", 
      "get-cloud-front-origin-access-identity-config", 
      "get-distribution", 
      "get-distribution-config", 
      "get-field-level-encryption", 
      "get-field-level-encryption-config", 
      "get-field-level-encryption-profile", 
      "get-field-level-encryption-profile-config", 
      "get-invalidation", 
      "get-public-key", 
      "get-public-key-config", 
      "get-streaming-distribution", 
      "get-streaming-distribution-config", 
      "list-cloud-front-origin-access-identities", 
      "list-distributions", 
      "list-distributions-by-web-acl-id", 
      "list-field-level-encryption-configs", 
      "list-field-level-encryption-profiles", 
      "list-invalidations", 
      "list-public-keys", 
      "list-streaming-distributions", 
      "list-tags-for-resource", 
      "sign", 
      "tag-resource", 
      "untag-resource", 
      "update-cloud-front-origin-access-identity", 
      "update-distribution", 
      "update-field-level-encryption-config", 
      "update-field-level-encryption-profile", 
      "update-public-key", 
      "update-streaming-distribution", 
      "wait"
    );
   return $commands;
}
function Get-cloudfront-create-cloud-front-origin-access-identity{
   $flags=(
      "--cloud-front-origin-access-identity-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-create-distribution{
   $flags=(
      "--distribution-config", 
      "--origin-domain-name", 
      "--default-root-object", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-create-distribution-with-tags{
   $flags=(
      "--distribution-config-with-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-create-field-level-encryption-config{
   $flags=(
      "--field-level-encryption-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-create-field-level-encryption-profile{
   $flags=(
      "--field-level-encryption-profile-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-create-invalidation{
   $flags=(
      "--distribution-id", 
      "--invalidation-batch", 
      "--paths", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-create-public-key{
   $flags=(
      "--public-key-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-create-streaming-distribution{
   $flags=(
      "--streaming-distribution-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-create-streaming-distribution-with-tags{
   $flags=(
      "--streaming-distribution-config-with-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-delete-cloud-front-origin-access-identity{
   $flags=(
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-delete-distribution{
   $flags=(
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-delete-field-level-encryption-config{
   $flags=(
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-delete-field-level-encryption-profile{
   $flags=(
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-delete-public-key{
   $flags=(
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-delete-streaming-distribution{
   $flags=(
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-cloud-front-origin-access-identity{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-cloud-front-origin-access-identity-config{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-distribution{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-distribution-config{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-field-level-encryption{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-field-level-encryption-config{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-field-level-encryption-profile{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-field-level-encryption-profile-config{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-invalidation{
   $flags=(
      "--distribution-id", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-public-key{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-public-key-config{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-streaming-distribution{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-get-streaming-distribution-config{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-cloud-front-origin-access-identities{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-distributions{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-distributions-by-web-acl-id{
   $flags=(
      "--marker", 
      "--max-items", 
      "--web-acl-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-field-level-encryption-configs{
   $flags=(
      "--marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-field-level-encryption-profiles{
   $flags=(
      "--marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-invalidations{
   $flags=(
      "--distribution-id", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-public-keys{
   $flags=(
      "--marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-streaming-distributions{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-list-tags-for-resource{
   $flags=(
      "--resource", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-sign{
   $flags=(
      "--url", 
      "--key-pair-id", 
      "--private-key", 
      "--date-less-than", 
      "--date-greater-than", 
      "--ip-address"
    );
   return $flags;
}
function Get-cloudfront-tag-resource{
   $flags=(
      "--resource", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-untag-resource{
   $flags=(
      "--resource", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-update-cloud-front-origin-access-identity{
   $flags=(
      "--cloud-front-origin-access-identity-config", 
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-update-distribution{
   $flags=(
      "--distribution-config", 
      "--id", 
      "--if-match", 
      "--default-root-object", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-update-field-level-encryption-config{
   $flags=(
      "--field-level-encryption-config", 
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-update-field-level-encryption-profile{
   $flags=(
      "--field-level-encryption-profile-config", 
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-update-public-key{
   $flags=(
      "--public-key-config", 
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-update-streaming-distribution{
   $flags=(
      "--streaming-distribution-config", 
      "--id", 
      "--if-match", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudfront-wait{
   $flags=("");
   return $flags;
}
function Get-cloudhsm{
   $commands=(
      "add-tags-to-resource", 
      "create-hapg", 
      "create-hsm", 
      "create-luna-client", 
      "delete-hapg", 
      "delete-hsm", 
      "delete-luna-client", 
      "describe-hapg", 
      "describe-hsm", 
      "describe-luna-client", 
      "get-config", 
      "list-available-zones", 
      "list-hapgs", 
      "list-hsms", 
      "list-luna-clients", 
      "list-tags-for-resource", 
      "modify-hapg", 
      "modify-hsm", 
      "modify-luna-client", 
      "remove-tags-from-resource"
    );
   return $commands;
}
function Get-cloudhsm-add-tags-to-resource{
   $flags=(
      "--resource-arn", 
      "--tag-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-create-hapg{
   $flags=(
      "--label", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-create-hsm{
   $flags=(
      "--subnet-id", 
      "--ssh-key", 
      "--eni-ip", 
      "--iam-role-arn", 
      "--external-id", 
      "--subscription-type", 
      "--client-token", 
      "--syslog-ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-create-luna-client{
   $flags=(
      "--label", 
      "--certificate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-delete-hapg{
   $flags=(
      "--hapg-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-delete-hsm{
   $flags=(
      "--hsm-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-delete-luna-client{
   $flags=(
      "--client-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-describe-hapg{
   $flags=(
      "--hapg-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-describe-hsm{
   $flags=(
      "--hsm-arn", 
      "--hsm-serial-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-describe-luna-client{
   $flags=(
      "--client-arn", 
      "--certificate-fingerprint", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-get-config{
   $flags=(
      "--client-arn", 
      "--client-version", 
      "--hapg-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-list-available-zones{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-list-hapgs{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-list-hsms{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-list-luna-clients{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-modify-hapg{
   $flags=(
      "--hapg-arn", 
      "--label", 
      "--partition-serial-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-modify-hsm{
   $flags=(
      "--hsm-arn", 
      "--subnet-id", 
      "--eni-ip", 
      "--iam-role-arn", 
      "--external-id", 
      "--syslog-ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-modify-luna-client{
   $flags=(
      "--client-arn", 
      "--certificate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsm-remove-tags-from-resource{
   $flags=(
      "--resource-arn", 
      "--tag-key-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2{
   $commands=(
      "copy-backup-to-region", 
      "create-cluster", 
      "create-hsm", 
      "delete-backup", 
      "delete-cluster", 
      "delete-hsm", 
      "describe-backups", 
      "describe-clusters", 
      "initialize-cluster", 
      "list-tags", 
      "restore-backup", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-cloudhsmv2-copy-backup-to-region{
   $flags=(
      "--destination-region", 
      "--backup-id", 
      "--tag-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-create-cluster{
   $flags=(
      "--subnet-ids", 
      "--hsm-type", 
      "--source-backup-id", 
      "--tag-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-create-hsm{
   $flags=(
      "--cluster-id", 
      "--availability-zone", 
      "--ip-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-delete-backup{
   $flags=(
      "--backup-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-delete-cluster{
   $flags=(
      "--cluster-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-delete-hsm{
   $flags=(
      "--cluster-id", 
      "--hsm-id", 
      "--eni-id", 
      "--eni-ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-describe-backups{
   $flags=(
      "--filters", 
      "--sort-ascending", 
      "--no-sort-ascending", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-describe-clusters{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-initialize-cluster{
   $flags=(
      "--cluster-id", 
      "--signed-cert", 
      "--trust-anchor", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-list-tags{
   $flags=(
      "--resource-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-restore-backup{
   $flags=(
      "--backup-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-tag-resource{
   $flags=(
      "--resource-id", 
      "--tag-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudhsmv2-untag-resource{
   $flags=(
      "--resource-id", 
      "--tag-key-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch{
   $commands=(
      "build-suggesters", 
      "create-domain", 
      "define-analysis-scheme", 
      "define-expression", 
      "define-index-field", 
      "define-suggester", 
      "delete-analysis-scheme", 
      "delete-domain", 
      "delete-expression", 
      "delete-index-field", 
      "delete-suggester", 
      "describe-analysis-schemes", 
      "describe-availability-options", 
      "describe-domain-endpoint-options", 
      "describe-domains", 
      "describe-expressions", 
      "describe-index-fields", 
      "describe-scaling-parameters", 
      "describe-service-access-policies", 
      "describe-suggesters", 
      "index-documents", 
      "list-domain-names", 
      "update-availability-options", 
      "update-domain-endpoint-options", 
      "update-scaling-parameters", 
      "update-service-access-policies"
    );
   return $commands;
}
function Get-cloudsearch-build-suggesters{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-create-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-define-analysis-scheme{
   $flags=(
      "--domain-name", 
      "--analysis-scheme", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-define-expression{
   $flags=(
      "--domain-name", 
      "--expression", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-define-index-field{
   $flags=(
      "--domain-name", 
      "--name", 
      "--type", 
      "--default-value", 
      "--facet-enabled", 
      "--search-enabled", 
      "--return-enabled", 
      "--sort-enabled", 
      "--highlight-enabled", 
      "--analysis-scheme", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-define-suggester{
   $flags=(
      "--domain-name", 
      "--suggester", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-delete-analysis-scheme{
   $flags=(
      "--domain-name", 
      "--analysis-scheme-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-delete-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-delete-expression{
   $flags=(
      "--domain-name", 
      "--expression-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-delete-index-field{
   $flags=(
      "--domain-name", 
      "--index-field-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-delete-suggester{
   $flags=(
      "--domain-name", 
      "--suggester-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-analysis-schemes{
   $flags=(
      "--domain-name", 
      "--analysis-scheme-names", 
      "--deployed", 
      "--no-deployed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-availability-options{
   $flags=(
      "--domain-name", 
      "--deployed", 
      "--no-deployed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-domain-endpoint-options{
   $flags=(
      "--domain-name", 
      "--deployed", 
      "--no-deployed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-domains{
   $flags=(
      "--domain-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-expressions{
   $flags=(
      "--domain-name", 
      "--expression-names", 
      "--deployed", 
      "--no-deployed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-index-fields{
   $flags=(
      "--domain-name", 
      "--field-names", 
      "--deployed", 
      "--no-deployed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-scaling-parameters{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-service-access-policies{
   $flags=(
      "--domain-name", 
      "--deployed", 
      "--no-deployed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-describe-suggesters{
   $flags=(
      "--domain-name", 
      "--suggester-names", 
      "--deployed", 
      "--no-deployed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-index-documents{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-list-domain-names{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-update-availability-options{
   $flags=(
      "--domain-name", 
      "--multi-az", 
      "--no-multi-az", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-update-domain-endpoint-options{
   $flags=(
      "--domain-name", 
      "--domain-endpoint-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-update-scaling-parameters{
   $flags=(
      "--domain-name", 
      "--scaling-parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearch-update-service-access-policies{
   $flags=(
      "--domain-name", 
      "--access-policies", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearchdomain{
   $commands=(
      "search", 
      "suggest", 
      "upload-documents"
    );
   return $commands;
}
function Get-cloudsearchdomain-search{
   $flags=(
      "--cursor", 
      "--expr", 
      "--facet", 
      "--filter-query", 
      "--highlight", 
      "--partial", 
      "--no-partial", 
      "--query-options", 
      "--query-parser", 
      "--return", 
      "--size", 
      "--sort", 
      "--start", 
      "--stats", 
      "--search-query", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearchdomain-suggest{
   $flags=(
      "--suggester", 
      "--size", 
      "--suggest-query", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudsearchdomain-upload-documents{
   $flags=(
      "--documents", 
      "--content-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail{
   $commands=(
      "add-tags", 
      "create-trail", 
      "delete-trail", 
      "describe-trails", 
      "get-event-selectors", 
      "get-insight-selectors", 
      "get-trail", 
      "get-trail-status", 
      "list-public-keys", 
      "list-tags", 
      "list-trails", 
      "lookup-events", 
      "put-event-selectors", 
      "put-insight-selectors", 
      "remove-tags", 
      "start-logging", 
      "stop-logging", 
      "update-trail", 
      "validate-logs"
    );
   return $commands;
}
function Get-cloudtrail-add-tags{
   $flags=(
      "--resource-id", 
      "--tags-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-create-trail{
   $flags=(
      "--name", 
      "-s3-bucket-name", 
      "--s3-key-prefix", 
      "--sns-topic-name", 
      "--include-global-service-events", 
      "--no-include-global-service-events", 
      "--is-multi-region-trail", 
      "--no-is-multi-region-trail", 
      "--enable-log-file-validation", 
      "--no-enable-log-file-validation", 
      "--cloud-watch-logs-log-group-arn", 
      "--cloud-watch-logs-role-arn", 
      "--kms-key-id", 
      "--is-organization-trail", 
      "--no-is-organization-trail", 
      "--tags-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-delete-trail{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-describe-trails{
   $flags=(
      "--trail-name-list", 
      "--include-shadow-trails", 
      "--no-include-shadow-trails", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-get-event-selectors{
   $flags=(
      "--trail-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-get-insight-selectors{
   $flags=(
      "--trail-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-get-trail{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-get-trail-status{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-list-public-keys{
   $flags=(
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-list-tags{
   $flags=(
      "--resource-id-list", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-list-trails{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-lookup-events{
   $flags=(
      "--lookup-attributes", 
      "--start-time", 
      "--end-time", 
      "--event-category", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-put-event-selectors{
   $flags=(
      "--trail-name", 
      "--event-selectors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-put-insight-selectors{
   $flags=(
      "--trail-name", 
      "--insight-selectors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-remove-tags{
   $flags=(
      "--resource-id", 
      "--tags-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-start-logging{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-stop-logging{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-update-trail{
   $flags=(
      "--name", 
      "--s3-bucket-name", 
      "--s3-key-prefix", 
      "--sns-topic-name", 
      "--include-global-service-events", 
      "--no-include-global-service-events", 
      "--is-multi-region-trail", 
      "--no-is-multi-region-trail", 
      "--enable-log-file-validation", 
      "--no-enable-log-file-validation", 
      "--cloud-watch-logs-log-group-arn", 
      "--cloud-watch-logs-role-arn", 
      "--kms-key-id", 
      "--is-organization-trail", 
      "--no-is-organization-trail", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudtrail-validate-logs{
   $flags=(
      "--trail-arn", 
      "--start-time", 
      "--end-time", 
      "--s3-bucket", 
      "--s3-prefix", 
      "--account-id", 
      "--verbose"
    );
   return $flags;
}
function Get-cloudwatch{
   $commands=(
      "delete-alarms", 
      "delete-anomaly-detector", 
      "delete-dashboards", 
      "delete-insight-rules", 
      "describe-alarm-history", 
      "describe-alarms", 
      "describe-alarms-for-metric", 
      "describe-anomaly-detectors", 
      "describe-insight-rules", 
      "disable-alarm-actions", 
      "disable-insight-rules", 
      "enable-alarm-actions", 
      "enable-insight-rules", 
      "get-dashboard", 
      "get-insight-rule-report", 
      "get-metric-data", 
      "get-metric-statistics", 
      "get-metric-widget-image", 
      "list-dashboards", 
      "list-metrics", 
      "list-tags-for-resource", 
      "put-anomaly-detector", 
      "put-composite-alarm", 
      "put-dashboard", 
      "put-insight-rule", 
      "put-metric-alarm", 
      "put-metric-data", 
      "set-alarm-state", 
      "tag-resource", 
      "untag-resource", 
      "wait"
    );
   return $commands;
}
function Get-cloudwatch-delete-alarms{
   $flags=(
      "--alarm-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-delete-anomaly-detector{
   $flags=(
      "--namespace", 
      "--metric-name", 
      "--dimensions", 
      "--stat", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-delete-dashboards{
   $flags=(
      "--dashboard-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-delete-insight-rules{
   $flags=(
      "--rule-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-describe-alarm-history{
   $flags=(
      "--alarm-name", 
      "--alarm-types", 
      "--history-item-type", 
      "--start-date", 
      "--end-date", 
      "--scan-by", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-describe-alarms{
   $flags=(
      "--alarm-names", 
      "--alarm-name-prefix", 
      "--alarm-types", 
      "--children-of-alarm-name", 
      "--parents-of-alarm-name", 
      "--state-value", 
      "--action-prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-describe-alarms-for-metric{
   $flags=(
      "--metric-name", 
      "--namespace", 
      "--statistic", 
      "--extended-statistic", 
      "--dimensions", 
      "--period", 
      "--unit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-describe-anomaly-detectors{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--namespace", 
      "--metric-name", 
      "--dimensions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-describe-insight-rules{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-disable-alarm-actions{
   $flags=(
      "--alarm-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-disable-insight-rules{
   $flags=(
      "--rule-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-enable-alarm-actions{
   $flags=(
      "--alarm-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-enable-insight-rules{
   $flags=(
      "--rule-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-get-dashboard{
   $flags=(
      "--dashboard-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-get-insight-rule-report{
   $flags=(
      "--rule-name", 
      "--start-time", 
      "--end-time", 
      "--period", 
      "--max-contributor-count", 
      "--metrics", 
      "--order-by", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-get-metric-data{
   $flags=(
      "--metric-data-queries", 
      "--start-time", 
      "--end-time", 
      "--scan-by", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-get-metric-statistics{
   $flags=(
      "--namespace", 
      "--metric-name", 
      "--dimensions", 
      "--start-time", 
      "--end-time", 
      "--period", 
      "--statistics", 
      "--extended-statistics", 
      "--unit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-get-metric-widget-image{
   $flags=(
      "--metric-widget", 
      "--output-format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-list-dashboards{
   $flags=(
      "--dashboard-name-prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-list-metrics{
   $flags=(
      "--namespace", 
      "--metric-name", 
      "--dimensions", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-put-anomaly-detector{
   $flags=(
      "--namespace", 
      "--metric-name", 
      "--dimensions", 
      "--stat", 
      "--configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-put-composite-alarm{
   $flags=(
      "--actions-enabled", 
      "--no-actions-enabled", 
      "--alarm-actions", 
      "--alarm-description", 
      "--alarm-name", 
      "--alarm-rule", 
      "--insufficient-data-actions", 
      "--ok-actions", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-put-dashboard{
   $flags=(
      "--dashboard-name", 
      "--dashboard-body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-put-insight-rule{
   $flags=(
      "--rule-name", 
      "--rule-state", 
      "--rule-definition", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-put-metric-alarm{
   $flags=(
      "--alarm-name", 
      "--alarm-description", 
      "--actions-enabled", 
      "--no-actions-enabled", 
      "--ok-actions", 
      "--alarm-actions", 
      "--insufficient-data-actions", 
      "--metric-name", 
      "--namespace", 
      "--statistic", 
      "--extended-statistic", 
      "--dimensions", 
      "--period", 
      "--unit", 
      "--evaluation-periods", 
      "--datapoints-to-alarm", 
      "--threshold", 
      "--comparison-operator", 
      "--treat-missing-data", 
      "--evaluate-low-sample-count-percentile", 
      "--metrics", 
      "--tags", 
      "--threshold-metric-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-put-metric-data{
   $flags=(
      "--namespace", 
      "--metric-data", 
      "--metric-name", 
      "--timestamp", 
      "--unit", 
      "--value", 
      "--dimensions", 
      "--statistic-values", 
      "--storage-resolution", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-set-alarm-state{
   $flags=(
      "--alarm-name", 
      "--state-value", 
      "--state-reason", 
      "--state-reason-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cloudwatch-wait{
   $flags=("");
   return $flags;
}
function Get-codebuild{
   $commands=(
      "batch-delete-builds", 
      "batch-get-builds", 
      "batch-get-projects", 
      "batch-get-report-groups", 
      "batch-get-reports", 
      "create-project", 
      "create-report-group", 
      "create-webhook", 
      "delete-project", 
      "delete-report", 
      "delete-report-group", 
      "delete-resource-policy", 
      "delete-source-credentials", 
      "delete-webhook", 
      "describe-test-cases", 
      "get-resource-policy", 
      "import-source-credentials", 
      "invalidate-project-cache", 
      "list-builds", 
      "list-builds-for-project", 
      "list-curated-environment-images", 
      "list-projects", 
      "list-report-groups", 
      "list-reports", 
      "list-reports-for-report-group", 
      "list-shared-projects", 
      "list-shared-report-groups", 
      "list-source-credentials", 
      "put-resource-policy", 
      "start-build", 
      "stop-build", 
      "update-project", 
      "update-report-group", 
      "update-webhook"
    );
   return $commands;
}
function Get-codebuild-batch-delete-builds{
   $flags=(
      "--ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-batch-get-builds{
   $flags=(
      "--ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-batch-get-projects{
   $flags=(
      "--names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-batch-get-report-groups{
   $flags=(
      "--report-group-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-batch-get-reports{
   $flags=(
      "--report-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-create-project{
   $flags=(
      "--name", 
      "--description", 
      "--source", 
      "--secondary-sources", 
      "--source-version", 
      "--secondary-source-versions", 
      "--artifacts", 
      "--secondary-artifacts", 
      "--cache", 
      "--environment", 
      "--service-role", 
      "--timeout-in-minutes", 
      "--queued-timeout-in-minutes", 
      "--encryption-key", 
      "--tags", 
      "--vpc-config", 
      "--badge-enabled", 
      "--no-badge-enabled", 
      "--logs-config", 
      "--file-system-locations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-create-report-group{
   $flags=(
      "--name", 
      "--type", 
      "--export-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-create-webhook{
   $flags=(
      "--project-name", 
      "--branch-filter", 
      "--filter-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-delete-project{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-delete-report{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-delete-report-group{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-delete-resource-policy{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-delete-source-credentials{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-delete-webhook{
   $flags=(
      "--project-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-describe-test-cases{
   $flags=(
      "--report-arn", 
      "--next-token", 
      "--max-results", 
      "--filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-get-resource-policy{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-import-source-credentials{
   $flags=(
      "--username", 
      "--token", 
      "--server-type", 
      "--auth-type", 
      "--should-overwrite", 
      "--no-should-overwrite", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-invalidate-project-cache{
   $flags=(
      "--project-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-builds{
   $flags=(
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-builds-for-project{
   $flags=(
      "--project-name", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-curated-environment-images{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-projects{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-report-groups{
   $flags=(
      "--sort-order", 
      "--sort-by", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-reports{
   $flags=(
      "--sort-order", 
      "--next-token", 
      "--max-results", 
      "--filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-reports-for-report-group{
   $flags=(
      "--report-group-arn", 
      "--next-token", 
      "--sort-order", 
      "--max-results", 
      "--filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-shared-projects{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-shared-report-groups{
   $flags=(
      "--sort-order", 
      "--sort-by", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-list-source-credentials{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-put-resource-policy{
   $flags=(
      "--policy", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-start-build{
   $flags=(
      "--project-name", 
      "--secondary-sources-override", 
      "--secondary-sources-version-override", 
      "--source-version", 
      "--artifacts-override", 
      "--secondary-artifacts-override", 
      "--environment-variables-override", 
      "--source-type-override", 
      "--source-location-override", 
      "--source-auth-override", 
      "--git-clone-depth-override", 
      "--git-submodules-config-override", 
      "--buildspec-override", 
      "--insecure-ssl-override", 
      "--no-insecure-ssl-override", 
      "--report-build-status-override", 
      "--no-report-build-status-override", 
      "--environment-type-override", 
      "--image-override", 
      "--compute-type-override", 
      "--certificate-override", 
      "--cache-override", 
      "--service-role-override", 
      "--privileged-mode-override", 
      "--no-privileged-mode-override", 
      "--timeout-in-minutes-override", 
      "--queued-timeout-in-minutes-override", 
      "--encryption-key-override", 
      "--idempotency-token", 
      "--logs-config-override", 
      "--registry-credential-override", 
      "--image-pull-credentials-type-override", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-stop-build{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-update-project{
   $flags=(
      "--name", 
      "--description", 
      "--source", 
      "--secondary-sources", 
      "--source-version", 
      "--secondary-source-versions", 
      "--artifacts", 
      "--secondary-artifacts", 
      "--cache", 
      "--environment", 
      "--service-role", 
      "--timeout-in-minutes", 
      "--queued-timeout-in-minutes", 
      "--encryption-key", 
      "--tags", 
      "--vpc-config", 
      "--badge-enabled", 
      "--no-badge-enabled", 
      "--logs-config", 
      "--file-system-locations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-update-report-group{
   $flags=(
      "--arn", 
      "--export-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codebuild-update-webhook{
   $flags=(
      "--project-name", 
      "--branch-filter", 
      "--rotate-secret", 
      "--no-rotate-secret", 
      "--filter-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit{
   $commands=(
      "associate-approval-rule-template-with-repository", 
      "batch-associate-approval-rule-template-with-repositories", 
      "batch-describe-merge-conflicts", 
      "batch-disassociate-approval-rule-template-from-repositories", 
      "batch-get-commits", 
      "batch-get-repositories", 
      "create-approval-rule-template", 
      "create-branch", 
      "create-commit", 
      "create-pull-request", 
      "create-pull-request-approval-rule", 
      "create-repository", 
      "create-unreferenced-merge-commit", 
      "credential-helper", 
      "delete-approval-rule-template", 
      "delete-branch", 
      "delete-comment-content", 
      "delete-file", 
      "delete-pull-request-approval-rule", 
      "delete-repository", 
      "describe-merge-conflicts", 
      "describe-pull-request-events", 
      "disassociate-approval-rule-template-from-repository", 
      "evaluate-pull-request-approval-rules", 
      "get-approval-rule-template", 
      "get-blob", 
      "get-branch", 
      "get-comment", 
      "get-comments-for-compared-commit", 
      "get-comments-for-pull-request", 
      "get-commit", 
      "get-differences", 
      "get-file", 
      "get-folder", 
      "get-merge-commit", 
      "get-merge-conflicts", 
      "get-merge-options", 
      "get-pull-request", 
      "get-pull-request-approval-states", 
      "get-pull-request-override-state", 
      "get-repository", 
      "get-repository-triggers", 
      "list-approval-rule-templates", 
      "list-associated-approval-rule-templates-for-repository", 
      "list-branches", 
      "list-pull-requests", 
      "list-repositories", 
      "list-repositories-for-approval-rule-template", 
      "list-tags-for-resource", 
      "merge-branches-by-fast-forward", 
      "merge-branches-by-squash", 
      "merge-branches-by-three-way", 
      "merge-pull-request-by-fast-forward", 
      "merge-pull-request-by-squash", 
      "merge-pull-request-by-three-way", 
      "override-pull-request-approval-rules", 
      "post-comment-for-compared-commit", 
      "post-comment-for-pull-request", 
      "post-comment-reply", 
      "put-file", 
      "put-repository-triggers", 
      "tag-resource", 
      "test-repository-triggers", 
      "untag-resource", 
      "update-approval-rule-template-content", 
      "update-approval-rule-template-description", 
      "update-approval-rule-template-name", 
      "update-comment", 
      "update-default-branch", 
      "update-pull-request-approval-rule-content", 
      "update-pull-request-approval-state", 
      "update-pull-request-description", 
      "update-pull-request-status", 
      "update-pull-request-title", 
      "update-repository-description", 
      "update-repository-name"
    );
   return $commands;
}
function Get-codecommit-associate-approval-rule-template-with-repository{
   $flags=(
      "--approval-rule-template-name", 
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-batch-associate-approval-rule-template-with-repositories{
   $flags=(
      "--approval-rule-template-name", 
      "--repository-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-batch-describe-merge-conflicts{
   $flags=(
      "--repository-name", 
      "--destination-commit-specifier", 
      "--source-commit-specifier", 
      "--merge-option", 
      "--max-merge-hunks", 
      "--max-conflict-files", 
      "--file-paths", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-batch-disassociate-approval-rule-template-from-repositories{
   $flags=(
      "--approval-rule-template-name", 
      "--repository-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-batch-get-commits{
   $flags=(
      "--commit-ids", 
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-batch-get-repositories{
   $flags=(
      "--repository-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-create-approval-rule-template{
   $flags=(
      "--approval-rule-template-name", 
      "--approval-rule-template-content", 
      "--approval-rule-template-description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-create-branch{
   $flags=(
      "--repository-name", 
      "--branch-name", 
      "--commit-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-create-commit{
   $flags=(
      "--repository-name", 
      "--branch-name", 
      "--parent-commit-id", 
      "--author-name", 
      "--email", 
      "--commit-message", 
      "--keep-empty-folders", 
      "--no-keep-empty-folders", 
      "--put-files", 
      "--delete-files", 
      "--set-file-modes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-create-pull-request{
   $flags=(
      "--title", 
      "--description", 
      "--targets", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-create-pull-request-approval-rule{
   $flags=(
      "--pull-request-id", 
      "--approval-rule-name", 
      "--approval-rule-content", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-create-repository{
   $flags=(
      "--repository-name", 
      "--repository-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-create-unreferenced-merge-commit{
   $flags=(
      "--repository-name", 
      "--source-commit-specifier", 
      "--destination-commit-specifier", 
      "--merge-option", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--author-name", 
      "--email", 
      "--commit-message", 
      "--keep-empty-folders", 
      "--no-keep-empty-folders", 
      "--conflict-resolution", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-credential-helper{
   $flags=("");
   return $flags;
}
function Get-codecommit-delete-approval-rule-template{
   $flags=(
      "--approval-rule-template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-delete-branch{
   $flags=(
      "--repository-name", 
      "--branch-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-delete-comment-content{
   $flags=(
      "--comment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-delete-file{
   $flags=(
      "--repository-name", 
      "--branch-name", 
      "--file-path", 
      "--parent-commit-id", 
      "--keep-empty-folders", 
      "--no-keep-empty-folders", 
      "--commit-message", 
      "--name", 
      "--email", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-delete-pull-request-approval-rule{
   $flags=(
      "--pull-request-id", 
      "--approval-rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-delete-repository{
   $flags=(
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-describe-merge-conflicts{
   $flags=(
      "--repository-name", 
      "--destination-commit-specifier", 
      "--source-commit-specifier", 
      "--merge-option", 
      "--max-merge-hunks", 
      "--file-path", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-describe-pull-request-events{
   $flags=(
      "--pull-request-id", 
      "--pull-request-event-type", 
      "--actor-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-disassociate-approval-rule-template-from-repository{
   $flags=(
      "--approval-rule-template-name", 
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-evaluate-pull-request-approval-rules{
   $flags=(
      "--pull-request-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-approval-rule-template{
   $flags=(
      "--approval-rule-template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-blob{
   $flags=(
      "--repository-name", 
      "--blob-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-branch{
   $flags=(
      "--repository-name", 
      "--branch-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-comment{
   $flags=(
      "--comment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-comments-for-compared-commit{
   $flags=(
      "--repository-name", 
      "--before-commit-id", 
      "--after-commit-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-comments-for-pull-request{
   $flags=(
      "--pull-request-id", 
      "--repository-name", 
      "--before-commit-id", 
      "--after-commit-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-commit{
   $flags=(
      "--repository-name", 
      "--commit-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-differences{
   $flags=(
      "--repository-name", 
      "--before-commit-specifier", 
      "--after-commit-specifier", 
      "--before-path", 
      "--after-path", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-file{
   $flags=(
      "--repository-name", 
      "--commit-specifier", 
      "--file-path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-folder{
   $flags=(
      "--repository-name", 
      "--commit-specifier", 
      "--folder-path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-merge-commit{
   $flags=(
      "--repository-name", 
      "--source-commit-specifier", 
      "--destination-commit-specifier", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-merge-conflicts{
   $flags=(
      "--repository-name", 
      "--destination-commit-specifier", 
      "--source-commit-specifier", 
      "--merge-option", 
      "--conflict-detail-level", 
      "--max-conflict-files", 
      "--conflict-resolution-strategy", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-merge-options{
   $flags=(
      "--repository-name", 
      "--source-commit-specifier", 
      "--destination-commit-specifier", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-pull-request{
   $flags=(
      "--pull-request-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-pull-request-approval-states{
   $flags=(
      "--pull-request-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-pull-request-override-state{
   $flags=(
      "--pull-request-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-repository{
   $flags=(
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-get-repository-triggers{
   $flags=(
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-list-approval-rule-templates{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-list-associated-approval-rule-templates-for-repository{
   $flags=(
      "--repository-name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-list-branches{
   $flags=(
      "--repository-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-list-pull-requests{
   $flags=(
      "--repository-name", 
      "--author-arn", 
      "--pull-request-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-list-repositories{
   $flags=(
      "--sort-by", 
      "--order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-list-repositories-for-approval-rule-template{
   $flags=(
      "--approval-rule-template-name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-merge-branches-by-fast-forward{
   $flags=(
      "--repository-name", 
      "--source-commit-specifier", 
      "--destination-commit-specifier", 
      "--target-branch", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-merge-branches-by-squash{
   $flags=(
      "--repository-name", 
      "--source-commit-specifier", 
      "--destination-commit-specifier", 
      "--target-branch", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--author-name", 
      "--email", 
      "--commit-message", 
      "--keep-empty-folders", 
      "--no-keep-empty-folders", 
      "--conflict-resolution", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-merge-branches-by-three-way{
   $flags=(
      "--repository-name", 
      "--source-commit-specifier", 
      "--destination-commit-specifier", 
      "--target-branch", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--author-name", 
      "--email", 
      "--commit-message", 
      "--keep-empty-folders", 
      "--no-keep-empty-folders", 
      "--conflict-resolution", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-merge-pull-request-by-fast-forward{
   $flags=(
      "--pull-request-id", 
      "--repository-name", 
      "--source-commit-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-merge-pull-request-by-squash{
   $flags=(
      "--pull-request-id", 
      "--repository-name", 
      "--source-commit-id", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--commit-message", 
      "--author-name", 
      "--email", 
      "--keep-empty-folders", 
      "--no-keep-empty-folders", 
      "--conflict-resolution", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-merge-pull-request-by-three-way{
   $flags=(
      "--pull-request-id", 
      "--repository-name", 
      "--source-commit-id", 
      "--conflict-detail-level", 
      "--conflict-resolution-strategy", 
      "--commit-message", 
      "--author-name", 
      "--email", 
      "--keep-empty-folders", 
      "--no-keep-empty-folders", 
      "--conflict-resolution", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-override-pull-request-approval-rules{
   $flags=(
      "--pull-request-id", 
      "--revision-id", 
      "--override-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-post-comment-for-compared-commit{
   $flags=(
      "--repository-name", 
      "--before-commit-id", 
      "--after-commit-id", 
      "--location", 
      "--content", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-post-comment-for-pull-request{
   $flags=(
      "--pull-request-id", 
      "--repository-name", 
      "--before-commit-id", 
      "--after-commit-id", 
      "--location", 
      "--content", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-post-comment-reply{
   $flags=(
      "--in-reply-to", 
      "--client-request-token", 
      "--content", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-put-file{
   $flags=(
      "--repository-name", 
      "--branch-name", 
      "--file-content", 
      "--file-path", 
      "--file-mode", 
      "--parent-commit-id", 
      "--commit-message", 
      "--name", 
      "--email", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-put-repository-triggers{
   $flags=(
      "--repository-name", 
      "--triggers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-test-repository-triggers{
   $flags=(
      "--repository-name", 
      "--triggers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-approval-rule-template-content{
   $flags=(
      "--approval-rule-template-name", 
      "--new-rule-content", 
      "--existing-rule-content-sha", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-approval-rule-template-description{
   $flags=(
      "--approval-rule-template-name", 
      "--approval-rule-template-description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-approval-rule-template-name{
   $flags=(
      "--old-approval-rule-template-name", 
      "--new-approval-rule-template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-comment{
   $flags=(
      "--comment-id", 
      "--content", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-default-branch{
   $flags=(
      "--repository-name", 
      "--default-branch-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-pull-request-approval-rule-content{
   $flags=(
      "--pull-request-id", 
      "--approval-rule-name", 
      "--existing-rule-content-sha", 
      "--new-rule-content", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-pull-request-approval-state{
   $flags=(
      "--pull-request-id", 
      "--revision-id", 
      "--approval-state", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-pull-request-description{
   $flags=(
      "--pull-request-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-pull-request-status{
   $flags=(
      "--pull-request-id", 
      "--pull-request-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-pull-request-title{
   $flags=(
      "--pull-request-id", 
      "--title", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-repository-description{
   $flags=(
      "--repository-name", 
      "--repository-description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codecommit-update-repository-name{
   $flags=(
      "--old-name", 
      "--new-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer{
   $commands=(
      "associate-repository", 
      "describe-code-review", 
      "describe-recommendation-feedback", 
      "describe-repository-association", 
      "disassociate-repository", 
      "list-code-reviews", 
      "list-recommendation-feedback", 
      "list-recommendations", 
      "list-repository-associations", 
      "put-recommendation-feedback"
    );
   return $commands;
}
function Get-codeguru-reviewer-associate-repository{
   $flags=(
      "--repository", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-describe-code-review{
   $flags=(
      "--code-review-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-describe-recommendation-feedback{
   $flags=(
      "--code-review-arn", 
      "--recommendation-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-describe-repository-association{
   $flags=(
      "--association-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-disassociate-repository{
   $flags=(
      "--association-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-list-code-reviews{
   $flags=(
      "--provider-types", 
      "--states", 
      "--repository-names", 
      "--type", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-list-recommendation-feedback{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--code-review-arn", 
      "--user-ids", 
      "--recommendation-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-list-recommendations{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--code-review-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-list-repository-associations{
   $flags=(
      "--provider-types", 
      "--states", 
      "--names", 
      "--owners", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguru-reviewer-put-recommendation-feedback{
   $flags=(
      "--code-review-arn", 
      "--recommendation-id", 
      "--reactions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler{
   $commands=(
      "configure-agent", 
      "create-profiling-group", 
      "delete-profiling-group", 
      "describe-profiling-group", 
      "get-policy", 
      "get-profile", 
      "list-profile-times", 
      "list-profiling-groups", 
      "post-agent-profile", 
      "put-permission", 
      "remove-permission", 
      "update-profiling-group"
    );
   return $commands;
}
function Get-codeguruprofiler-configure-agent{
   $flags=(
      "--fleet-instance-id", 
      "--profiling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-create-profiling-group{
   $flags=(
      "--agent-orchestration-config", 
      "--client-token", 
      "--profiling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-delete-profiling-group{
   $flags=(
      "--profiling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-describe-profiling-group{
   $flags=(
      "--profiling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-get-policy{
   $flags=(
      "--profiling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-get-profile{
   $flags=(
      "--accept", 
      "--end-time", 
      "--max-depth", 
      "--period", 
      "--profiling-group-name", 
      "--start-time"
    );
   return $flags;
}
function Get-codeguruprofiler-list-profile-times{
   $flags=(
      "--end-time", 
      "--order-by", 
      "--period", 
      "--profiling-group-name", 
      "--start-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-list-profiling-groups{
   $flags=(
      "--include-description", 
      "--no-include-description", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-post-agent-profile{
   $flags=(
      "--agent-profile", 
      "--content-type", 
      "--profile-token", 
      "--profiling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-put-permission{
   $flags=(
      "--action-group", 
      "--principals", 
      "--profiling-group-name", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-remove-permission{
   $flags=(
      "--action-group", 
      "--profiling-group-name", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codeguruprofiler-update-profiling-group{
   $flags=(
      "--agent-orchestration-config", 
      "--profiling-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline{
   $commands=(
      "acknowledge-job", 
      "acknowledge-third-party-job", 
      "create-custom-action-type", 
      "create-pipeline", 
      "delete-custom-action-type", 
      "delete-pipeline", 
      "delete-webhook", 
      "deregister-webhook-with-third-party", 
      "disable-stage-transition", 
      "enable-stage-transition", 
      "get-job-details", 
      "get-pipeline", 
      "get-pipeline-execution", 
      "get-pipeline-state", 
      "get-third-party-job-details", 
      "list-action-executions", 
      "list-action-types", 
      "list-pipeline-executions", 
      "list-pipelines", 
      "list-tags-for-resource", 
      "list-webhooks", 
      "poll-for-jobs", 
      "poll-for-third-party-jobs", 
      "put-action-revision", 
      "put-approval-result", 
      "put-job-failure-result", 
      "put-job-success-result", 
      "put-third-party-job-failure-result", 
      "put-third-party-job-success-result", 
      "put-webhook", 
      "register-webhook-with-third-party", 
      "retry-stage-execution", 
      "start-pipeline-execution", 
      "stop-pipeline-execution", 
      "tag-resource", 
      "untag-resource", 
      "update-pipeline"
    );
   return $commands;
}
function Get-codepipeline-acknowledge-job{
   $flags=(
      "--job-id", 
      "--nonce", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-acknowledge-third-party-job{
   $flags=(
      "--job-id", 
      "--nonce", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-create-custom-action-type{
   $flags=(
      "--category", 
      "--provider", 
      "--settings", 
      "--configuration-properties", 
      "--input-artifact-details", 
      "--output-artifact-details", 
      "--tags", 
      "--action-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-create-pipeline{
   $flags=(
      "--pipeline", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-delete-custom-action-type{
   $flags=(
      "--category", 
      "--provider", 
      "--action-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-delete-pipeline{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-delete-webhook{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-deregister-webhook-with-third-party{
   $flags=(
      "--webhook-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-disable-stage-transition{
   $flags=(
      "--pipeline-name", 
      "--stage-name", 
      "--transition-type", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-enable-stage-transition{
   $flags=(
      "--pipeline-name", 
      "--stage-name", 
      "--transition-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-get-job-details{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-get-pipeline{
   $flags=(
      "--name", 
      "--pipeline-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-get-pipeline-execution{
   $flags=(
      "--pipeline-name", 
      "--pipeline-execution-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-get-pipeline-state{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-get-third-party-job-details{
   $flags=(
      "--job-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-list-action-executions{
   $flags=(
      "--pipeline-name", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-list-action-types{
   $flags=(
      "--action-owner-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-list-pipeline-executions{
   $flags=(
      "--pipeline-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-list-pipelines{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-list-webhooks{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-poll-for-jobs{
   $flags=(
      "--action-type-id", 
      "--max-batch-size", 
      "--query-param", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-poll-for-third-party-jobs{
   $flags=(
      "--action-type-id", 
      "--max-batch-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-put-action-revision{
   $flags=(
      "--pipeline-name", 
      "--stage-name", 
      "--action-name", 
      "--action-revision", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-put-approval-result{
   $flags=(
      "--pipeline-name", 
      "--stage-name", 
      "--action-name", 
      "--result", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-put-job-failure-result{
   $flags=(
      "--job-id", 
      "--failure-details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-put-job-success-result{
   $flags=(
      "--job-id", 
      "--current-revision", 
      "--continuation-token", 
      "--execution-details", 
      "--output-variables", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-put-third-party-job-failure-result{
   $flags=(
      "--job-id", 
      "--client-token", 
      "--failure-details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-put-third-party-job-success-result{
   $flags=(
      "--job-id", 
      "--client-token", 
      "--current-revision", 
      "--continuation-token", 
      "--execution-details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-put-webhook{
   $flags=(
      "--webhook", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-register-webhook-with-third-party{
   $flags=(
      "--webhook-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-retry-stage-execution{
   $flags=(
      "--pipeline-name", 
      "--stage-name", 
      "--pipeline-execution-id", 
      "--retry-mode", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-start-pipeline-execution{
   $flags=(
      "--name", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-stop-pipeline-execution{
   $flags=(
      "--pipeline-name", 
      "--pipeline-execution-id", 
      "--abandon", 
      "--no-abandon", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codepipeline-update-pipeline{
   $flags=(
      "--pipeline", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar{
   $commands=(
      "associate-team-member", 
      "create-project", 
      "create-user-profile", 
      "delete-project", 
      "delete-user-profile", 
      "describe-project", 
      "describe-user-profile", 
      "disassociate-team-member", 
      "list-projects", 
      "list-resources", 
      "list-tags-for-project", 
      "list-team-members", 
      "list-user-profiles", 
      "tag-project", 
      "untag-project", 
      "update-project", 
      "update-team-member", 
      "update-user-profile"
    );
   return $commands;
}
function Get-codestar-associate-team-member{
   $flags=(
      "--project-id", 
      "--client-request-token", 
      "--user-arn", 
      "--project-role", 
      "--remote-access-allowed", 
      "--no-remote-access-allowed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-create-project{
   $flags=(
      "--name", 
      "--id", 
      "--description", 
      "--client-request-token", 
      "--source-code", 
      "--toolchain", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-create-user-profile{
   $flags=(
      "--user-arn", 
      "--display-name", 
      "--email-address", 
      "--ssh-public-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-delete-project{
   $flags=(
      "--id", 
      "--client-request-token", 
      "--delete-stack", 
      "--no-delete-stack", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-delete-user-profile{
   $flags=(
      "--user-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-describe-project{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-describe-user-profile{
   $flags=(
      "--user-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-disassociate-team-member{
   $flags=(
      "--project-id", 
      "--user-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-list-projects{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-list-resources{
   $flags=(
      "--project-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-list-tags-for-project{
   $flags=(
      "--id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-list-team-members{
   $flags=(
      "--project-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-list-user-profiles{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-tag-project{
   $flags=(
      "--id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-untag-project{
   $flags=(
      "--id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-update-project{
   $flags=(
      "--id", 
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-update-team-member{
   $flags=(
      "--project-id", 
      "--user-arn", 
      "--project-role", 
      "--remote-access-allowed", 
      "--no-remote-access-allowed", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-update-user-profile{
   $flags=(
      "--user-arn", 
      "--display-name", 
      "--email-address", 
      "--ssh-public-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-connections{
   $commands=(
      "create-connection", 
      "delete-connection", 
      "get-connection", 
      "list-connections"
    );
   return $commands;
}
function Get-codestar-connections-create-connection{
   $flags=(
      "--provider-type", 
      "--connection-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-connections-delete-connection{
   $flags=(
      "--connection-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-connections-get-connection{
   $flags=(
      "--connection-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-connections-list-connections{
   $flags=(
      "--provider-type-filter", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications{
   $commands=(
      "create-notification-rule", 
      "delete-notification-rule", 
      "delete-target", 
      "describe-notification-rule", 
      "list-event-types", 
      "list-notification-rules", 
      "list-tags-for-resource", 
      "list-targets", 
      "subscribe", 
      "tag-resource", 
      "unsubscribe", 
      "untag-resource", 
      "update-notification-rule"
    );
   return $commands;
}
function Get-codestar-notifications-create-notification-rule{
   $flags=(
      "--name", 
      "--event-type-ids", 
      "--resource", 
      "--targets", 
      "--detail-type", 
      "--client-request-token", 
      "--tags", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-delete-notification-rule{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-delete-target{
   $flags=(
      "--target-address", 
      "--force-unsubscribe-all", 
      "--no-force-unsubscribe-all", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-describe-notification-rule{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-list-event-types{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-list-notification-rules{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-list-tags-for-resource{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-list-targets{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-subscribe{
   $flags=(
      "--arn", 
      "--target", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-tag-resource{
   $flags=(
      "--arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-unsubscribe{
   $flags=(
      "--arn", 
      "--target-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-untag-resource{
   $flags=(
      "--arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-codestar-notifications-update-notification-rule{
   $flags=(
      "--arn", 
      "--name", 
      "--status", 
      "--event-type-ids", 
      "--targets", 
      "--detail-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity{
   $commands=(
      "create-identity-pool", 
      "delete-identities", 
      "delete-identity-pool", 
      "describe-identity", 
      "describe-identity-pool", 
      "get-credentials-for-identity", 
      "get-id", 
      "get-identity-pool-roles", 
      "get-open-id-token", 
      "get-open-id-token-for-developer-identity", 
      "list-identities", 
      "list-identity-pools", 
      "list-tags-for-resource", 
      "lookup-developer-identity", 
      "merge-developer-identities", 
      "set-identity-pool-roles", 
      "tag-resource", 
      "unlink-developer-identity", 
      "unlink-identity", 
      "untag-resource", 
      "update-identity-pool"
    );
   return $commands;
}
function Get-cognito-identity-create-identity-pool{
   $flags=(
      "--identity-pool-name", 
      "--allow-unauthenticated-identities", 
      "--no-allow-unauthenticated-identities", 
      "--allow-classic-flow", 
      "--no-allow-classic-flow", 
      "--supported-login-providers", 
      "--developer-provider-name", 
      "--open-id-connect-provider-arns", 
      "--cognito-identity-providers", 
      "--saml-provider-arns", 
      "--identity-pool-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-delete-identities{
   $flags=(
      "--identity-ids-to-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-delete-identity-pool{
   $flags=(
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-describe-identity{
   $flags=(
      "--identity-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-describe-identity-pool{
   $flags=(
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-get-credentials-for-identity{
   $flags=(
      "--identity-id", 
      "--logins", 
      "--custom-role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-get-id{
   $flags=(
      "--account-id", 
      "--identity-pool-id", 
      "--logins", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-get-identity-pool-roles{
   $flags=(
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-get-open-id-token{
   $flags=(
      "--identity-id", 
      "--logins", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-get-open-id-token-for-developer-identity{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--logins", 
      "--token-duration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-list-identities{
   $flags=(
      "--identity-pool-id", 
      "--max-results", 
      "--next-token", 
      "--hide-disabled", 
      "--no-hide-disabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-list-identity-pools{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-lookup-developer-identity{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--developer-user-identifier", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-merge-developer-identities{
   $flags=(
      "--source-user-identifier", 
      "--destination-user-identifier", 
      "--developer-provider-name", 
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-set-identity-pool-roles{
   $flags=(
      "--identity-pool-id", 
      "--roles", 
      "--role-mappings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-unlink-developer-identity{
   $flags=(
      "--identity-id", 
      "--identity-pool-id", 
      "--developer-provider-name", 
      "--developer-user-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-unlink-identity{
   $flags=(
      "--identity-id", 
      "--logins", 
      "--logins-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-identity-update-identity-pool{
   $flags=(
      "--identity-pool-id", 
      "--identity-pool-name", 
      "--allow-unauthenticated-identities", 
      "--no-allow-unauthenticated-identities", 
      "--allow-classic-flow", 
      "--no-allow-classic-flow", 
      "--supported-login-providers", 
      "--developer-provider-name", 
      "--open-id-connect-provider-arns", 
      "--cognito-identity-providers", 
      "--saml-provider-arns", 
      "--identity-pool-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp{
   $commands=(
      "add-custom-attributes", 
      "admin-add-user-to-group", 
      "admin-confirm-sign-up", 
      "admin-create-user", 
      "admin-delete-user", 
      "admin-delete-user-attributes", 
      "admin-disable-provider-for-user", 
      "admin-disable-user", 
      "admin-enable-user", 
      "admin-forget-device", 
      "admin-get-device", 
      "admin-get-user", 
      "admin-initiate-auth", 
      "admin-link-provider-for-user", 
      "admin-list-devices", 
      "admin-list-groups-for-user", 
      "admin-list-user-auth-events", 
      "admin-remove-user-from-group", 
      "admin-reset-user-password", 
      "admin-respond-to-auth-challenge", 
      "admin-set-user-mfa-preference", 
      "admin-set-user-password", 
      "admin-set-user-settings", 
      "admin-update-auth-event-feedback", 
      "admin-update-device-status", 
      "admin-update-user-attributes", 
      "admin-user-global-sign-out", 
      "associate-software-token", 
      "change-password", 
      "confirm-device", 
      "confirm-forgot-password", 
      "confirm-sign-up", 
      "create-group", 
      "create-identity-provider", 
      "create-resource-server", 
      "create-user-import-job", 
      "create-user-pool", 
      "create-user-pool-client", 
      "create-user-pool-domain", 
      "delete-group", 
      "delete-identity-provider", 
      "delete-resource-server", 
      "delete-user", 
      "delete-user-attributes", 
      "delete-user-pool", 
      "delete-user-pool-client", 
      "delete-user-pool-domain", 
      "describe-identity-provider", 
      "describe-resource-server", 
      "describe-risk-configuration", 
      "describe-user-import-job", 
      "describe-user-pool", 
      "describe-user-pool-client", 
      "describe-user-pool-domain", 
      "forget-device", 
      "forgot-password", 
      "get-csv-header", 
      "get-device", 
      "get-group", 
      "get-identity-provider-by-identifier", 
      "get-signing-certificate", 
      "get-ui-customization", 
      "get-user", 
      "get-user-attribute-verification-code", 
      "get-user-pool-mfa-config", 
      "global-sign-out", 
      "initiate-auth", 
      "list-devices", 
      "list-groups", 
      "list-identity-providers", 
      "list-resource-servers", 
      "list-tags-for-resource", 
      "list-user-import-jobs", 
      "list-user-pool-clients", 
      "list-user-pools", 
      "list-users", 
      "list-users-in-group", 
      "resend-confirmation-code", 
      "respond-to-auth-challenge", 
      "set-risk-configuration", 
      "set-ui-customization", 
      "set-user-mfa-preference", 
      "set-user-pool-mfa-config", 
      "set-user-settings", 
      "sign-up", 
      "start-user-import-job", 
      "stop-user-import-job", 
      "tag-resource", 
      "untag-resource", 
      "update-auth-event-feedback", 
      "update-device-status", 
      "update-group", 
      "update-identity-provider", 
      "update-resource-server", 
      "update-user-attributes", 
      "update-user-pool", 
      "update-user-pool-client", 
      "update-user-pool-domain", 
      "verify-software-token", 
      "verify-user-attribute"
    );
   return $commands;
}
function Get-cognito-idp-add-custom-attributes{
   $flags=(
      "--user-pool-id", 
      "--custom-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-add-user-to-group{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-confirm-sign-up{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-create-user{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--user-attributes", 
      "--validation-data", 
      "--temporary-password", 
      "--force-alias-creation", 
      "--no-force-alias-creation", 
      "--message-action", 
      "--desired-delivery-mediums", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-delete-user{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-delete-user-attributes{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--user-attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-disable-provider-for-user{
   $flags=(
      "--user-pool-id", 
      "--user", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-disable-user{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-enable-user{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-forget-device{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--device-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-get-device{
   $flags=(
      "--device-key", 
      "--user-pool-id", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-get-user{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-initiate-auth{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--auth-flow", 
      "--auth-parameters", 
      "--client-metadata", 
      "--analytics-metadata", 
      "--context-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-link-provider-for-user{
   $flags=(
      "--user-pool-id", 
      "--destination-user", 
      "--source-user", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-list-devices{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--limit", 
      "--pagination-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-list-groups-for-user{
   $flags=(
      "--username", 
      "--user-pool-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-list-user-auth-events{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-remove-user-from-group{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-reset-user-password{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-respond-to-auth-challenge{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--challenge-name", 
      "--challenge-responses", 
      "--session", 
      "--analytics-metadata", 
      "--context-data", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-set-user-mfa-preference{
   $flags=(
      "--sms-mfa-settings", 
      "--software-token-mfa-settings", 
      "--username", 
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-set-user-password{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--password", 
      "--permanent", 
      "--no-permanent", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-set-user-settings{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--mfa-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-update-auth-event-feedback{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--event-id", 
      "--feedback-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-update-device-status{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--device-key", 
      "--device-remembered-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-update-user-attributes{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--user-attributes", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-admin-user-global-sign-out{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-associate-software-token{
   $flags=(
      "--access-token", 
      "--session", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-change-password{
   $flags=(
      "--previous-password", 
      "--proposed-password", 
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-confirm-device{
   $flags=(
      "--access-token", 
      "--device-key", 
      "--device-secret-verifier-config", 
      "--device-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-confirm-forgot-password{
   $flags=(
      "--client-id", 
      "--secret-hash", 
      "--username", 
      "--confirmation-code", 
      "--password", 
      "--analytics-metadata", 
      "--user-context-data", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-confirm-sign-up{
   $flags=(
      "--client-id", 
      "--secret-hash", 
      "--username", 
      "--confirmation-code", 
      "--force-alias-creation", 
      "--no-force-alias-creation", 
      "--analytics-metadata", 
      "--user-context-data", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-create-group{
   $flags=(
      "--group-name", 
      "--user-pool-id", 
      "--description", 
      "--role-arn", 
      "--precedence", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-create-identity-provider{
   $flags=(
      "--user-pool-id", 
      "--provider-name", 
      "--provider-type", 
      "--provider-details", 
      "--attribute-mapping", 
      "--idp-identifiers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-create-resource-server{
   $flags=(
      "--user-pool-id", 
      "--identifier", 
      "--name", 
      "--scopes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-create-user-import-job{
   $flags=(
      "--job-name", 
      "--user-pool-id", 
      "--cloud-watch-logs-role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-create-user-pool{
   $flags=(
      "--pool-name", 
      "--policies", 
      "--lambda-config", 
      "--auto-verified-attributes", 
      "--alias-attributes", 
      "--username-attributes", 
      "--sms-verification-message", 
      "--email-verification-message", 
      "--email-verification-subject", 
      "--verification-message-template", 
      "--sms-authentication-message", 
      "--mfa-configuration", 
      "--device-configuration", 
      "--email-configuration", 
      "--sms-configuration", 
      "--user-pool-tags", 
      "--admin-create-user-config", 
      "--schema", 
      "--user-pool-add-ons", 
      "--username-configuration", 
      "--account-recovery-setting", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-create-user-pool-client{
   $flags=(
      "--user-pool-id", 
      "--client-name", 
      "--generate-secret", 
      "--no-generate-secret", 
      "--refresh-token-validity", 
      "--read-attributes", 
      "--write-attributes", 
      "--explicit-auth-flows", 
      "--supported-identity-providers", 
      "--callback-urls", 
      "--logout-urls", 
      "--default-redirect-uri", 
      "--allowed-o-auth-flows", 
      "--allowed-o-auth-scopes", 
      "--allowed-o-auth-flows-user-pool-client", 
      "--no-allowed-o-auth-flows-user-pool-client", 
      "--analytics-configuration", 
      "--prevent-user-existence-errors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-create-user-pool-domain{
   $flags=(
      "--domain", 
      "--user-pool-id", 
      "--custom-domain-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-delete-group{
   $flags=(
      "--group-name", 
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-delete-identity-provider{
   $flags=(
      "--user-pool-id", 
      "--provider-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-delete-resource-server{
   $flags=(
      "--user-pool-id", 
      "--identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-delete-user{
   $flags=(
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-delete-user-attributes{
   $flags=(
      "--user-attribute-names", 
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-delete-user-pool{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-delete-user-pool-client{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-delete-user-pool-domain{
   $flags=(
      "--domain", 
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-describe-identity-provider{
   $flags=(
      "--user-pool-id", 
      "--provider-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-describe-resource-server{
   $flags=(
      "--user-pool-id", 
      "--identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-describe-risk-configuration{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-describe-user-import-job{
   $flags=(
      "--user-pool-id", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-describe-user-pool{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-describe-user-pool-client{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-describe-user-pool-domain{
   $flags=(
      "--domain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-forget-device{
   $flags=(
      "--access-token", 
      "--device-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-forgot-password{
   $flags=(
      "--client-id", 
      "--secret-hash", 
      "--user-context-data", 
      "--username", 
      "--analytics-metadata", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-csv-header{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-device{
   $flags=(
      "--device-key", 
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-group{
   $flags=(
      "--group-name", 
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-identity-provider-by-identifier{
   $flags=(
      "--user-pool-id", 
      "--idp-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-signing-certificate{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-ui-customization{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-user{
   $flags=(
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-user-attribute-verification-code{
   $flags=(
      "--access-token", 
      "--attribute-name", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-get-user-pool-mfa-config{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-global-sign-out{
   $flags=(
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-initiate-auth{
   $flags=(
      "--auth-flow", 
      "--auth-parameters", 
      "--client-metadata", 
      "--client-id", 
      "--analytics-metadata", 
      "--user-context-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-devices{
   $flags=(
      "--access-token", 
      "--limit", 
      "--pagination-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-groups{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-identity-providers{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-resource-servers{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-user-import-jobs{
   $flags=(
      "--user-pool-id", 
      "--max-results", 
      "--pagination-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-user-pool-clients{
   $flags=(
      "--user-pool-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-user-pools{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-users{
   $flags=(
      "--user-pool-id", 
      "--attributes-to-get", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-list-users-in-group{
   $flags=(
      "--user-pool-id", 
      "--group-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-resend-confirmation-code{
   $flags=(
      "--client-id", 
      "--secret-hash", 
      "--user-context-data", 
      "--username", 
      "--analytics-metadata", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-respond-to-auth-challenge{
   $flags=(
      "--client-id", 
      "--challenge-name", 
      "--session", 
      "--challenge-responses", 
      "--analytics-metadata", 
      "--user-context-data", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-set-risk-configuration{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--compromised-credentials-risk-configuration", 
      "--account-takeover-risk-configuration", 
      "--risk-exception-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-set-ui-customization{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--css", 
      "--image-file", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-set-user-mfa-preference{
   $flags=(
      "--sms-mfa-settings", 
      "--software-token-mfa-settings", 
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-set-user-pool-mfa-config{
   $flags=(
      "--user-pool-id", 
      "--sms-mfa-configuration", 
      "--software-token-mfa-configuration", 
      "--mfa-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-set-user-settings{
   $flags=(
      "--access-token", 
      "--mfa-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-sign-up{
   $flags=(
      "--client-id", 
      "--secret-hash", 
      "--username", 
      "--password", 
      "--user-attributes", 
      "--validation-data", 
      "--analytics-metadata", 
      "--user-context-data", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-start-user-import-job{
   $flags=(
      "--user-pool-id", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-stop-user-import-job{
   $flags=(
      "--user-pool-id", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-auth-event-feedback{
   $flags=(
      "--user-pool-id", 
      "--username", 
      "--event-id", 
      "--feedback-token", 
      "--feedback-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-device-status{
   $flags=(
      "--access-token", 
      "--device-key", 
      "--device-remembered-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-group{
   $flags=(
      "--group-name", 
      "--user-pool-id", 
      "--description", 
      "--role-arn", 
      "--precedence", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-identity-provider{
   $flags=(
      "--user-pool-id", 
      "--provider-name", 
      "--provider-details", 
      "--attribute-mapping", 
      "--idp-identifiers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-resource-server{
   $flags=(
      "--user-pool-id", 
      "--identifier", 
      "--name", 
      "--scopes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-user-attributes{
   $flags=(
      "--user-attributes", 
      "--access-token", 
      "--client-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-user-pool{
   $flags=(
      "--user-pool-id", 
      "--policies", 
      "--lambda-config", 
      "--auto-verified-attributes", 
      "--sms-verification-message", 
      "--email-verification-message", 
      "--email-verification-subject", 
      "--verification-message-template", 
      "--sms-authentication-message", 
      "--mfa-configuration", 
      "--device-configuration", 
      "--email-configuration", 
      "--sms-configuration", 
      "--user-pool-tags", 
      "--admin-create-user-config", 
      "--user-pool-add-ons", 
      "--account-recovery-setting", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-user-pool-client{
   $flags=(
      "--user-pool-id", 
      "--client-id", 
      "--client-name", 
      "--refresh-token-validity", 
      "--read-attributes", 
      "--write-attributes", 
      "--explicit-auth-flows", 
      "--supported-identity-providers", 
      "--callback-urls", 
      "--logout-urls", 
      "--default-redirect-uri", 
      "--allowed-o-auth-flows", 
      "--allowed-o-auth-scopes", 
      "--allowed-o-auth-flows-user-pool-client", 
      "--no-allowed-o-auth-flows-user-pool-client", 
      "--analytics-configuration", 
      "--prevent-user-existence-errors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-update-user-pool-domain{
   $flags=(
      "--domain", 
      "--user-pool-id", 
      "--custom-domain-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-verify-software-token{
   $flags=(
      "--access-token", 
      "--session", 
      "--user-code", 
      "--friendly-device-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-idp-verify-user-attribute{
   $flags=(
      "--access-token", 
      "--attribute-name", 
      "--code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync{
   $commands=(
      "bulk-publish", 
      "delete-dataset", 
      "describe-dataset", 
      "describe-identity-pool-usage", 
      "describe-identity-usage", 
      "get-bulk-publish-details", 
      "get-cognito-events", 
      "get-identity-pool-configuration", 
      "list-datasets", 
      "list-identity-pool-usage", 
      "list-records", 
      "register-device", 
      "set-cognito-events", 
      "set-identity-pool-configuration", 
      "subscribe-to-dataset", 
      "unsubscribe-from-dataset", 
      "update-records"
    );
   return $commands;
}
function Get-cognito-sync-bulk-publish{
   $flags=(
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-delete-dataset{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--dataset-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-describe-dataset{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--dataset-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-describe-identity-pool-usage{
   $flags=(
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-describe-identity-usage{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-get-bulk-publish-details{
   $flags=(
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-get-cognito-events{
   $flags=(
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-get-identity-pool-configuration{
   $flags=(
      "--identity-pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-list-datasets{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-list-identity-pool-usage{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-list-records{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--dataset-name", 
      "--last-sync-count", 
      "--next-token", 
      "--max-results", 
      "--sync-session-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-register-device{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--platform", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-set-cognito-events{
   $flags=(
      "--identity-pool-id", 
      "--events", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-set-identity-pool-configuration{
   $flags=(
      "--identity-pool-id", 
      "--push-sync", 
      "--cognito-streams", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-subscribe-to-dataset{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--dataset-name", 
      "--device-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-unsubscribe-from-dataset{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--dataset-name", 
      "--device-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cognito-sync-update-records{
   $flags=(
      "--identity-pool-id", 
      "--identity-id", 
      "--dataset-name", 
      "--device-id", 
      "--record-patches", 
      "--sync-session-token", 
      "--client-context", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend{
   $commands=(
      "batch-detect-dominant-language", 
      "batch-detect-entities", 
      "batch-detect-key-phrases", 
      "batch-detect-sentiment", 
      "batch-detect-syntax", 
      "classify-document", 
      "create-document-classifier", 
      "create-endpoint", 
      "create-entity-recognizer", 
      "delete-document-classifier", 
      "delete-endpoint", 
      "delete-entity-recognizer", 
      "describe-document-classification-job", 
      "describe-document-classifier", 
      "describe-dominant-language-detection-job", 
      "describe-endpoint", 
      "describe-entities-detection-job", 
      "describe-entity-recognizer", 
      "describe-key-phrases-detection-job", 
      "describe-sentiment-detection-job", 
      "describe-topics-detection-job", 
      "detect-dominant-language", 
      "detect-entities", 
      "detect-key-phrases", 
      "detect-sentiment", 
      "detect-syntax", 
      "list-document-classification-jobs", 
      "list-document-classifiers", 
      "list-dominant-language-detection-jobs", 
      "list-endpoints", 
      "list-entities-detection-jobs", 
      "list-entity-recognizers", 
      "list-key-phrases-detection-jobs", 
      "list-sentiment-detection-jobs", 
      "list-tags-for-resource", 
      "list-topics-detection-jobs", 
      "start-document-classification-job", 
      "start-dominant-language-detection-job", 
      "start-entities-detection-job", 
      "start-key-phrases-detection-job", 
      "start-sentiment-detection-job", 
      "start-topics-detection-job", 
      "stop-dominant-language-detection-job", 
      "stop-entities-detection-job", 
      "stop-key-phrases-detection-job", 
      "stop-sentiment-detection-job", 
      "stop-training-document-classifier", 
      "stop-training-entity-recognizer", 
      "tag-resource", 
      "untag-resource", 
      "update-endpoint"
    );
   return $commands;
}
function Get-comprehend-batch-detect-dominant-language{
   $flags=(
      "--text-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-batch-detect-entities{
   $flags=(
      "--text-list", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-batch-detect-key-phrases{
   $flags=(
      "--text-list", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-batch-detect-sentiment{
   $flags=(
      "--text-list", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-batch-detect-syntax{
   $flags=(
      "--text-list", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-classify-document{
   $flags=(
      "--text", 
      "--endpoint-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-create-document-classifier{
   $flags=(
      "--document-classifier-name", 
      "--data-access-role-arn", 
      "--tags", 
      "--input-data-config", 
      "--output-data-config", 
      "--client-request-token", 
      "--language-code", 
      "--volume-kms-key-id", 
      "--vpc-config", 
      "--mode", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-create-endpoint{
   $flags=(
      "--endpoint-name", 
      "--model-arn", 
      "--desired-inference-units", 
      "--client-request-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-create-entity-recognizer{
   $flags=(
      "--recognizer-name", 
      "--data-access-role-arn", 
      "--tags", 
      "--input-data-config", 
      "--client-request-token", 
      "--language-code", 
      "--volume-kms-key-id", 
      "--vpc-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-delete-document-classifier{
   $flags=(
      "--document-classifier-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-delete-endpoint{
   $flags=(
      "--endpoint-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-delete-entity-recognizer{
   $flags=(
      "--entity-recognizer-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-document-classification-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-document-classifier{
   $flags=(
      "--document-classifier-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-dominant-language-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-endpoint{
   $flags=(
      "--endpoint-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-entities-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-entity-recognizer{
   $flags=(
      "--entity-recognizer-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-key-phrases-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-sentiment-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-describe-topics-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-detect-dominant-language{
   $flags=(
      "--text", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-detect-entities{
   $flags=(
      "--text", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-detect-key-phrases{
   $flags=(
      "--text", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-detect-sentiment{
   $flags=(
      "--text", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-detect-syntax{
   $flags=(
      "--text", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-document-classification-jobs{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-document-classifiers{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-dominant-language-detection-jobs{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-endpoints{
   $flags=(
      "--filter", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-entities-detection-jobs{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-entity-recognizers{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-key-phrases-detection-jobs{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-sentiment-detection-jobs{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-list-topics-detection-jobs{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-start-document-classification-job{
   $flags=(
      "--job-name", 
      "--document-classifier-arn", 
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--client-request-token", 
      "--volume-kms-key-id", 
      "--vpc-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-start-dominant-language-detection-job{
   $flags=(
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--job-name", 
      "--client-request-token", 
      "--volume-kms-key-id", 
      "--vpc-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-start-entities-detection-job{
   $flags=(
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--job-name", 
      "--entity-recognizer-arn", 
      "--language-code", 
      "--client-request-token", 
      "--volume-kms-key-id", 
      "--vpc-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-start-key-phrases-detection-job{
   $flags=(
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--job-name", 
      "--language-code", 
      "--client-request-token", 
      "--volume-kms-key-id", 
      "--vpc-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-start-sentiment-detection-job{
   $flags=(
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--job-name", 
      "--language-code", 
      "--client-request-token", 
      "--volume-kms-key-id", 
      "--vpc-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-start-topics-detection-job{
   $flags=(
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--job-name", 
      "--number-of-topics", 
      "--client-request-token", 
      "--volume-kms-key-id", 
      "--vpc-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-stop-dominant-language-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-stop-entities-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-stop-key-phrases-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-stop-sentiment-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-stop-training-document-classifier{
   $flags=(
      "--document-classifier-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-stop-training-entity-recognizer{
   $flags=(
      "--entity-recognizer-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehend-update-endpoint{
   $flags=(
      "--endpoint-arn", 
      "--desired-inference-units", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical{
   $commands=(
      "describe-entities-detection-v2-job", 
      "describe-phi-detection-job", 
      "detect-entities-v2", 
      "detect-phi", 
      "infer-icd10-cm", 
      "infer-rx-norm", 
      "list-entities-detection-v2-jobs", 
      "list-phi-detection-jobs", 
      "start-entities-detection-v2-job", 
      "start-phi-detection-job", 
      "stop-entities-detection-v2-job", 
      "stop-phi-detection-job"
    );
   return $commands;
}
function Get-comprehendmedical-describe-entities-detection-v2-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-describe-phi-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-detect-entities-v2{
   $flags=(
      "--text", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-detect-phi{
   $flags=(
      "--text", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-infer-icd10-cm{
   $flags=(
      "--text", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-infer-rx-norm{
   $flags=(
      "--text", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-list-entities-detection-v2-jobs{
   $flags=(
      "--filter", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-list-phi-detection-jobs{
   $flags=(
      "--filter", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-start-entities-detection-v2-job{
   $flags=(
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--job-name", 
      "--client-request-token", 
      "--kms-key", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-start-phi-detection-job{
   $flags=(
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--job-name", 
      "--client-request-token", 
      "--kms-key", 
      "--language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-stop-entities-detection-v2-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-comprehendmedical-stop-phi-detection-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-compute-optimizer{
   $commands=(
      "get-auto-scaling-group-recommendations", 
      "get-ec2-instance-recommendations", 
      "get-ec2-recommendation-projected-metrics", 
      "get-enrollment-status", 
      "get-recommendation-summaries", 
      "update-enrollment-status"
    );
   return $commands;
}
function Get-compute-optimizer-get-auto-scaling-group-recommendations{
   $flags=(
      "--account-ids", 
      "--auto-scaling-group-arns", 
      "--next-token", 
      "--max-results", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-compute-optimizer-get-ec2-instance-recommendations{
   $flags=(
      "--instance-arns", 
      "--next-token", 
      "--max-results", 
      "--filters", 
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-compute-optimizer-get-ec2-recommendation-projected-metrics{
   $flags=(
      "--instance-arn", 
      "--stat", 
      "--period", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-compute-optimizer-get-enrollment-status{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-compute-optimizer-get-recommendation-summaries{
   $flags=(
      "--account-ids", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-compute-optimizer-update-enrollment-status{
   $flags=(
      "--status", 
      "--include-member-accounts", 
      "--no-include-member-accounts", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice{
   $commands=(
      "batch-get-aggregate-resource-config", 
      "batch-get-resource-config", 
      "delete-aggregation-authorization", 
      "delete-config-rule", 
      "delete-configuration-aggregator", 
      "delete-configuration-recorder", 
      "delete-conformance-pack", 
      "delete-delivery-channel", 
      "delete-evaluation-results", 
      "delete-organization-config-rule", 
      "delete-organization-conformance-pack", 
      "delete-pending-aggregation-request", 
      "delete-remediation-configuration", 
      "delete-remediation-exceptions", 
      "delete-resource-config", 
      "delete-retention-configuration", 
      "deliver-config-snapshot", 
      "describe-aggregate-compliance-by-config-rules", 
      "describe-aggregation-authorizations", 
      "describe-compliance-by-config-rule", 
      "describe-compliance-by-resource", 
      "describe-config-rule-evaluation-status", 
      "describe-config-rules", 
      "describe-configuration-aggregator-sources-status", 
      "describe-configuration-aggregators", 
      "describe-configuration-recorder-status", 
      "describe-configuration-recorders", 
      "describe-conformance-pack-compliance", 
      "describe-conformance-pack-status", 
      "describe-conformance-packs", 
      "describe-delivery-channel-status", 
      "describe-delivery-channels", 
      "describe-organization-config-rule-statuses", 
      "describe-organization-config-rules", 
      "describe-organization-conformance-pack-statuses", 
      "describe-organization-conformance-packs", 
      "describe-pending-aggregation-requests", 
      "describe-remediation-configurations", 
      "describe-remediation-exceptions", 
      "describe-remediation-execution-status", 
      "describe-retention-configurations", 
      "get-aggregate-compliance-details-by-config-rule", 
      "get-aggregate-config-rule-compliance-summary", 
      "get-aggregate-discovered-resource-counts", 
      "get-aggregate-resource-config", 
      "get-compliance-details-by-config-rule", 
      "get-compliance-details-by-resource", 
      "get-compliance-summary-by-config-rule", 
      "get-compliance-summary-by-resource-type", 
      "get-conformance-pack-compliance-details", 
      "get-conformance-pack-compliance-summary", 
      "get-discovered-resource-counts", 
      "get-organization-config-rule-detailed-status", 
      "get-organization-conformance-pack-detailed-status", 
      "get-resource-config-history", 
      "get-status", 
      "list-aggregate-discovered-resources", 
      "list-discovered-resources", 
      "list-tags-for-resource", 
      "put-aggregation-authorization", 
      "put-config-rule", 
      "put-configuration-aggregator", 
      "put-configuration-recorder", 
      "put-conformance-pack", 
      "put-delivery-channel", 
      "put-evaluations", 
      "put-organization-config-rule", 
      "put-organization-conformance-pack", 
      "put-remediation-configurations", 
      "put-remediation-exceptions", 
      "put-resource-config", 
      "put-retention-configuration", 
      "select-aggregate-resource-config", 
      "select-resource-config", 
      "start-config-rules-evaluation", 
      "start-configuration-recorder", 
      "start-remediation-execution", 
      "stop-configuration-recorder", 
      "subscribe", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-configservice-batch-get-aggregate-resource-config{
   $flags=(
      "--configuration-aggregator-name", 
      "--resource-identifiers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-batch-get-resource-config{
   $flags=(
      "--resource-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-aggregation-authorization{
   $flags=(
      "--authorized-account-id", 
      "--authorized-aws-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-config-rule{
   $flags=(
      "--config-rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-configuration-aggregator{
   $flags=(
      "--configuration-aggregator-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-configuration-recorder{
   $flags=(
      "--configuration-recorder-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-conformance-pack{
   $flags=(
      "--conformance-pack-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-delivery-channel{
   $flags=(
      "--delivery-channel-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-evaluation-results{
   $flags=(
      "--config-rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-organization-config-rule{
   $flags=(
      "--organization-config-rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-organization-conformance-pack{
   $flags=(
      "--organization-conformance-pack-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-pending-aggregation-request{
   $flags=(
      "--requester-account-id", 
      "--requester-aws-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-remediation-configuration{
   $flags=(
      "--config-rule-name", 
      "--resource-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-remediation-exceptions{
   $flags=(
      "--config-rule-name", 
      "--resource-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-resource-config{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-delete-retention-configuration{
   $flags=(
      "--retention-configuration-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-deliver-config-snapshot{
   $flags=(
      "--delivery-channel-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-aggregate-compliance-by-config-rules{
   $flags=(
      "--configuration-aggregator-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-aggregation-authorizations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-compliance-by-config-rule{
   $flags=(
      "--config-rule-names", 
      "--compliance-types", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-compliance-by-resource{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--compliance-types", 
      "--limit", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-config-rule-evaluation-status{
   $flags=(
      "--config-rule-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-config-rules{
   $flags=(
      "--config-rule-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-configuration-aggregator-sources-status{
   $flags=(
      "--configuration-aggregator-name", 
      "--update-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-configuration-aggregators{
   $flags=(
      "--configuration-aggregator-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-configuration-recorder-status{
   $flags=(
      "--configuration-recorder-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-configuration-recorders{
   $flags=(
      "--configuration-recorder-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-conformance-pack-compliance{
   $flags=(
      "--conformance-pack-name", 
      "--filters", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-conformance-pack-status{
   $flags=(
      "--conformance-pack-names", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-conformance-packs{
   $flags=(
      "--conformance-pack-names", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-delivery-channel-status{
   $flags=(
      "--delivery-channel-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-delivery-channels{
   $flags=(
      "--delivery-channel-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-organization-config-rule-statuses{
   $flags=(
      "--organization-config-rule-names", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-organization-config-rules{
   $flags=(
      "--organization-config-rule-names", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-organization-conformance-pack-statuses{
   $flags=(
      "--organization-conformance-pack-names", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-organization-conformance-packs{
   $flags=(
      "--organization-conformance-pack-names", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-pending-aggregation-requests{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-remediation-configurations{
   $flags=(
      "--config-rule-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-remediation-exceptions{
   $flags=(
      "--config-rule-name", 
      "--resource-keys", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-remediation-execution-status{
   $flags=(
      "--config-rule-name", 
      "--resource-keys", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-describe-retention-configurations{
   $flags=(
      "--retention-configuration-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-aggregate-compliance-details-by-config-rule{
   $flags=(
      "--configuration-aggregator-name", 
      "--config-rule-name", 
      "--account-id", 
      "--aws-region", 
      "--compliance-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-aggregate-config-rule-compliance-summary{
   $flags=(
      "--configuration-aggregator-name", 
      "--filters", 
      "--group-by-key", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-aggregate-discovered-resource-counts{
   $flags=(
      "--configuration-aggregator-name", 
      "--filters", 
      "--group-by-key", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-aggregate-resource-config{
   $flags=(
      "--configuration-aggregator-name", 
      "--resource-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-compliance-details-by-config-rule{
   $flags=(
      "--config-rule-name", 
      "--compliance-types", 
      "--limit", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-compliance-details-by-resource{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--compliance-types", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-compliance-summary-by-config-rule{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-compliance-summary-by-resource-type{
   $flags=(
      "--resource-types", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-conformance-pack-compliance-details{
   $flags=(
      "--conformance-pack-name", 
      "--filters", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-conformance-pack-compliance-summary{
   $flags=(
      "--conformance-pack-names", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-discovered-resource-counts{
   $flags=(
      "--resource-types", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-organization-config-rule-detailed-status{
   $flags=(
      "--organization-config-rule-name", 
      "--filters", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-organization-conformance-pack-detailed-status{
   $flags=(
      "--organization-conformance-pack-name", 
      "--filters", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-resource-config-history{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--later-time", 
      "--earlier-time", 
      "--chronological-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-get-status{
   $flags=("");
   return $flags;
}
function Get-configservice-list-aggregate-discovered-resources{
   $flags=(
      "--configuration-aggregator-name", 
      "--resource-type", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-list-discovered-resources{
   $flags=(
      "--resource-type", 
      "--resource-ids", 
      "--resource-name", 
      "--limit", 
      "--include-deleted-resources", 
      "--no-include-deleted-resources", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-aggregation-authorization{
   $flags=(
      "--authorized-account-id", 
      "--authorized-aws-region", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-config-rule{
   $flags=(
      "--config-rule", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-configuration-aggregator{
   $flags=(
      "--configuration-aggregator-name", 
      "--account-aggregation-sources", 
      "--organization-aggregation-source", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-configuration-recorder{
   $flags=(
      "--configuration-recorder", 
      "--recording-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-conformance-pack{
   $flags=(
      "--conformance-pack-name", 
      "--template-s3-uri", 
      "--template-body", 
      "--delivery-s3-bucket", 
      "--delivery-s3-key-prefix", 
      "--conformance-pack-input-parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-delivery-channel{
   $flags=(
      "--delivery-channel", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-evaluations{
   $flags=(
      "--evaluations", 
      "--result-token", 
      "--test-mode", 
      "--no-test-mode", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-organization-config-rule{
   $flags=(
      "--organization-config-rule-name", 
      "--organization-managed-rule-metadata", 
      "--organization-custom-rule-metadata", 
      "--excluded-accounts", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-organization-conformance-pack{
   $flags=(
      "--organization-conformance-pack-name", 
      "--template-s3-uri", 
      "--template-body", 
      "--delivery-s3-bucket", 
      "--delivery-s3-key-prefix", 
      "--conformance-pack-input-parameters", 
      "--excluded-accounts", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-remediation-configurations{
   $flags=(
      "--remediation-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-remediation-exceptions{
   $flags=(
      "--config-rule-name", 
      "--resource-keys", 
      "--message", 
      "--expiration-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-resource-config{
   $flags=(
      "--resource-type", 
      "--schema-version-id", 
      "--resource-id", 
      "--resource-name", 
      "--configuration", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-put-retention-configuration{
   $flags=(
      "--retention-period-in-days", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-select-aggregate-resource-config{
   $flags=(
      "--expression", 
      "--configuration-aggregator-name", 
      "--limit", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-select-resource-config{
   $flags=(
      "--expression", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-start-config-rules-evaluation{
   $flags=(
      "--config-rule-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-start-configuration-recorder{
   $flags=(
      "--configuration-recorder-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-start-remediation-execution{
   $flags=(
      "--config-rule-name", 
      "--resource-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-stop-configuration-recorder{
   $flags=(
      "--configuration-recorder-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-subscribe{
   $flags=(
      "--s3-bucket", 
      "--sns-topic", 
      "--iam-role"
    );
   return $flags;
}
function Get-configservice-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configservice-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-configure{
   $commands=(
      "add-model", 
      "get", 
      "list", 
      "set"
    );
   return $commands;
}
function Get-configure-add-model{
   $flags=(
      "--service-model", 
      "--service-name"
    );
   return $flags;
}
function Get-configure-get{
   $flags=(
      "--profile"
    );
   return $flags;
}
function Get-configure-list{
   $flags=(
      "--profile"
    );
   return $flags;
}
function Get-configure-set{
   $flags=(
      "--profile"
    );
   return $flags;
}
function Get-connect{
   $commands=(
      "create-user", 
      "delete-user", 
      "describe-user", 
      "describe-user-hierarchy-group", 
      "describe-user-hierarchy-structure", 
      "get-contact-attributes", 
      "get-current-metric-data", 
      "get-federation-token", 
      "get-metric-data", 
      "list-contact-flows", 
      "list-hours-of-operations", 
      "list-phone-numbers", 
      "list-queues", 
      "list-routing-profiles", 
      "list-security-profiles", 
      "list-tags-for-resource", 
      "list-user-hierarchy-groups", 
      "list-users", 
      "start-chat-contact", 
      "start-outbound-voice-contact", 
      "stop-contact", 
      "tag-resource", 
      "untag-resource", 
      "update-contact-attributes", 
      "update-user-hierarchy", 
      "update-user-identity-info", 
      "update-user-phone-config", 
      "update-user-routing-profile", 
      "update-user-security-profiles"
    );
   return $commands;
}
function Get-connect-create-user{
   $flags=(
      "--username", 
      "--password", 
      "--identity-info", 
      "--phone-config", 
      "--directory-user-id", 
      "--security-profile-ids", 
      "--routing-profile-id", 
      "--hierarchy-group-id", 
      "--instance-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-delete-user{
   $flags=(
      "--instance-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-describe-user{
   $flags=(
      "--user-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-describe-user-hierarchy-group{
   $flags=(
      "--hierarchy-group-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-describe-user-hierarchy-structure{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-get-contact-attributes{
   $flags=(
      "--instance-id", 
      "--initial-contact-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-get-current-metric-data{
   $flags=(
      "--instance-id", 
      "--filters", 
      "--groupings", 
      "--current-metrics", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-get-federation-token{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-get-metric-data{
   $flags=(
      "--instance-id", 
      "--start-time", 
      "--end-time", 
      "--filters", 
      "--groupings", 
      "--historical-metrics", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-contact-flows{
   $flags=(
      "--instance-id", 
      "--contact-flow-types", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-hours-of-operations{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-phone-numbers{
   $flags=(
      "--instance-id", 
      "--phone-number-types", 
      "--phone-number-country-codes", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-queues{
   $flags=(
      "--instance-id", 
      "--queue-types", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-routing-profiles{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-security-profiles{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-user-hierarchy-groups{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-list-users{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-start-chat-contact{
   $flags=(
      "--instance-id", 
      "--contact-flow-id", 
      "--attributes", 
      "--participant-details", 
      "--initial-message", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-start-outbound-voice-contact{
   $flags=(
      "--destination-phone-number", 
      "--contact-flow-id", 
      "--instance-id", 
      "--client-token", 
      "--source-phone-number", 
      "--queue-id", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-stop-contact{
   $flags=(
      "--contact-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-update-contact-attributes{
   $flags=(
      "--initial-contact-id", 
      "--instance-id", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-update-user-hierarchy{
   $flags=(
      "--hierarchy-group-id", 
      "--user-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-update-user-identity-info{
   $flags=(
      "--identity-info", 
      "--user-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-update-user-phone-config{
   $flags=(
      "--phone-config", 
      "--user-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-update-user-routing-profile{
   $flags=(
      "--routing-profile-id", 
      "--user-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connect-update-user-security-profiles{
   $flags=(
      "--security-profile-ids", 
      "--user-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connectparticipant{
   $commands=(
      "create-participant-connection", 
      "disconnect-participant", 
      "get-transcript", 
      "send-event", 
      "send-message"
    );
   return $commands;
}
function Get-connectparticipant-create-participant-connection{
   $flags=(
      "--type", 
      "--participant-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connectparticipant-disconnect-participant{
   $flags=(
      "--client-token", 
      "--connection-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connectparticipant-get-transcript{
   $flags=(
      "--contact-id", 
      "--max-results", 
      "--next-token", 
      "--scan-direction", 
      "--sort-order", 
      "--start-position", 
      "--connection-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connectparticipant-send-event{
   $flags=(
      "--content-type", 
      "--content", 
      "--client-token", 
      "--connection-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-connectparticipant-send-message{
   $flags=(
      "--content-type", 
      "--content", 
      "--client-token", 
      "--connection-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cur{
   $commands=(
      "delete-report-definition", 
      "describe-report-definitions", 
      "modify-report-definition", 
      "put-report-definition"
    );
   return $commands;
}
function Get-cur-delete-report-definition{
   $flags=(
      "--report-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cur-describe-report-definitions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cur-modify-report-definition{
   $flags=(
      "--report-name", 
      "--report-definition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-cur-put-report-definition{
   $flags=(
      "--report-definition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange{
   $commands=(
      "cancel-job", 
      "create-data-set", 
      "create-job", 
      "create-revision", 
      "delete-asset", 
      "delete-data-set", 
      "delete-revision", 
      "get-asset", 
      "get-data-set", 
      "get-job", 
      "get-revision", 
      "list-data-set-revisions", 
      "list-data-sets", 
      "list-jobs", 
      "list-revision-assets", 
      "list-tags-for-resource", 
      "start-job", 
      "tag-resource", 
      "untag-resource", 
      "update-asset", 
      "update-data-set", 
      "update-revision"
    );
   return $commands;
}
function Get-dataexchange-cancel-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-create-data-set{
   $flags=(
      "--asset-type", 
      "--description", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-create-job{
   $flags=(
      "--details", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-create-revision{
   $flags=(
      "--comment", 
      "--data-set-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-delete-asset{
   $flags=(
      "--asset-id", 
      "--data-set-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-delete-data-set{
   $flags=(
      "--data-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-delete-revision{
   $flags=(
      "--data-set-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-get-asset{
   $flags=(
      "--asset-id", 
      "--data-set-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-get-data-set{
   $flags=(
      "--data-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-get-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-get-revision{
   $flags=(
      "--data-set-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-list-data-set-revisions{
   $flags=(
      "--data-set-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-list-data-sets{
   $flags=(
      "--origin", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-list-jobs{
   $flags=(
      "--data-set-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-list-revision-assets{
   $flags=(
      "--data-set-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-start-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-update-asset{
   $flags=(
      "--asset-id", 
      "--data-set-id", 
      "--name", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-update-data-set{
   $flags=(
      "--data-set-id", 
      "--description", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dataexchange-update-revision{
   $flags=(
      "--comment", 
      "--data-set-id", 
      "--finalized", 
      "--no-finalized", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline{
   $commands=(
      "activate-pipeline", 
      "add-tags", 
      "create-default-roles", 
      "create-pipeline", 
      "deactivate-pipeline", 
      "delete-pipeline", 
      "describe-objects", 
      "describe-pipelines", 
      "evaluate-expression", 
      "get-pipeline-definition", 
      "list-pipelines", 
      "list-runs", 
      "poll-for-task", 
      "put-pipeline-definition", 
      "query-objects", 
      "remove-tags", 
      "report-task-progress", 
      "report-task-runner-heartbeat", 
      "set-status", 
      "set-task-status", 
      "validate-pipeline-definition"
    );
   return $commands;
}
function Get-datapipeline-activate-pipeline{
   $flags=(
      "--pipeline-id", 
      "--parameter-values", 
      "--start-timestamp", 
      "--parameter-values-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-add-tags{
   $flags=(
      "--pipeline-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-create-default-roles{
   $flags=("");
   return $flags;
}
function Get-datapipeline-create-pipeline{
   $flags=(
      "--name", 
      "--unique-id", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-deactivate-pipeline{
   $flags=(
      "--pipeline-id", 
      "--cancel-active", 
      "--no-cancel-active", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-delete-pipeline{
   $flags=(
      "--pipeline-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-describe-objects{
   $flags=(
      "--pipeline-id", 
      "--object-ids", 
      "--evaluate-expressions", 
      "--no-evaluate-expressions", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-describe-pipelines{
   $flags=(
      "--pipeline-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-evaluate-expression{
   $flags=(
      "--pipeline-id", 
      "--object-id", 
      "--expression", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-get-pipeline-definition{
   $flags=(
      "--pipeline-id", 
      "--pipeline-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-list-pipelines{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-list-runs{
   $flags=(
      "--pipeline-id", 
      "--status", 
      "--start-interval", 
      "--schedule-interval"
    );
   return $flags;
}
function Get-datapipeline-poll-for-task{
   $flags=(
      "--worker-group", 
      "--hostname", 
      "--instance-identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-put-pipeline-definition{
   $flags=(
      "--pipeline-id", 
      "--parameter-objects", 
      "--parameter-values", 
      "--pipeline-definition", 
      "--parameter-values-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-query-objects{
   $flags=(
      "--pipeline-id", 
      "--sphere", 
      "--objects-query", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-remove-tags{
   $flags=(
      "--pipeline-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-report-task-progress{
   $flags=(
      "--task-id", 
      "--fields", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-report-task-runner-heartbeat{
   $flags=(
      "--taskrunner-id", 
      "--worker-group", 
      "--hostname", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-set-status{
   $flags=(
      "--pipeline-id", 
      "--object-ids", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-set-task-status{
   $flags=(
      "--task-id", 
      "--task-status", 
      "--error-id", 
      "--error-message", 
      "--error-stack-trace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datapipeline-validate-pipeline-definition{
   $flags=(
      "--pipeline-id", 
      "--pipeline-objects", 
      "--parameter-objects", 
      "--parameter-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync{
   $commands=(
      "cancel-task-execution", 
      "create-agent", 
      "create-location-efs", 
      "create-location-fsx-windows", 
      "create-location-nfs", 
      "create-location-s3", 
      "create-location-smb", 
      "create-task", 
      "delete-agent", 
      "delete-location", 
      "delete-task", 
      "describe-agent", 
      "describe-location-efs", 
      "describe-location-fsx-windows", 
      "describe-location-nfs", 
      "describe-location-s3", 
      "describe-location-smb", 
      "describe-task", 
      "describe-task-execution", 
      "list-agents", 
      "list-locations", 
      "list-tags-for-resource", 
      "list-task-executions", 
      "list-tasks", 
      "start-task-execution", 
      "tag-resource", 
      "untag-resource", 
      "update-agent", 
      "update-task"
    );
   return $commands;
}
function Get-datasync-cancel-task-execution{
   $flags=(
      "--task-execution-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-create-agent{
   $flags=(
      "--activation-key", 
      "--agent-name", 
      "--tags", 
      "--vpc-endpoint-id", 
      "--subnet-arns", 
      "--security-group-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-create-location-efs{
   $flags=(
      "--subdirectory", 
      "--efs-filesystem-arn", 
      "--ec", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-create-location-fsx-windows{
   $flags=(
      "--subdirectory", 
      "--fsx-filesystem-arn", 
      "--security-group-arns", 
      "--tags", 
      "--user", 
      "--domain", 
      "--password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-create-location-nfs{
   $flags=(
      "--subdirectory", 
      "--server-hostname", 
      "--on-prem-config", 
      "--mount-options", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-create-location-s3{
   $flags=(
      "--subdirectory", 
      "--s3-bucket-arn", 
      "--s3-storage-class", 
      "--s3-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-create-location-smb{
   $flags=(
      "--subdirectory", 
      "--server-hostname", 
      "--user", 
      "--domain", 
      "--password", 
      "--agent-arns", 
      "--mount-options", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-create-task{
   $flags=(
      "--source-location-arn", 
      "--destination-location-arn", 
      "--cloud-watch-log-group-arn", 
      "--name", 
      "--options", 
      "--excludes", 
      "--schedule", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-delete-agent{
   $flags=(
      "--agent-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-delete-location{
   $flags=(
      "--location-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-delete-task{
   $flags=(
      "--task-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-describe-agent{
   $flags=(
      "--agent-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-describe-location-efs{
   $flags=(
      "--location-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-describe-location-fsx-windows{
   $flags=(
      "--location-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-describe-location-nfs{
   $flags=(
      "--location-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-describe-location-s3{
   $flags=(
      "--location-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-describe-location-smb{
   $flags=(
      "--location-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-describe-task{
   $flags=(
      "--task-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-describe-task-execution{
   $flags=(
      "--task-execution-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-list-agents{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-list-locations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-list-task-executions{
   $flags=(
      "--task-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-list-tasks{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-start-task-execution{
   $flags=(
      "--task-arn", 
      "--override-options", 
      "--includes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-untag-resource{
   $flags=(
      "--resource-arn", 
      "--keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-update-agent{
   $flags=(
      "--agent-arn", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-datasync-update-task{
   $flags=(
      "--task-arn", 
      "--options", 
      "--excludes", 
      "--schedule", 
      "--name", 
      "--cloud-watch-log-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax{
   $commands=(
      "create-cluster", 
      "create-parameter-group", 
      "create-subnet-group", 
      "decrease-replication-factor", 
      "delete-cluster", 
      "delete-parameter-group", 
      "delete-subnet-group", 
      "describe-clusters", 
      "describe-default-parameters", 
      "describe-events", 
      "describe-parameter-groups", 
      "describe-parameters", 
      "describe-subnet-groups", 
      "increase-replication-factor", 
      "list-tags", 
      "reboot-node", 
      "tag-resource", 
      "untag-resource", 
      "update-cluster", 
      "update-parameter-group", 
      "update-subnet-group"
    );
   return $commands;
}
function Get-dax-create-cluster{
   $flags=(
      "--cluster-name", 
      "--node-type", 
      "--description", 
      "--replication-factor", 
      "--availability-zones", 
      "--subnet-group-name", 
      "--security-group-ids", 
      "--preferred-maintenance-window", 
      "--notification-topic-arn", 
      "--iam-role-arn", 
      "--parameter-group-name", 
      "--tags", 
      "--sse-specification", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-create-parameter-group{
   $flags=(
      "--parameter-group-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-create-subnet-group{
   $flags=(
      "--subnet-group-name", 
      "--description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-decrease-replication-factor{
   $flags=(
      "--cluster-name", 
      "--new-replication-factor", 
      "--availability-zones", 
      "--node-ids-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-delete-cluster{
   $flags=(
      "--cluster-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-delete-parameter-group{
   $flags=(
      "--parameter-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-delete-subnet-group{
   $flags=(
      "--subnet-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-describe-clusters{
   $flags=(
      "--cluster-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-describe-default-parameters{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-describe-events{
   $flags=(
      "--source-name", 
      "--source-type", 
      "--start-time", 
      "--end-time", 
      "--duration", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-describe-parameter-groups{
   $flags=(
      "--parameter-group-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-describe-parameters{
   $flags=(
      "--parameter-group-name", 
      "--source", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-describe-subnet-groups{
   $flags=(
      "--subnet-group-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-increase-replication-factor{
   $flags=(
      "--cluster-name", 
      "--new-replication-factor", 
      "--availability-zones", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-list-tags{
   $flags=(
      "--resource-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-reboot-node{
   $flags=(
      "--cluster-name", 
      "--node-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-tag-resource{
   $flags=(
      "--resource-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-untag-resource{
   $flags=(
      "--resource-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-update-cluster{
   $flags=(
      "--cluster-name", 
      "--description", 
      "--preferred-maintenance-window", 
      "--notification-topic-arn", 
      "--notification-topic-status", 
      "--parameter-group-name", 
      "--security-group-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-update-parameter-group{
   $flags=(
      "--parameter-group-name", 
      "--parameter-name-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dax-update-subnet-group{
   $flags=(
      "--subnet-group-name", 
      "--description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy{
   $commands=(
      "add-tags-to-on-premises-instances", 
      "batch-get-application-revisions", 
      "batch-get-applications", 
      "batch-get-deployment-groups", 
      "batch-get-deployment-targets", 
      "batch-get-deployments", 
      "batch-get-on-premises-instances", 
      "continue-deployment", 
      "create-application", 
      "create-deployment", 
      "create-deployment-config", 
      "create-deployment-group", 
      "delete-application", 
      "delete-deployment-config", 
      "delete-deployment-group", 
      "delete-git-hub-account-token", 
      "deregister", 
      "deregister-on-premises-instance", 
      "get-application", 
      "get-application-revision", 
      "get-deployment", 
      "get-deployment-config", 
      "get-deployment-group", 
      "get-deployment-target", 
      "get-on-premises-instance", 
      "install", 
      "list-application-revisions", 
      "list-applications", 
      "list-deployment-configs", 
      "list-deployment-groups", 
      "list-deployment-targets", 
      "list-deployments", 
      "list-git-hub-account-token-names", 
      "list-on-premises-instances", 
      "list-tags-for-resource", 
      "push", 
      "put-lifecycle-event-hook-execution-status", 
      "register", 
      "register-application-revision", 
      "register-on-premises-instance", 
      "remove-tags-from-on-premises-instances", 
      "stop-deployment", 
      "tag-resource", 
      "uninstall", 
      "untag-resource", 
      "update-application", 
      "update-deployment-group", 
      "wait"
    );
   return $commands;
}
function Get-deploy-add-tags-to-on-premises-instances{
   $flags=(
      "--tags", 
      "--instance-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-batch-get-application-revisions{
   $flags=(
      "--application-name", 
      "--revisions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-batch-get-applications{
   $flags=(
      "--application-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-batch-get-deployment-groups{
   $flags=(
      "--application-name", 
      "--deployment-group-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-batch-get-deployment-targets{
   $flags=(
      "--deployment-id", 
      "--target-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-batch-get-deployments{
   $flags=(
      "--deployment-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-batch-get-on-premises-instances{
   $flags=(
      "--instance-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-continue-deployment{
   $flags=(
      "--deployment-id", 
      "--deployment-wait-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-create-application{
   $flags=(
      "--application-name", 
      "--compute-platform", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-create-deployment{
   $flags=(
      "--application-name", 
      "--deployment-group-name", 
      "--revision", 
      "--deployment-config-name", 
      "--description", 
      "--ignore-application-stop-failures", 
      "--no-ignore-application-stop-failures", 
      "--target-instances", 
      "--auto-rollback-configuration", 
      "--update-outdated-instances-only", 
      "--no-update-outdated-instances-only", 
      "--file-exists-behavior", 
      "--s3-location", 
      "--github-location", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-create-deployment-config{
   $flags=(
      "--deployment-config-name", 
      "--minimum-healthy-hosts", 
      "--traffic-routing-config", 
      "--compute-platform", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-create-deployment-group{
   $flags=(
      "--application-name", 
      "--deployment-group-name", 
      "--deployment-config-name", 
      "--ec", 
      "--on-premises-instance-tag-filters", 
      "--auto-scaling-groups", 
      "--service-role-arn", 
      "--trigger-configurations", 
      "--alarm-configuration", 
      "--auto-rollback-configuration", 
      "--deployment-style", 
      "--blue-green-deployment-configuration", 
      "--load-balancer-info", 
      "--ec", 
      "--ecs-services", 
      "--on-premises-tag-set", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-delete-application{
   $flags=(
      "--application-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-delete-deployment-config{
   $flags=(
      "--deployment-config-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-delete-deployment-group{
   $flags=(
      "--application-name", 
      "--deployment-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-delete-git-hub-account-token{
   $flags=(
      "--token-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-deregister{
   $flags=(
      "--instance-name", 
      "--no-delete-iam-user"
    );
   return $flags;
}
function Get-deploy-deregister-on-premises-instance{
   $flags=(
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-get-application{
   $flags=(
      "--application-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-get-application-revision{
   $flags=(
      "--application-name", 
      "--revision", 
      "--s3-location", 
      "--github-location", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-get-deployment{
   $flags=(
      "--deployment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-get-deployment-config{
   $flags=(
      "--deployment-config-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-get-deployment-group{
   $flags=(
      "--application-name", 
      "--deployment-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-get-deployment-target{
   $flags=(
      "--deployment-id", 
      "--target-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-get-on-premises-instance{
   $flags=(
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-install{
   $flags=(
      "--config-file", 
      "--override-config", 
      "--agent-installer"
    );
   return $flags;
}
function Get-deploy-list-application-revisions{
   $flags=(
      "--application-name", 
      "--sort-by", 
      "--sort-order", 
      "--s3-bucket", 
      "--s3-key-prefix", 
      "--deployed", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-list-applications{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-list-deployment-configs{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-list-deployment-groups{
   $flags=(
      "--application-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-list-deployment-targets{
   $flags=(
      "--deployment-id", 
      "--target-filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-list-deployments{
   $flags=(
      "--application-name", 
      "--deployment-group-name", 
      "--include-only-statuses", 
      "--create-time-range", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-list-git-hub-account-token-names{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-list-on-premises-instances{
   $flags=(
      "--registration-status", 
      "--tag-filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-push{
   $flags=(
      "--application-name", 
      "--s3-location", 
      "--ignore-hidden-files", 
      "--no-ignore-hidden-files", 
      "--source", 
      "--description"
    );
   return $flags;
}
function Get-deploy-put-lifecycle-event-hook-execution-status{
   $flags=(
      "--deployment-id", 
      "--lifecycle-event-hook-execution-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-register{
   $flags=(
      "--instance-name", 
      "--tags", 
      "--iam-user-arn"
    );
   return $flags;
}
function Get-deploy-register-application-revision{
   $flags=(
      "--application-name", 
      "--description", 
      "--revision", 
      "--s3-location", 
      "--github-location", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-register-on-premises-instance{
   $flags=(
      "--instance-name", 
      "--iam-session-arn", 
      "--iam-user-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-remove-tags-from-on-premises-instances{
   $flags=(
      "--tags", 
      "--instance-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-stop-deployment{
   $flags=(
      "--deployment-id", 
      "--auto-rollback-enabled", 
      "--no-auto-rollback-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-uninstall{
   $flags=("");
   return $flags;
}
function Get-deploy-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-update-application{
   $flags=(
      "--application-name", 
      "--new-application-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-update-deployment-group{
   $flags=(
      "--application-name", 
      "--current-deployment-group-name", 
      "--new-deployment-group-name", 
      "--deployment-config-name", 
      "--ec", 
      "--on-premises-instance-tag-filters", 
      "--auto-scaling-groups", 
      "--service-role-arn", 
      "--trigger-configurations", 
      "--alarm-configuration", 
      "--auto-rollback-configuration", 
      "--deployment-style", 
      "--blue-green-deployment-configuration", 
      "--load-balancer-info", 
      "--ec", 
      "--ecs-services", 
      "--on-premises-tag-set", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-deploy-wait{
   $flags=("");
   return $flags;
}
function Get-detective{
   $commands=(
      "accept-invitation", 
      "create-graph", 
      "create-members", 
      "delete-graph", 
      "delete-members", 
      "disassociate-membership", 
      "get-members", 
      "list-graphs", 
      "list-invitations", 
      "list-members", 
      "reject-invitation", 
      "start-monitoring-member"
    );
   return $commands;
}
function Get-detective-accept-invitation{
   $flags=(
      "--graph-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-create-graph{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-create-members{
   $flags=(
      "--graph-arn", 
      "--message", 
      "--accounts", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-delete-graph{
   $flags=(
      "--graph-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-delete-members{
   $flags=(
      "--graph-arn", 
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-disassociate-membership{
   $flags=(
      "--graph-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-get-members{
   $flags=(
      "--graph-arn", 
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-list-graphs{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-list-invitations{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-list-members{
   $flags=(
      "--graph-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-reject-invitation{
   $flags=(
      "--graph-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-detective-start-monitoring-member{
   $flags=(
      "--graph-arn", 
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm{
   $commands=(
      "create-device-pool", 
      "create-instance-profile", 
      "create-network-profile", 
      "create-project", 
      "create-remote-access-session", 
      "create-test-grid-project", 
      "create-test-grid-url", 
      "create-upload", 
      "create-vpce-configuration", 
      "delete-device-pool", 
      "delete-instance-profile", 
      "delete-network-profile", 
      "delete-project", 
      "delete-remote-access-session", 
      "delete-run", 
      "delete-test-grid-project", 
      "delete-upload", 
      "delete-vpce-configuration", 
      "get-account-settings", 
      "get-device", 
      "get-device-instance", 
      "get-device-pool", 
      "get-device-pool-compatibility", 
      "get-instance-profile", 
      "get-job", 
      "get-network-profile", 
      "get-offering-status", 
      "get-project", 
      "get-remote-access-session", 
      "get-run", 
      "get-suite", 
      "get-test", 
      "get-test-grid-project", 
      "get-test-grid-session", 
      "get-upload", 
      "get-vpce-configuration", 
      "install-to-remote-access-session", 
      "list-artifacts", 
      "list-device-instances", 
      "list-device-pools", 
      "list-devices", 
      "list-instance-profiles", 
      "list-jobs", 
      "list-network-profiles", 
      "list-offering-promotions", 
      "list-offering-transactions", 
      "list-offerings", 
      "list-projects", 
      "list-remote-access-sessions", 
      "list-runs", 
      "list-samples", 
      "list-suites", 
      "list-tags-for-resource", 
      "list-test-grid-projects", 
      "list-test-grid-session-actions", 
      "list-test-grid-session-artifacts", 
      "list-test-grid-sessions", 
      "list-tests", 
      "list-unique-problems", 
      "list-uploads", 
      "list-vpce-configurations", 
      "purchase-offering", 
      "renew-offering", 
      "schedule-run", 
      "stop-job", 
      "stop-remote-access-session", 
      "stop-run", 
      "tag-resource", 
      "untag-resource", 
      "update-device-instance", 
      "update-device-pool", 
      "update-instance-profile", 
      "update-network-profile", 
      "update-project", 
      "update-test-grid-project", 
      "update-upload", 
      "update-vpce-configuration"
    );
   return $commands;
}
function Get-devicefarm-create-device-pool{
   $flags=(
      "--project-arn", 
      "--name", 
      "--description", 
      "--rules", 
      "--max-devices", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-create-instance-profile{
   $flags=(
      "--name", 
      "--description", 
      "--package-cleanup", 
      "--no-package-cleanup", 
      "--exclude-app-packages-from-cleanup", 
      "--reboot-after-use", 
      "--no-reboot-after-use", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-create-network-profile{
   $flags=(
      "--project-arn", 
      "--name", 
      "--description", 
      "--type", 
      "--uplink-bandwidth-bits", 
      "--downlink-bandwidth-bits", 
      "--uplink-delay-ms", 
      "--downlink-delay-ms", 
      "--uplink-jitter-ms", 
      "--downlink-jitter-ms", 
      "--uplink-loss-percent", 
      "--downlink-loss-percent", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-create-project{
   $flags=(
      "--name", 
      "--default-job-timeout-minutes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-create-remote-access-session{
   $flags=(
      "--project-arn", 
      "--device-arn", 
      "--instance-arn", 
      "--ssh-public-key", 
      "--remote-debug-enabled", 
      "--no-remote-debug-enabled", 
      "--remote-record-enabled", 
      "--no-remote-record-enabled", 
      "--remote-record-app-arn", 
      "--name", 
      "--client-id", 
      "--configuration", 
      "--interaction-mode", 
      "--skip-app-resign", 
      "--no-skip-app-resign", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-create-test-grid-project{
   $flags=(
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-create-test-grid-url{
   $flags=(
      "--project-arn", 
      "--expires-in-seconds", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-create-upload{
   $flags=(
      "--project-arn", 
      "--name", 
      "--type", 
      "--content-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-create-vpce-configuration{
   $flags=(
      "--vpce-configuration-name", 
      "--vpce-service-name", 
      "--service-dns-name", 
      "--vpce-configuration-description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-device-pool{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-instance-profile{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-network-profile{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-project{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-remote-access-session{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-run{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-test-grid-project{
   $flags=(
      "--project-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-upload{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-delete-vpce-configuration{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-account-settings{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-device{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-device-instance{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-device-pool{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-device-pool-compatibility{
   $flags=(
      "--device-pool-arn", 
      "--app-arn", 
      "--test-type", 
      "--test", 
      "--configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-instance-profile{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-job{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-network-profile{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-offering-status{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-project{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-remote-access-session{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-run{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-suite{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-test{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-test-grid-project{
   $flags=(
      "--project-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-test-grid-session{
   $flags=(
      "--project-arn", 
      "--session-id", 
      "--session-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-upload{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-get-vpce-configuration{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-install-to-remote-access-session{
   $flags=(
      "--remote-access-session-arn", 
      "--app-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-artifacts{
   $flags=(
      "--arn", 
      "--type", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-device-instances{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-device-pools{
   $flags=(
      "--arn", 
      "--type", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-devices{
   $flags=(
      "--arn", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-instance-profiles{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-jobs{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-network-profiles{
   $flags=(
      "--arn", 
      "--type", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-offering-promotions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-offering-transactions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-offerings{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-projects{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-remote-access-sessions{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-runs{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-samples{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-suites{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-test-grid-projects{
   $flags=(
      "--max-result", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-test-grid-session-actions{
   $flags=(
      "--session-arn", 
      "--max-result", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-test-grid-session-artifacts{
   $flags=(
      "--session-arn", 
      "--type", 
      "--max-result", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-test-grid-sessions{
   $flags=(
      "--project-arn", 
      "--status", 
      "--creation-time-after", 
      "--creation-time-before", 
      "--end-time-after", 
      "--end-time-before", 
      "--max-result", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-tests{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-unique-problems{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-uploads{
   $flags=(
      "--arn", 
      "--type", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-list-vpce-configurations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-purchase-offering{
   $flags=(
      "--offering-id", 
      "--quantity", 
      "--offering-promotion-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-renew-offering{
   $flags=(
      "--offering-id", 
      "--quantity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-schedule-run{
   $flags=(
      "--project-arn", 
      "--app-arn", 
      "--device-pool-arn", 
      "--device-selection-configuration", 
      "--name", 
      "--test", 
      "--configuration", 
      "--execution-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-stop-job{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-stop-remote-access-session{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-stop-run{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-update-device-instance{
   $flags=(
      "--arn", 
      "--profile-arn", 
      "--labels", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-update-device-pool{
   $flags=(
      "--arn", 
      "--name", 
      "--description", 
      "--rules", 
      "--max-devices", 
      "--clear-max-devices", 
      "--no-clear-max-devices", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-update-instance-profile{
   $flags=(
      "--arn", 
      "--name", 
      "--description", 
      "--package-cleanup", 
      "--no-package-cleanup", 
      "--exclude-app-packages-from-cleanup", 
      "--reboot-after-use", 
      "--no-reboot-after-use", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-update-network-profile{
   $flags=(
      "--arn", 
      "--name", 
      "--description", 
      "--type", 
      "--uplink-bandwidth-bits", 
      "--downlink-bandwidth-bits", 
      "--uplink-delay-ms", 
      "--downlink-delay-ms", 
      "--uplink-jitter-ms", 
      "--downlink-jitter-ms", 
      "--uplink-loss-percent", 
      "--downlink-loss-percent", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-update-project{
   $flags=(
      "--arn", 
      "--name", 
      "--default-job-timeout-minutes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-update-test-grid-project{
   $flags=(
      "--project-arn", 
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-update-upload{
   $flags=(
      "--arn", 
      "--name", 
      "--content-type", 
      "--edit-content", 
      "--no-edit-content", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-devicefarm-update-vpce-configuration{
   $flags=(
      "--arn", 
      "--vpce-configuration-name", 
      "--vpce-service-name", 
      "--service-dns-name", 
      "--vpce-configuration-description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect{
   $commands=(
      "accept-direct-connect-gateway-association-proposal", 
      "allocate-hosted-connection", 
      "allocate-private-virtual-interface", 
      "allocate-public-virtual-interface", 
      "allocate-transit-virtual-interface", 
      "associate-connection-with-lag", 
      "associate-hosted-connection", 
      "associate-virtual-interface", 
      "confirm-connection", 
      "confirm-private-virtual-interface", 
      "confirm-public-virtual-interface", 
      "confirm-transit-virtual-interface", 
      "create-bgp-peer", 
      "create-connection", 
      "create-direct-connect-gateway", 
      "create-direct-connect-gateway-association", 
      "create-direct-connect-gateway-association-proposal", 
      "create-interconnect", 
      "create-lag", 
      "create-private-virtual-interface", 
      "create-public-virtual-interface", 
      "create-transit-virtual-interface", 
      "delete-bgp-peer", 
      "delete-connection", 
      "delete-direct-connect-gateway", 
      "delete-direct-connect-gateway-association", 
      "delete-direct-connect-gateway-association-proposal", 
      "delete-interconnect", 
      "delete-lag", 
      "delete-virtual-interface", 
      "describe-connections", 
      "describe-direct-connect-gateway-association-proposals", 
      "describe-direct-connect-gateway-associations", 
      "describe-direct-connect-gateway-attachments", 
      "describe-direct-connect-gateways", 
      "describe-hosted-connections", 
      "describe-interconnects", 
      "describe-lags", 
      "describe-loa", 
      "describe-locations", 
      "describe-tags", 
      "describe-virtual-gateways", 
      "describe-virtual-interfaces", 
      "disassociate-connection-from-lag", 
      "tag-resource", 
      "untag-resource", 
      "update-direct-connect-gateway-association", 
      "update-lag", 
      "update-virtual-interface-attributes"
    );
   return $commands;
}
function Get-directconnect-accept-direct-connect-gateway-association-proposal{
   $flags=(
      "--direct-connect-gateway-id", 
      "--proposal-id", 
      "--associated-gateway-owner-account", 
      "--override-allowed-prefixes-to-direct-connect-gateway", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-allocate-hosted-connection{
   $flags=(
      "--connection-id", 
      "--owner-account", 
      "--bandwidth", 
      "--connection-name", 
      "--vlan", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-allocate-private-virtual-interface{
   $flags=(
      "--connection-id", 
      "--owner-account", 
      "--new-private-virtual-interface-allocation", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-allocate-public-virtual-interface{
   $flags=(
      "--connection-id", 
      "--owner-account", 
      "--new-public-virtual-interface-allocation", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-allocate-transit-virtual-interface{
   $flags=(
      "--connection-id", 
      "--owner-account", 
      "--new-transit-virtual-interface-allocation", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-associate-connection-with-lag{
   $flags=(
      "--connection-id", 
      "--lag-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-associate-hosted-connection{
   $flags=(
      "--connection-id", 
      "--parent-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-associate-virtual-interface{
   $flags=(
      "--virtual-interface-id", 
      "--connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-confirm-connection{
   $flags=(
      "--connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-confirm-private-virtual-interface{
   $flags=(
      "--virtual-interface-id", 
      "--virtual-gateway-id", 
      "--direct-connect-gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-confirm-public-virtual-interface{
   $flags=(
      "--virtual-interface-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-confirm-transit-virtual-interface{
   $flags=(
      "--virtual-interface-id", 
      "--direct-connect-gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-bgp-peer{
   $flags=(
      "--virtual-interface-id", 
      "--new-bgp-peer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-connection{
   $flags=(
      "--location", 
      "--bandwidth", 
      "--connection-name", 
      "--lag-id", 
      "--tags", 
      "--provider-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-direct-connect-gateway{
   $flags=(
      "--direct-connect-gateway-name", 
      "--amazon-side-asn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-direct-connect-gateway-association{
   $flags=(
      "--direct-connect-gateway-id", 
      "--gateway-id", 
      "--add-allowed-prefixes-to-direct-connect-gateway", 
      "--virtual-gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-direct-connect-gateway-association-proposal{
   $flags=(
      "--direct-connect-gateway-id", 
      "--direct-connect-gateway-owner-account", 
      "--gateway-id", 
      "--add-allowed-prefixes-to-direct-connect-gateway", 
      "--remove-allowed-prefixes-to-direct-connect-gateway", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-interconnect{
   $flags=(
      "--interconnect-name", 
      "--bandwidth", 
      "--location", 
      "--lag-id", 
      "--tags", 
      "--provider-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-lag{
   $flags=(
      "--number-of-connections", 
      "--location", 
      "--connections-bandwidth", 
      "--lag-name", 
      "--connection-id", 
      "--tags", 
      "--child-connection-tags", 
      "--provider-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-private-virtual-interface{
   $flags=(
      "--connection-id", 
      "--new-private-virtual-interface", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-public-virtual-interface{
   $flags=(
      "--connection-id", 
      "--new-public-virtual-interface", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-create-transit-virtual-interface{
   $flags=(
      "--connection-id", 
      "--new-transit-virtual-interface", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-delete-bgp-peer{
   $flags=(
      "--virtual-interface-id", 
      "--asn", 
      "--customer-address", 
      "--bgp-peer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-delete-connection{
   $flags=(
      "--connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-delete-direct-connect-gateway{
   $flags=(
      "--direct-connect-gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-delete-direct-connect-gateway-association{
   $flags=(
      "--association-id", 
      "--direct-connect-gateway-id", 
      "--virtual-gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-delete-direct-connect-gateway-association-proposal{
   $flags=(
      "--proposal-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-delete-interconnect{
   $flags=(
      "--interconnect-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-delete-lag{
   $flags=(
      "--lag-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-delete-virtual-interface{
   $flags=(
      "--virtual-interface-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-connections{
   $flags=(
      "--connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-direct-connect-gateway-association-proposals{
   $flags=(
      "--direct-connect-gateway-id", 
      "--proposal-id", 
      "--associated-gateway-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-direct-connect-gateway-associations{
   $flags=(
      "--association-id", 
      "--associated-gateway-id", 
      "--direct-connect-gateway-id", 
      "--virtual-gateway-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-direct-connect-gateway-attachments{
   $flags=(
      "--direct-connect-gateway-id", 
      "--virtual-interface-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-direct-connect-gateways{
   $flags=(
      "--direct-connect-gateway-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-hosted-connections{
   $flags=(
      "--connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-interconnects{
   $flags=(
      "--interconnect-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-lags{
   $flags=(
      "--lag-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-loa{
   $flags=(
      "--connection-id", 
      "--provider-name", 
      "--loa-content-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-locations{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-tags{
   $flags=(
      "--resource-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-virtual-gateways{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-describe-virtual-interfaces{
   $flags=(
      "--connection-id", 
      "--virtual-interface-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-disassociate-connection-from-lag{
   $flags=(
      "--connection-id", 
      "--lag-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-update-direct-connect-gateway-association{
   $flags=(
      "--association-id", 
      "--add-allowed-prefixes-to-direct-connect-gateway", 
      "--remove-allowed-prefixes-to-direct-connect-gateway", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-update-lag{
   $flags=(
      "--lag-id", 
      "--lag-name", 
      "--minimum-links", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-directconnect-update-virtual-interface-attributes{
   $flags=(
      "--virtual-interface-id", 
      "--mtu", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery{
   $commands=(
      "associate-configuration-items-to-application", 
      "batch-delete-import-data", 
      "create-application", 
      "create-tags", 
      "delete-applications", 
      "delete-tags", 
      "describe-agents", 
      "describe-configurations", 
      "describe-continuous-exports", 
      "describe-export-tasks", 
      "describe-import-tasks", 
      "describe-tags", 
      "disassociate-configuration-items-from-application", 
      "get-discovery-summary", 
      "list-configurations", 
      "list-server-neighbors", 
      "start-continuous-export", 
      "start-data-collection-by-agent-ids", 
      "start-export-task", 
      "start-import-task", 
      "stop-continuous-export", 
      "stop-data-collection-by-agent-ids", 
      "update-application"
    );
   return $commands;
}
function Get-discovery-associate-configuration-items-to-application{
   $flags=(
      "--application-configuration-id", 
      "--configuration-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-batch-delete-import-data{
   $flags=(
      "--import-task-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-create-application{
   $flags=(
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-create-tags{
   $flags=(
      "--configuration-ids", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-delete-applications{
   $flags=(
      "--configuration-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-delete-tags{
   $flags=(
      "--configuration-ids", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-describe-agents{
   $flags=(
      "--agent-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-describe-configurations{
   $flags=(
      "--configuration-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-describe-continuous-exports{
   $flags=(
      "--export-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-describe-export-tasks{
   $flags=(
      "--export-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-describe-import-tasks{
   $flags=(
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-describe-tags{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-disassociate-configuration-items-from-application{
   $flags=(
      "--application-configuration-id", 
      "--configuration-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-get-discovery-summary{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-list-configurations{
   $flags=(
      "--configuration-type", 
      "--filters", 
      "--order-by", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-list-server-neighbors{
   $flags=(
      "--configuration-id", 
      "--port-information-needed", 
      "--no-port-information-needed", 
      "--neighbor-configuration-ids", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-start-continuous-export{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-start-data-collection-by-agent-ids{
   $flags=(
      "--agent-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-start-export-task{
   $flags=(
      "--export-data-format", 
      "--filters", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-start-import-task{
   $flags=(
      "--client-request-token", 
      "--name", 
      "--import-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-stop-continuous-export{
   $flags=(
      "--export-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-stop-data-collection-by-agent-ids{
   $flags=(
      "--agent-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-discovery-update-application{
   $flags=(
      "--configuration-id", 
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dlm{
   $commands=(
      "create-default-role", 
      "create-lifecycle-policy", 
      "delete-lifecycle-policy", 
      "get-lifecycle-policies", 
      "get-lifecycle-policy", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-lifecycle-policy"
    );
   return $commands;
}
function Get-dlm-create-default-role{
   $flags=(
      "--iam-endpoint"
    );
   return $flags;
}
function Get-dlm-create-lifecycle-policy{
   $flags=(
      "--execution-role-arn", 
      "--description", 
      "--state", 
      "--policy-details", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dlm-delete-lifecycle-policy{
   $flags=(
      "--policy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dlm-get-lifecycle-policies{
   $flags=(
      "--policy-ids", 
      "--state", 
      "--resource-types", 
      "--target-tags", 
      "--tags-to-add", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dlm-get-lifecycle-policy{
   $flags=(
      "--policy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dlm-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dlm-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dlm-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dlm-update-lifecycle-policy{
   $flags=(
      "--policy-id", 
      "--execution-role-arn", 
      "--state", 
      "--description", 
      "--policy-details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms{
   $commands=(
      "add-tags-to-resource", 
      "apply-pending-maintenance-action", 
      "create-endpoint", 
      "create-event-subscription", 
      "create-replication-instance", 
      "create-replication-subnet-group", 
      "create-replication-task", 
      "delete-certificate", 
      "delete-connection", 
      "delete-endpoint", 
      "delete-event-subscription", 
      "delete-replication-instance", 
      "delete-replication-subnet-group", 
      "delete-replication-task", 
      "describe-account-attributes", 
      "describe-certificates", 
      "describe-connections", 
      "describe-endpoint-types", 
      "describe-endpoints", 
      "describe-event-categories", 
      "describe-event-subscriptions", 
      "describe-events", 
      "describe-orderable-replication-instances", 
      "describe-pending-maintenance-actions", 
      "describe-refresh-schemas-status", 
      "describe-replication-instance-task-logs", 
      "describe-replication-instances", 
      "describe-replication-subnet-groups", 
      "describe-replication-task-assessment-results", 
      "describe-replication-tasks", 
      "describe-schemas", 
      "describe-table-statistics", 
      "import-certificate", 
      "list-tags-for-resource", 
      "modify-endpoint", 
      "modify-event-subscription", 
      "modify-replication-instance", 
      "modify-replication-subnet-group", 
      "modify-replication-task", 
      "reboot-replication-instance", 
      "refresh-schemas", 
      "reload-tables", 
      "remove-tags-from-resource", 
      "start-replication-task", 
      "start-replication-task-assessment", 
      "stop-replication-task", 
      "test-connection", 
      "wait"
    );
   return $commands;
}
function Get-dms-add-tags-to-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-apply-pending-maintenance-action{
   $flags=(
      "--replication-instance-arn", 
      "--apply-action", 
      "--opt-in-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-create-endpoint{
   $flags=(
      "--endpoint-identifier", 
      "--endpoint-type", 
      "--engine-name", 
      "--username", 
      "--password", 
      "--server-name", 
      "--port", 
      "--database-name", 
      "--extra-connection-attributes", 
      "--kms-key-id", 
      "--tags", 
      "--certificate-arn", 
      "--ssl-mode", 
      "--service-access-role-arn", 
      "--external-table-definition", 
      "--dynamo-db-settings", 
      "--s3-settings", 
      "--dms-transfer-settings", 
      "--mongo-db-settings", 
      "--kinesis-settings", 
      "--kafka-settings", 
      "--elasticsearch-settings", 
      "--neptune-settings", 
      "--redshift-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-create-event-subscription{
   $flags=(
      "--subscription-name", 
      "--sns-topic-arn", 
      "--source-type", 
      "--event-categories", 
      "--source-ids", 
      "--enabled", 
      "--no-enabled", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-create-replication-instance{
   $flags=(
      "--replication-instance-identifier", 
      "--allocated-storage", 
      "--replication-instance-class", 
      "--vpc-security-group-ids", 
      "--availability-zone", 
      "--replication-subnet-group-identifier", 
      "--preferred-maintenance-window", 
      "--multi-az", 
      "--no-multi-az", 
      "--engine-version", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--tags", 
      "--kms-key-id", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--dns-name-servers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-create-replication-subnet-group{
   $flags=(
      "--replication-subnet-group-identifier", 
      "--replication-subnet-group-description", 
      "--subnet-ids", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-create-replication-task{
   $flags=(
      "--replication-task-identifier", 
      "--source-endpoint-arn", 
      "--target-endpoint-arn", 
      "--replication-instance-arn", 
      "--migration-type", 
      "--table-mappings", 
      "--replication-task-settings", 
      "--cdc-start-time", 
      "--cdc-start-position", 
      "--cdc-stop-position", 
      "--tags", 
      "--task-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-delete-certificate{
   $flags=(
      "--certificate-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-delete-connection{
   $flags=(
      "--endpoint-arn", 
      "--replication-instance-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-delete-endpoint{
   $flags=(
      "--endpoint-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-delete-event-subscription{
   $flags=(
      "--subscription-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-delete-replication-instance{
   $flags=(
      "--replication-instance-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-delete-replication-subnet-group{
   $flags=(
      "--replication-subnet-group-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-delete-replication-task{
   $flags=(
      "--replication-task-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-account-attributes{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-certificates{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-connections{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-endpoint-types{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-endpoints{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-event-categories{
   $flags=(
      "--source-type", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-event-subscriptions{
   $flags=(
      "--subscription-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-events{
   $flags=(
      "--source-identifier", 
      "--source-type", 
      "--start-time", 
      "--end-time", 
      "--duration", 
      "--event-categories", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-orderable-replication-instances{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-pending-maintenance-actions{
   $flags=(
      "--replication-instance-arn", 
      "--filters", 
      "--marker", 
      "--max-records", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-refresh-schemas-status{
   $flags=(
      "--endpoint-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-replication-instance-task-logs{
   $flags=(
      "--replication-instance-arn", 
      "--max-records", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-replication-instances{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-replication-subnet-groups{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-replication-task-assessment-results{
   $flags=(
      "--replication-task-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-replication-tasks{
   $flags=(
      "--filters", 
      "--without-settings", 
      "--no-without-settings", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-schemas{
   $flags=(
      "--endpoint-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-describe-table-statistics{
   $flags=(
      "--replication-task-arn", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-import-certificate{
   $flags=(
      "--certificate-identifier", 
      "--certificate-pem", 
      "--certificate-wallet", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-modify-endpoint{
   $flags=(
      "--endpoint-arn", 
      "--endpoint-identifier", 
      "--endpoint-type", 
      "--engine-name", 
      "--username", 
      "--password", 
      "--server-name", 
      "--port", 
      "--database-name", 
      "--extra-connection-attributes", 
      "--certificate-arn", 
      "--ssl-mode", 
      "--service-access-role-arn", 
      "--external-table-definition", 
      "--dynamo-db-settings", 
      "--s3-settings", 
      "--dms-transfer-settings", 
      "--mongo-db-settings", 
      "--kinesis-settings", 
      "--kafka-settings", 
      "--elasticsearch-settings", 
      "--neptune-settings", 
      "--redshift-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-modify-event-subscription{
   $flags=(
      "--subscription-name", 
      "--sns-topic-arn", 
      "--source-type", 
      "--event-categories", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-modify-replication-instance{
   $flags=(
      "--replication-instance-arn", 
      "--allocated-storage", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--replication-instance-class", 
      "--vpc-security-group-ids", 
      "--preferred-maintenance-window", 
      "--multi-az", 
      "--no-multi-az", 
      "--engine-version", 
      "--allow-major-version-upgrade", 
      "--no-allow-major-version-upgrade", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--replication-instance-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-modify-replication-subnet-group{
   $flags=(
      "--replication-subnet-group-identifier", 
      "--replication-subnet-group-description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-modify-replication-task{
   $flags=(
      "--replication-task-arn", 
      "--replication-task-identifier", 
      "--migration-type", 
      "--table-mappings", 
      "--replication-task-settings", 
      "--cdc-start-time", 
      "--cdc-start-position", 
      "--cdc-stop-position", 
      "--task-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-reboot-replication-instance{
   $flags=(
      "--replication-instance-arn", 
      "--force-failover", 
      "--no-force-failover", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-refresh-schemas{
   $flags=(
      "--endpoint-arn", 
      "--replication-instance-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-reload-tables{
   $flags=(
      "--replication-task-arn", 
      "--tables-to-reload", 
      "--reload-option", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-remove-tags-from-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-start-replication-task{
   $flags=(
      "--replication-task-arn", 
      "--start-replication-task-type", 
      "--cdc-start-time", 
      "--cdc-start-position", 
      "--cdc-stop-position", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-start-replication-task-assessment{
   $flags=(
      "--replication-task-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-stop-replication-task{
   $flags=(
      "--replication-task-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-test-connection{
   $flags=(
      "--replication-instance-arn", 
      "--endpoint-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dms-wait{
   $flags=("");
   return $flags;
}
function Get-docdb{
   $commands=(
      "add-tags-to-resource", 
      "apply-pending-maintenance-action", 
      "copy-db-cluster-parameter-group", 
      "copy-db-cluster-snapshot", 
      "create-db-cluster", 
      "create-db-cluster-parameter-group", 
      "create-db-cluster-snapshot", 
      "create-db-instance", 
      "create-db-subnet-group", 
      "delete-db-cluster", 
      "delete-db-cluster-parameter-group", 
      "delete-db-cluster-snapshot", 
      "delete-db-instance", 
      "delete-db-subnet-group", 
      "describe-certificates", 
      "describe-db-cluster-parameter-groups", 
      "describe-db-cluster-parameters", 
      "describe-db-cluster-snapshot-attributes", 
      "describe-db-cluster-snapshots", 
      "describe-db-clusters", 
      "describe-db-engine-versions", 
      "describe-db-instances", 
      "describe-db-subnet-groups", 
      "describe-engine-default-cluster-parameters", 
      "describe-event-categories", 
      "describe-events", 
      "describe-orderable-db-instance-options", 
      "describe-pending-maintenance-actions", 
      "failover-db-cluster", 
      "list-tags-for-resource", 
      "modify-db-cluster", 
      "modify-db-cluster-parameter-group", 
      "modify-db-cluster-snapshot-attribute", 
      "modify-db-instance", 
      "modify-db-subnet-group", 
      "reboot-db-instance", 
      "remove-tags-from-resource", 
      "reset-db-cluster-parameter-group", 
      "restore-db-cluster-from-snapshot", 
      "restore-db-cluster-to-point-in-time", 
      "start-db-cluster", 
      "stop-db-cluster", 
      "wait"
    );
   return $commands;
}
function Get-docdb-add-tags-to-resource{
   $flags=(
      "--resource-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-apply-pending-maintenance-action{
   $flags=(
      "--resource-identifier", 
      "--apply-action", 
      "--opt-in-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-copy-db-cluster-parameter-group{
   $flags=(
      "--source-db-cluster-parameter-group-identifier", 
      "--target-db-cluster-parameter-group-identifier", 
      "--target-db-cluster-parameter-group-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-copy-db-cluster-snapshot{
   $flags=(
      "--source-db-cluster-snapshot-identifier", 
      "--target-db-cluster-snapshot-identifier", 
      "--kms-key-id", 
      "--pre-signed-url", 
      "--copy-tags", 
      "--no-copy-tags", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-create-db-cluster{
   $flags=(
      "--availability-zones", 
      "--backup-retention-period", 
      "--db-cluster-identifier", 
      "--db-cluster-parameter-group-name", 
      "--vpc-security-group-ids", 
      "--db-subnet-group-name", 
      "--engine", 
      "--engine-version", 
      "--port", 
      "--master-username", 
      "--master-user-password", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--tags", 
      "--storage-encrypted", 
      "--no-storage-encrypted", 
      "--kms-key-id", 
      "--enable-cloudwatch-logs-exports", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-create-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--db-parameter-group-family", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-create-db-cluster-snapshot{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--db-cluster-identifier", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-create-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--db-instance-class", 
      "--engine", 
      "--availability-zone", 
      "--preferred-maintenance-window", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--tags", 
      "--db-cluster-identifier", 
      "--promotion-tier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-create-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--db-subnet-group-description", 
      "--subnet-ids", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-delete-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--skip-final-snapshot", 
      "--no-skip-final-snapshot", 
      "--final-db-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-delete-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-delete-db-cluster-snapshot{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-delete-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-delete-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-certificates{
   $flags=(
      "--certificate-identifier", 
      "--filters", 
      "--max-records", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-db-cluster-parameter-groups{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--filters", 
      "--max-records", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-db-cluster-parameters{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--source", 
      "--filters", 
      "--max-records", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-db-cluster-snapshot-attributes{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-db-cluster-snapshots{
   $flags=(
      "--db-cluster-identifier", 
      "--db-cluster-snapshot-identifier", 
      "--snapshot-type", 
      "--filters", 
      "--max-records", 
      "--marker", 
      "--include-shared", 
      "--no-include-shared", 
      "--include-public", 
      "--no-include-public", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-db-clusters{
   $flags=(
      "--db-cluster-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-db-engine-versions{
   $flags=(
      "--engine", 
      "--engine-version", 
      "--db-parameter-group-family", 
      "--filters", 
      "--default-only", 
      "--no-default-only", 
      "--list-supported-character-sets", 
      "--no-list-supported-character-sets", 
      "--list-supported-timezones", 
      "--no-list-supported-timezones", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-db-instances{
   $flags=(
      "--db-instance-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-db-subnet-groups{
   $flags=(
      "--db-subnet-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-engine-default-cluster-parameters{
   $flags=(
      "--db-parameter-group-family", 
      "--filters", 
      "--max-records", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-event-categories{
   $flags=(
      "--source-type", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-events{
   $flags=(
      "--source-identifier", 
      "--source-type", 
      "--start-time", 
      "--end-time", 
      "--duration", 
      "--event-categories", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-orderable-db-instance-options{
   $flags=(
      "--engine", 
      "--engine-version", 
      "--db-instance-class", 
      "--license-model", 
      "--vpc", 
      "--no-vpc", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-describe-pending-maintenance-actions{
   $flags=(
      "--resource-identifier", 
      "--filters", 
      "--marker", 
      "--max-records", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-failover-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--target-db-instance-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-list-tags-for-resource{
   $flags=(
      "--resource-name", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-modify-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--new-db-cluster-identifier", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--backup-retention-period", 
      "--db-cluster-parameter-group-name", 
      "--vpc-security-group-ids", 
      "--port", 
      "--master-user-password", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--cloudwatch-logs-export-configuration", 
      "--engine-version", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-modify-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-modify-db-cluster-snapshot-attribute{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--attribute-name", 
      "--values-to-add", 
      "--values-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-modify-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--db-instance-class", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--preferred-maintenance-window", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--new-db-instance-identifier", 
      "--ca-certificate-identifier", 
      "--promotion-tier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-modify-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--db-subnet-group-description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-reboot-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--force-failover", 
      "--no-force-failover", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-remove-tags-from-resource{
   $flags=(
      "--resource-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-reset-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--reset-all-parameters", 
      "--no-reset-all-parameters", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-restore-db-cluster-from-snapshot{
   $flags=(
      "--availability-zones", 
      "--db-cluster-identifier", 
      "--snapshot-identifier", 
      "--engine", 
      "--engine-version", 
      "--port", 
      "--db-subnet-group-name", 
      "--vpc-security-group-ids", 
      "--tags", 
      "--kms-key-id", 
      "--enable-cloudwatch-logs-exports", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-restore-db-cluster-to-point-in-time{
   $flags=(
      "--db-cluster-identifier", 
      "--source-db-cluster-identifier", 
      "--restore-to-time", 
      "--use-latest-restorable-time", 
      "--no-use-latest-restorable-time", 
      "--port", 
      "--db-subnet-group-name", 
      "--vpc-security-group-ids", 
      "--tags", 
      "--kms-key-id", 
      "--enable-cloudwatch-logs-exports", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-start-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-stop-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-docdb-wait{
   $flags=("");
   return $flags;
}
function Get-ds{
   $commands=(
      "accept-shared-directory", 
      "add-ip-routes", 
      "add-tags-to-resource", 
      "cancel-schema-extension", 
      "connect-directory", 
      "create-alias", 
      "create-computer", 
      "create-conditional-forwarder", 
      "create-directory", 
      "create-log-subscription", 
      "create-microsoft-ad", 
      "create-snapshot", 
      "create-trust", 
      "delete-conditional-forwarder", 
      "delete-directory", 
      "delete-log-subscription", 
      "delete-snapshot", 
      "delete-trust", 
      "deregister-certificate", 
      "deregister-event-topic", 
      "describe-certificate", 
      "describe-conditional-forwarders", 
      "describe-directories", 
      "describe-domain-controllers", 
      "describe-event-topics", 
      "describe-ldaps-settings", 
      "describe-shared-directories", 
      "describe-snapshots", 
      "describe-trusts", 
      "disable-ldaps", 
      "disable-radius", 
      "disable-sso", 
      "enable-ldaps", 
      "enable-radius", 
      "enable-sso", 
      "get-directory-limits", 
      "get-snapshot-limits", 
      "list-certificates", 
      "list-ip-routes", 
      "list-log-subscriptions", 
      "list-schema-extensions", 
      "list-tags-for-resource", 
      "register-certificate", 
      "register-event-topic", 
      "reject-shared-directory", 
      "remove-ip-routes", 
      "remove-tags-from-resource", 
      "reset-user-password", 
      "restore-from-snapshot", 
      "share-directory", 
      "start-schema-extension", 
      "unshare-directory", 
      "update-conditional-forwarder", 
      "update-number-of-domain-controllers", 
      "update-radius", 
      "update-trust", 
      "verify-trust"
    );
   return $commands;
}
function Get-ds-accept-shared-directory{
   $flags=(
      "--shared-directory-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-add-ip-routes{
   $flags=(
      "--directory-id", 
      "--ip-routes", 
      "--update-security-group-for-directory-controllers", 
      "--no-update-security-group-for-directory-controllers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-add-tags-to-resource{
   $flags=(
      "--resource-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-cancel-schema-extension{
   $flags=(
      "--directory-id", 
      "--schema-extension-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-connect-directory{
   $flags=(
      "--name", 
      "--short-name", 
      "--password", 
      "--description", 
      "--size", 
      "--connect-settings", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-create-alias{
   $flags=(
      "--directory-id", 
      "--alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-create-computer{
   $flags=(
      "--directory-id", 
      "--computer-name", 
      "--password", 
      "--organizational-unit-distinguished-name", 
      "--computer-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-create-conditional-forwarder{
   $flags=(
      "--directory-id", 
      "--remote-domain-name", 
      "--dns-ip-addrs", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-create-directory{
   $flags=(
      "--name", 
      "--short-name", 
      "--password", 
      "--description", 
      "--size", 
      "--vpc-settings", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-create-log-subscription{
   $flags=(
      "--directory-id", 
      "--log-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-create-microsoft-ad{
   $flags=(
      "--name", 
      "--short-name", 
      "--password", 
      "--description", 
      "--vpc-settings", 
      "--edition", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-create-snapshot{
   $flags=(
      "--directory-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-create-trust{
   $flags=(
      "--directory-id", 
      "--remote-domain-name", 
      "--trust-password", 
      "--trust-direction", 
      "--trust-type", 
      "--conditional-forwarder-ip-addrs", 
      "--selective-auth", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-delete-conditional-forwarder{
   $flags=(
      "--directory-id", 
      "--remote-domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-delete-directory{
   $flags=(
      "--directory-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-delete-log-subscription{
   $flags=(
      "--directory-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-delete-snapshot{
   $flags=(
      "--snapshot-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-delete-trust{
   $flags=(
      "--trust-id", 
      "--delete-associated-conditional-forwarder", 
      "--no-delete-associated-conditional-forwarder", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-deregister-certificate{
   $flags=(
      "--directory-id", 
      "--certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-deregister-event-topic{
   $flags=(
      "--directory-id", 
      "--topic-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-certificate{
   $flags=(
      "--directory-id", 
      "--certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-conditional-forwarders{
   $flags=(
      "--directory-id", 
      "--remote-domain-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-directories{
   $flags=(
      "--directory-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-domain-controllers{
   $flags=(
      "--directory-id", 
      "--domain-controller-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-event-topics{
   $flags=(
      "--directory-id", 
      "--topic-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-ldaps-settings{
   $flags=(
      "--directory-id", 
      "--type", 
      "--next-token", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-shared-directories{
   $flags=(
      "--owner-directory-id", 
      "--shared-directory-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-snapshots{
   $flags=(
      "--directory-id", 
      "--snapshot-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-describe-trusts{
   $flags=(
      "--directory-id", 
      "--trust-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-disable-ldaps{
   $flags=(
      "--directory-id", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-disable-radius{
   $flags=(
      "--directory-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-disable-sso{
   $flags=(
      "--directory-id", 
      "--user-name", 
      "--password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-enable-ldaps{
   $flags=(
      "--directory-id", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-enable-radius{
   $flags=(
      "--directory-id", 
      "--radius-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-enable-sso{
   $flags=(
      "--directory-id", 
      "--user-name", 
      "--password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-get-directory-limits{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-get-snapshot-limits{
   $flags=(
      "--directory-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-list-certificates{
   $flags=(
      "--directory-id", 
      "--next-token", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-list-ip-routes{
   $flags=(
      "--directory-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-list-log-subscriptions{
   $flags=(
      "--directory-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-list-schema-extensions{
   $flags=(
      "--directory-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-list-tags-for-resource{
   $flags=(
      "--resource-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-register-certificate{
   $flags=(
      "--directory-id", 
      "--certificate-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-register-event-topic{
   $flags=(
      "--directory-id", 
      "--topic-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-reject-shared-directory{
   $flags=(
      "--shared-directory-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-remove-ip-routes{
   $flags=(
      "--directory-id", 
      "--cidr-ips", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-remove-tags-from-resource{
   $flags=(
      "--resource-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-reset-user-password{
   $flags=(
      "--directory-id", 
      "--user-name", 
      "--new-password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-restore-from-snapshot{
   $flags=(
      "--snapshot-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-share-directory{
   $flags=(
      "--directory-id", 
      "--share-notes", 
      "--share-target", 
      "--share-method", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-start-schema-extension{
   $flags=(
      "--directory-id", 
      "--create-snapshot-before-schema-extension", 
      "--no-create-snapshot-before-schema-extension", 
      "--ldif-content", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-unshare-directory{
   $flags=(
      "--directory-id", 
      "--unshare-target", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-update-conditional-forwarder{
   $flags=(
      "--directory-id", 
      "--remote-domain-name", 
      "--dns-ip-addrs", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-update-number-of-domain-controllers{
   $flags=(
      "--directory-id", 
      "--desired-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-update-radius{
   $flags=(
      "--directory-id", 
      "--radius-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-update-trust{
   $flags=(
      "--trust-id", 
      "--selective-auth", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ds-verify-trust{
   $flags=(
      "--trust-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb{
   $commands=(
      "batch-get-item", 
      "batch-write-item", 
      "create-backup", 
      "create-global-table", 
      "create-table", 
      "delete-backup", 
      "delete-item", 
      "delete-table", 
      "describe-backup", 
      "describe-continuous-backups", 
      "describe-contributor-insights", 
      "describe-endpoints", 
      "describe-global-table", 
      "describe-global-table-settings", 
      "describe-limits", 
      "describe-table", 
      "describe-table-replica-auto-scaling", 
      "describe-time-to-live", 
      "get-item", 
      "list-backups", 
      "list-contributor-insights", 
      "list-global-tables", 
      "list-tables", 
      "list-tags-of-resource", 
      "put-item", 
      "query", 
      "restore-table-from-backup", 
      "restore-table-to-point-in-time", 
      "scan", 
      "tag-resource", 
      "transact-get-items", 
      "transact-write-items", 
      "untag-resource", 
      "update-continuous-backups", 
      "update-contributor-insights", 
      "update-global-table", 
      "update-global-table-settings", 
      "update-item", 
      "update-table", 
      "update-table-replica-auto-scaling", 
      "update-time-to-live", 
      "wait"
    );
   return $commands;
}
function Get-dynamodb-batch-get-item{
   $flags=(
      "--request-items", 
      "--return-consumed-capacity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-batch-write-item{
   $flags=(
      "--request-items", 
      "--return-consumed-capacity", 
      "--return-item-collection-metrics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-create-backup{
   $flags=(
      "--table-name", 
      "--backup-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-create-global-table{
   $flags=(
      "--global-table-name", 
      "--replication-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-create-table{
   $flags=(
      "--attribute-definitions", 
      "--table-name", 
      "--key-schema", 
      "--local-secondary-indexes", 
      "--global-secondary-indexes", 
      "--billing-mode", 
      "--provisioned-throughput", 
      "--stream-specification", 
      "--sse-specification", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-delete-backup{
   $flags=(
      "--backup-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-delete-item{
   $flags=(
      "--table-name", 
      "--key", 
      "--expected", 
      "--conditional-operator", 
      "--return-values", 
      "--return-consumed-capacity", 
      "--return-item-collection-metrics", 
      "--condition-expression", 
      "--expression-attribute-names", 
      "--expression-attribute-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-delete-table{
   $flags=(
      "--table-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-backup{
   $flags=(
      "--backup-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-continuous-backups{
   $flags=(
      "--table-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-contributor-insights{
   $flags=(
      "--table-name", 
      "--index-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-endpoints{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-global-table{
   $flags=(
      "--global-table-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-global-table-settings{
   $flags=(
      "--global-table-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-limits{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-table{
   $flags=(
      "--table-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-table-replica-auto-scaling{
   $flags=(
      "--table-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-describe-time-to-live{
   $flags=(
      "--table-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-get-item{
   $flags=(
      "--table-name", 
      "--key", 
      "--attributes-to-get", 
      "--consistent-read", 
      "--no-consistent-read", 
      "--return-consumed-capacity", 
      "--projection-expression", 
      "--expression-attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-list-backups{
   $flags=(
      "--table-name", 
      "--time-range-lower-bound", 
      "--time-range-upper-bound", 
      "--backup-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-list-contributor-insights{
   $flags=(
      "--table-name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-list-global-tables{
   $flags=(
      "--exclusive-start-global-table-name", 
      "--limit", 
      "--region-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-list-tables{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-list-tags-of-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-put-item{
   $flags=(
      "--table-name", 
      "--item", 
      "--expected", 
      "--return-values", 
      "--return-consumed-capacity", 
      "--return-item-collection-metrics", 
      "--conditional-operator", 
      "--condition-expression", 
      "--expression-attribute-names", 
      "--expression-attribute-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-query{
   $flags=(
      "--table-name", 
      "--index-name", 
      "--select", 
      "--attributes-to-get", 
      "--consistent-read", 
      "--no-consistent-read", 
      "--key-conditions", 
      "--query-filter", 
      "--conditional-operator", 
      "--scan-index-forward", 
      "--no-scan-index-forward", 
      "--return-consumed-capacity", 
      "--projection-expression", 
      "--filter-expression", 
      "--key-condition-expression", 
      "--expression-attribute-names", 
      "--expression-attribute-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-restore-table-from-backup{
   $flags=(
      "--target-table-name", 
      "--backup-arn", 
      "--billing-mode-override", 
      "--global-secondary-index-override", 
      "--local-secondary-index-override", 
      "--provisioned-throughput-override", 
      "--sse-specification-override", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-restore-table-to-point-in-time{
   $flags=(
      "--source-table-arn", 
      "--source-table-name", 
      "--target-table-name", 
      "--use-latest-restorable-time", 
      "--no-use-latest-restorable-time", 
      "--restore-date-time", 
      "--billing-mode-override", 
      "--global-secondary-index-override", 
      "--local-secondary-index-override", 
      "--provisioned-throughput-override", 
      "--sse-specification-override", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-scan{
   $flags=(
      "--table-name", 
      "--index-name", 
      "--attributes-to-get", 
      "--select", 
      "--scan-filter", 
      "--conditional-operator", 
      "--return-consumed-capacity", 
      "--total-segments", 
      "--segment", 
      "--projection-expression", 
      "--filter-expression", 
      "--expression-attribute-names", 
      "--expression-attribute-values", 
      "--consistent-read", 
      "--no-consistent-read", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-transact-get-items{
   $flags=(
      "--transact-items", 
      "--return-consumed-capacity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-transact-write-items{
   $flags=(
      "--transact-items", 
      "--return-consumed-capacity", 
      "--return-item-collection-metrics", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-update-continuous-backups{
   $flags=(
      "--table-name", 
      "--point-in-time-recovery-specification", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-update-contributor-insights{
   $flags=(
      "--table-name", 
      "--index-name", 
      "--contributor-insights-action", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-update-global-table{
   $flags=(
      "--global-table-name", 
      "--replica-updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-update-global-table-settings{
   $flags=(
      "--global-table-name", 
      "--global-table-billing-mode", 
      "--global-table-provisioned-write-capacity-units", 
      "--global-table-provisioned-write-capacity-auto-scaling-settings-update", 
      "--global-table-global-secondary-index-settings-update", 
      "--replica-settings-update", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-update-item{
   $flags=(
      "--table-name", 
      "--key", 
      "--attribute-updates", 
      "--expected", 
      "--conditional-operator", 
      "--return-values", 
      "--return-consumed-capacity", 
      "--return-item-collection-metrics", 
      "--update-expression", 
      "--condition-expression", 
      "--expression-attribute-names", 
      "--expression-attribute-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-update-table{
   $flags=(
      "--attribute-definitions", 
      "--table-name", 
      "--billing-mode", 
      "--provisioned-throughput", 
      "--global-secondary-index-updates", 
      "--stream-specification", 
      "--sse-specification", 
      "--replica-updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-update-table-replica-auto-scaling{
   $flags=(
      "--global-secondary-index-updates", 
      "--table-name", 
      "--provisioned-write-capacity-auto-scaling-update", 
      "--replica-updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-update-time-to-live{
   $flags=(
      "--table-name", 
      "--time-to-live-specification", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodb-wait{
   $flags=("");
   return $flags;
}
function Get-dynamodbstreams{
   $commands=(
      "describe-stream", 
      "get-records", 
      "get-shard-iterator", 
      "list-streams"
    );
   return $commands;
}
function Get-dynamodbstreams-describe-stream{
   $flags=(
      "--stream-arn", 
      "--limit", 
      "--exclusive-start-shard-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodbstreams-get-records{
   $flags=(
      "--shard-iterator", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodbstreams-get-shard-iterator{
   $flags=(
      "--stream-arn", 
      "--shard-id", 
      "--shard-iterator-type", 
      "--sequence-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-dynamodbstreams-list-streams{
   $flags=(
      "--table-name", 
      "--limit", 
      "--exclusive-start-stream-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ebs{
   $commands=(
      "get-snapshot-block", 
      "list-changed-blocks", 
      "list-snapshot-blocks"
    );
   return $commands;
}
function Get-ebs-get-snapshot-block{
   $flags=(
      "--snapshot-id", 
      "--block-index", 
      "--block-token"
    );
   return $flags;
}
function Get-ebs-list-changed-blocks{
   $flags=(
      "--first-snapshot-id", 
      "--second-snapshot-id", 
      "--next-token", 
      "--max-results", 
      "--starting-block-index", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ebs-list-snapshot-blocks{
   $flags=(
      "--snapshot-id", 
      "--next-token", 
      "--max-results", 
      "--starting-block-index", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2{
   $commands=(
      "accept-reserved-instances-exchange-quote", 
      "accept-transit-gateway-peering-attachment", 
      "accept-transit-gateway-vpc-attachment", 
      "accept-vpc-endpoint-connections", 
      "accept-vpc-peering-connection", 
      "advertise-byoip-cidr", 
      "allocate-address", 
      "allocate-hosts", 
      "apply-security-groups-to-client-vpn-target-network", 
      "assign-ipv6-addresses", 
      "assign-private-ip-addresses", 
      "associate-address", 
      "associate-client-vpn-target-network", 
      "associate-dhcp-options", 
      "associate-iam-instance-profile", 
      "associate-route-table", 
      "associate-subnet-cidr-block", 
      "associate-transit-gateway-multicast-domain", 
      "associate-transit-gateway-route-table", 
      "associate-vpc-cidr-block", 
      "attach-classic-link-vpc", 
      "attach-internet-gateway", 
      "attach-network-interface", 
      "attach-volume", 
      "attach-vpn-gateway", 
      "authorize-client-vpn-ingress", 
      "authorize-security-group-egress", 
      "authorize-security-group-ingress", 
      "bundle-instance", 
      "cancel-bundle-task", 
      "cancel-capacity-reservation", 
      "cancel-conversion-task", 
      "cancel-export-task", 
      "cancel-import-task", 
      "cancel-reserved-instances-listing", 
      "cancel-spot-fleet-requests", 
      "cancel-spot-instance-requests", 
      "confirm-product-instance", 
      "copy-fpga-image", 
      "copy-image", 
      "copy-snapshot", 
      "create-capacity-reservation", 
      "create-client-vpn-endpoint", 
      "create-client-vpn-route", 
      "create-customer-gateway", 
      "create-default-subnet", 
      "create-default-vpc", 
      "create-dhcp-options", 
      "create-egress-only-internet-gateway", 
      "create-fleet", 
      "create-flow-logs", 
      "create-fpga-image", 
      "create-image", 
      "create-instance-export-task", 
      "create-internet-gateway", 
      "create-key-pair", 
      "create-launch-template", 
      "create-launch-template-version", 
      "create-local-gateway-route", 
      "create-local-gateway-route-table-vpc-association", 
      "create-nat-gateway", 
      "create-network-acl", 
      "create-network-acl-entry", 
      "create-network-interface", 
      "create-network-interface-permission", 
      "create-placement-group", 
      "create-reserved-instances-listing", 
      "create-route", 
      "create-route-table", 
      "create-security-group", 
      "create-snapshot", 
      "create-snapshots", 
      "create-spot-datafeed-subscription", 
      "create-subnet", 
      "create-tags", 
      "create-traffic-mirror-filter", 
      "create-traffic-mirror-filter-rule", 
      "create-traffic-mirror-session", 
      "create-traffic-mirror-target", 
      "create-transit-gateway", 
      "create-transit-gateway-multicast-domain", 
      "create-transit-gateway-peering-attachment", 
      "create-transit-gateway-route", 
      "create-transit-gateway-route-table", 
      "create-transit-gateway-vpc-attachment", 
      "create-volume", 
      "create-vpc", 
      "create-vpc-endpoint", 
      "create-vpc-endpoint-connection-notification", 
      "create-vpc-endpoint-service-configuration", 
      "create-vpc-peering-connection", 
      "create-vpn-connection", 
      "create-vpn-connection-route", 
      "create-vpn-gateway", 
      "delete-client-vpn-endpoint", 
      "delete-client-vpn-route", 
      "delete-customer-gateway", 
      "delete-dhcp-options", 
      "delete-egress-only-internet-gateway", 
      "delete-fleets", 
      "delete-flow-logs", 
      "delete-fpga-image", 
      "delete-internet-gateway", 
      "delete-key-pair", 
      "delete-launch-template", 
      "delete-launch-template-versions", 
      "delete-local-gateway-route", 
      "delete-local-gateway-route-table-vpc-association", 
      "delete-nat-gateway", 
      "delete-network-acl", 
      "delete-network-acl-entry", 
      "delete-network-interface", 
      "delete-network-interface-permission", 
      "delete-placement-group", 
      "delete-queued-reserved-instances", 
      "delete-route", 
      "delete-route-table", 
      "delete-security-group", 
      "delete-snapshot", 
      "delete-spot-datafeed-subscription", 
      "delete-subnet", 
      "delete-tags", 
      "delete-traffic-mirror-filter", 
      "delete-traffic-mirror-filter-rule", 
      "delete-traffic-mirror-session", 
      "delete-traffic-mirror-target", 
      "delete-transit-gateway", 
      "delete-transit-gateway-multicast-domain", 
      "delete-transit-gateway-peering-attachment", 
      "delete-transit-gateway-route", 
      "delete-transit-gateway-route-table", 
      "delete-transit-gateway-vpc-attachment", 
      "delete-volume", 
      "delete-vpc", 
      "delete-vpc-endpoint-connection-notifications", 
      "delete-vpc-endpoint-service-configurations", 
      "delete-vpc-endpoints", 
      "delete-vpc-peering-connection", 
      "delete-vpn-connection", 
      "delete-vpn-connection-route", 
      "delete-vpn-gateway", 
      "deprovision-byoip-cidr", 
      "deregister-image", 
      "deregister-instance-event-notification-attributes", 
      "deregister-transit-gateway-multicast-group-members", 
      "deregister-transit-gateway-multicast-group-sources", 
      "describe-account-attributes", 
      "describe-addresses", 
      "describe-aggregate-id-format", 
      "describe-availability-zones", 
      "describe-bundle-tasks", 
      "describe-byoip-cidrs", 
      "describe-capacity-reservations", 
      "describe-classic-link-instances", 
      "describe-client-vpn-authorization-rules", 
      "describe-client-vpn-connections", 
      "describe-client-vpn-endpoints", 
      "describe-client-vpn-routes", 
      "describe-client-vpn-target-networks", 
      "describe-coip-pools", 
      "describe-conversion-tasks", 
      "describe-customer-gateways", 
      "describe-dhcp-options", 
      "describe-egress-only-internet-gateways", 
      "describe-elastic-gpus", 
      "describe-export-image-tasks", 
      "describe-export-tasks", 
      "describe-fast-snapshot-restores", 
      "describe-fleet-history", 
      "describe-fleet-instances", 
      "describe-fleets", 
      "describe-flow-logs", 
      "describe-fpga-image-attribute", 
      "describe-fpga-images", 
      "describe-host-reservation-offerings", 
      "describe-host-reservations", 
      "describe-hosts", 
      "describe-iam-instance-profile-associations", 
      "describe-id-format", 
      "describe-identity-id-format", 
      "describe-image-attribute", 
      "describe-images", 
      "describe-import-image-tasks", 
      "describe-import-snapshot-tasks", 
      "describe-instance-attribute", 
      "describe-instance-credit-specifications", 
      "describe-instance-event-notification-attributes", 
      "describe-instance-status", 
      "describe-instance-type-offerings", 
      "describe-instance-types", 
      "describe-instances", 
      "describe-internet-gateways", 
      "describe-ipv6-pools", 
      "describe-key-pairs", 
      "describe-launch-template-versions", 
      "describe-launch-templates", 
      "describe-local-gateway-route-table-virtual-interface-group-associations", 
      "describe-local-gateway-route-table-vpc-associations", 
      "describe-local-gateway-route-tables", 
      "describe-local-gateway-virtual-interface-groups", 
      "describe-local-gateway-virtual-interfaces", 
      "describe-local-gateways", 
      "describe-moving-addresses", 
      "describe-nat-gateways", 
      "describe-network-acls", 
      "describe-network-interface-attribute", 
      "describe-network-interface-permissions", 
      "describe-network-interfaces", 
      "describe-placement-groups", 
      "describe-prefix-lists", 
      "describe-principal-id-format", 
      "describe-public-ipv4-pools", 
      "describe-regions", 
      "describe-reserved-instances", 
      "describe-reserved-instances-listings", 
      "describe-reserved-instances-modifications", 
      "describe-reserved-instances-offerings", 
      "describe-route-tables", 
      "describe-scheduled-instance-availability", 
      "describe-scheduled-instances", 
      "describe-security-group-references", 
      "describe-security-groups", 
      "describe-snapshot-attribute", 
      "describe-snapshots", 
      "describe-spot-datafeed-subscription", 
      "describe-spot-fleet-instances", 
      "describe-spot-fleet-request-history", 
      "describe-spot-fleet-requests", 
      "describe-spot-instance-requests", 
      "describe-spot-price-history", 
      "describe-stale-security-groups", 
      "describe-subnets", 
      "describe-tags", 
      "describe-traffic-mirror-filters", 
      "describe-traffic-mirror-sessions", 
      "describe-traffic-mirror-targets", 
      "describe-transit-gateway-attachments", 
      "describe-transit-gateway-multicast-domains", 
      "describe-transit-gateway-peering-attachments", 
      "describe-transit-gateway-route-tables", 
      "describe-transit-gateway-vpc-attachments", 
      "describe-transit-gateways", 
      "describe-volume-attribute", 
      "describe-volume-status", 
      "describe-volumes", 
      "describe-volumes-modifications", 
      "describe-vpc-attribute", 
      "describe-vpc-classic-link", 
      "describe-vpc-classic-link-dns-support", 
      "describe-vpc-endpoint-connection-notifications", 
      "describe-vpc-endpoint-connections", 
      "describe-vpc-endpoint-service-configurations", 
      "describe-vpc-endpoint-service-permissions", 
      "describe-vpc-endpoint-services", 
      "describe-vpc-endpoints", 
      "describe-vpc-peering-connections", 
      "describe-vpcs", 
      "describe-vpn-connections", 
      "describe-vpn-gateways", 
      "detach-classic-link-vpc", 
      "detach-internet-gateway", 
      "detach-network-interface", 
      "detach-volume", 
      "detach-vpn-gateway", 
      "disable-ebs-encryption-by-default", 
      "disable-fast-snapshot-restores", 
      "disable-transit-gateway-route-table-propagation", 
      "disable-vgw-route-propagation", 
      "disable-vpc-classic-link", 
      "disable-vpc-classic-link-dns-support", 
      "disassociate-address", 
      "disassociate-client-vpn-target-network", 
      "disassociate-iam-instance-profile", 
      "disassociate-route-table", 
      "disassociate-subnet-cidr-block", 
      "disassociate-transit-gateway-multicast-domain", 
      "disassociate-transit-gateway-route-table", 
      "disassociate-vpc-cidr-block", 
      "enable-ebs-encryption-by-default", 
      "enable-fast-snapshot-restores", 
      "enable-transit-gateway-route-table-propagation", 
      "enable-vgw-route-propagation", 
      "enable-volume-io", 
      "enable-vpc-classic-link", 
      "enable-vpc-classic-link-dns-support", 
      "export-client-vpn-client-certificate-revocation-list", 
      "export-client-vpn-client-configuration", 
      "export-image", 
      "export-transit-gateway-routes", 
      "get-associated-ipv6-pool-cidrs", 
      "get-capacity-reservation-usage", 
      "get-coip-pool-usage", 
      "get-console-output", 
      "get-console-screenshot", 
      "get-default-credit-specification", 
      "get-ebs-default-kms-key-id", 
      "get-ebs-encryption-by-default", 
      "get-host-reservation-purchase-preview", 
      "get-launch-template-data", 
      "get-password-data", 
      "get-reserved-instances-exchange-quote", 
      "get-transit-gateway-attachment-propagations", 
      "get-transit-gateway-multicast-domain-associations", 
      "get-transit-gateway-route-table-associations", 
      "get-transit-gateway-route-table-propagations", 
      "import-client-vpn-client-certificate-revocation-list", 
      "import-image", 
      "import-key-pair", 
      "import-snapshot", 
      "modify-availability-zone-group", 
      "modify-capacity-reservation", 
      "modify-client-vpn-endpoint", 
      "modify-default-credit-specification", 
      "modify-ebs-default-kms-key-id", 
      "modify-fleet", 
      "modify-fpga-image-attribute", 
      "modify-hosts", 
      "modify-id-format", 
      "modify-identity-id-format", 
      "modify-image-attribute", 
      "modify-instance-attribute", 
      "modify-instance-capacity-reservation-attributes", 
      "modify-instance-credit-specification", 
      "modify-instance-event-start-time", 
      "modify-instance-metadata-options", 
      "modify-instance-placement", 
      "modify-launch-template", 
      "modify-network-interface-attribute", 
      "modify-reserved-instances", 
      "modify-snapshot-attribute", 
      "modify-spot-fleet-request", 
      "modify-subnet-attribute", 
      "modify-traffic-mirror-filter-network-services", 
      "modify-traffic-mirror-filter-rule", 
      "modify-traffic-mirror-session", 
      "modify-transit-gateway-vpc-attachment", 
      "modify-volume", 
      "modify-volume-attribute", 
      "modify-vpc-attribute", 
      "modify-vpc-endpoint", 
      "modify-vpc-endpoint-connection-notification", 
      "modify-vpc-endpoint-service-configuration", 
      "modify-vpc-endpoint-service-permissions", 
      "modify-vpc-peering-connection-options", 
      "modify-vpc-tenancy", 
      "modify-vpn-connection", 
      "modify-vpn-tunnel-certificate", 
      "modify-vpn-tunnel-options", 
      "monitor-instances", 
      "move-address-to-vpc", 
      "provision-byoip-cidr", 
      "purchase-host-reservation", 
      "purchase-reserved-instances-offering", 
      "purchase-scheduled-instances", 
      "reboot-instances", 
      "register-image", 
      "register-instance-event-notification-attributes", 
      "register-transit-gateway-multicast-group-members", 
      "register-transit-gateway-multicast-group-sources", 
      "reject-transit-gateway-peering-attachment", 
      "reject-transit-gateway-vpc-attachment", 
      "reject-vpc-endpoint-connections", 
      "reject-vpc-peering-connection", 
      "release-address", 
      "release-hosts", 
      "replace-iam-instance-profile-association", 
      "replace-network-acl-association", 
      "replace-network-acl-entry", 
      "replace-route", 
      "replace-route-table-association", 
      "replace-transit-gateway-route", 
      "report-instance-status", 
      "request-spot-fleet", 
      "request-spot-instances", 
      "reset-ebs-default-kms-key-id", 
      "reset-fpga-image-attribute", 
      "reset-image-attribute", 
      "reset-instance-attribute", 
      "reset-network-interface-attribute", 
      "reset-snapshot-attribute", 
      "restore-address-to-classic", 
      "revoke-client-vpn-ingress", 
      "revoke-security-group-egress", 
      "revoke-security-group-ingress", 
      "run-instances", 
      "run-scheduled-instances", 
      "search-local-gateway-routes", 
      "search-transit-gateway-multicast-groups", 
      "search-transit-gateway-routes", 
      "send-diagnostic-interrupt", 
      "start-instances", 
      "start-vpc-endpoint-service-private-dns-verification", 
      "stop-instances", 
      "terminate-client-vpn-connections", 
      "terminate-instances", 
      "unassign-ipv6-addresses", 
      "unassign-private-ip-addresses", 
      "unmonitor-instances", 
      "update-security-group-rule-descriptions-egress", 
      "update-security-group-rule-descriptions-ingress", 
      "wait", 
      "withdraw-byoip-cidr"
    );
   return $commands;
}
function Get-ec2-accept-reserved-instances-exchange-quote{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--reserved-instance-ids", 
      "--target-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-accept-transit-gateway-peering-attachment{
   $flags=(
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-accept-transit-gateway-vpc-attachment{
   $flags=(
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-accept-vpc-endpoint-connections{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-id", 
      "--vpc-endpoint-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-accept-vpc-peering-connection{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-peering-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-advertise-byoip-cidr{
   $flags=(
      "--cidr", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-allocate-address{
   $flags=(
      "--domain", 
      "--address", 
      "--public-ipv", 
      "--network-border-group", 
      "--customer-owned-ipv", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-allocate-hosts{
   $flags=(
      "--auto-placement", 
      "--availability-zone", 
      "--client-token", 
      "--instance-type", 
      "--instance-family", 
      "--quantity", 
      "--tag-specifications", 
      "--host-recovery", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-apply-security-groups-to-client-vpn-target-network{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--vpc-id", 
      "--security-group-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-assign-ipv6-addresses{
   $flags=(
      "--ipv", 
      "--ipv", 
      "--network-interface-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-assign-private-ip-addresses{
   $flags=(
      "--allow-reassignment", 
      "--no-allow-reassignment", 
      "--network-interface-id", 
      "--private-ip-addresses", 
      "--secondary-private-ip-address-count", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-address{
   $flags=(
      "--allocation-id", 
      "--instance-id", 
      "--public-ip", 
      "--allow-reassociation", 
      "--no-allow-reassociation", 
      "--dry-run", 
      "--no-dry-run", 
      "--network-interface-id", 
      "--private-ip-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-client-vpn-target-network{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--subnet-id", 
      "--client-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-dhcp-options{
   $flags=(
      "--dhcp-options-id", 
      "--vpc-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-iam-instance-profile{
   $flags=(
      "--iam-instance-profile", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-route-table{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--route-table-id", 
      "--subnet-id", 
      "--gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-subnet-cidr-block{
   $flags=(
      "--ipv", 
      "--subnet-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-transit-gateway-multicast-domain{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--transit-gateway-attachment-id", 
      "--subnet-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-transit-gateway-route-table{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-associate-vpc-cidr-block{
   $flags=(
      "--amazon-provided-ipv", 
      "--no-amazon-provided-ipv", 
      "--cidr-block", 
      "--vpc-id", 
      "--ipv", 
      "--ipv", 
      "--ipv", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-attach-classic-link-vpc{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--groups", 
      "--instance-id", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-attach-internet-gateway{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--internet-gateway-id", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-attach-network-interface{
   $flags=(
      "--device-index", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-id", 
      "--network-interface-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-attach-volume{
   $flags=(
      "--device", 
      "--instance-id", 
      "--volume-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-attach-vpn-gateway{
   $flags=(
      "--vpc-id", 
      "--vpn-gateway-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-authorize-client-vpn-ingress{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--target-network-cidr", 
      "--access-group-id", 
      "--authorize-all-groups", 
      "--no-authorize-all-groups", 
      "--description", 
      "--client-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-authorize-security-group-egress{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--group-id", 
      "--ip-permissions", 
      "--protocol", 
      "--port", 
      "--cidr", 
      "--source-group", 
      "--group-owner", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-authorize-security-group-ingress{
   $flags=(
      "--group-id", 
      "--group-name", 
      "--ip-permissions", 
      "--dry-run", 
      "--no-dry-run", 
      "--protocol", 
      "--port", 
      "--cidr", 
      "--source-group", 
      "--group-owner", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-bundle-instance{
   $flags=(
      "--instance-id", 
      "--storage", 
      "--dry-run", 
      "--no-dry-run", 
      "--bucket", 
      "--prefix", 
      "--owner-akid", 
      "--owner-sak", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-cancel-bundle-task{
   $flags=(
      "--bundle-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-cancel-capacity-reservation{
   $flags=(
      "--capacity-reservation-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-cancel-conversion-task{
   $flags=(
      "--conversion-task-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--reason-message", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-cancel-export-task{
   $flags=(
      "--export-task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-cancel-import-task{
   $flags=(
      "--cancel-reason", 
      "--dry-run", 
      "--no-dry-run", 
      "--import-task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-cancel-reserved-instances-listing{
   $flags=(
      "--reserved-instances-listing-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-cancel-spot-fleet-requests{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--spot-fleet-request-ids", 
      "--terminate-instances", 
      "--no-terminate-instances", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-cancel-spot-instance-requests{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--spot-instance-request-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-confirm-product-instance{
   $flags=(
      "--instance-id", 
      "--product-code", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-copy-fpga-image{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--source-fpga-image-id", 
      "--description", 
      "--name", 
      "--source-region", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-copy-image{
   $flags=(
      "--client-token", 
      "--description", 
      "--encrypted", 
      "--no-encrypted", 
      "--kms-key-id", 
      "--name", 
      "--source-image-id", 
      "--source-region", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-copy-snapshot{
   $flags=(
      "--description", 
      "--destination-region", 
      "--encrypted", 
      "--no-encrypted", 
      "--kms-key-id", 
      "--presigned-url", 
      "--source-region", 
      "--source-snapshot-id", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-capacity-reservation{
   $flags=(
      "--client-token", 
      "--instance-type", 
      "--instance-platform", 
      "--availability-zone", 
      "--availability-zone-id", 
      "--tenancy", 
      "--instance-count", 
      "--ebs-optimized", 
      "--no-ebs-optimized", 
      "--ephemeral-storage", 
      "--no-ephemeral-storage", 
      "--end-date", 
      "--end-date-type", 
      "--instance-match-criteria", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-client-vpn-endpoint{
   $flags=(
      "--client-cidr-block", 
      "--server-certificate-arn", 
      "--authentication-options", 
      "--connection-log-options", 
      "--dns-servers", 
      "--transport-protocol", 
      "--vpn-port", 
      "--description", 
      "--split-tunnel", 
      "--no-split-tunnel", 
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--tag-specifications", 
      "--security-group-ids", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-client-vpn-route{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--destination-cidr-block", 
      "--target-vpc-subnet-id", 
      "--description", 
      "--client-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-customer-gateway{
   $flags=(
      "--bgp-asn", 
      "--public-ip", 
      "--certificate-arn", 
      "--type", 
      "--device-name", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-default-subnet{
   $flags=(
      "--availability-zone", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-default-vpc{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-dhcp-options{
   $flags=(
      "--dhcp-configurations", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-egress-only-internet-gateway{
   $flags=(
      "--client-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-fleet{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--spot-options", 
      "--on-demand-options", 
      "--excess-capacity-termination-policy", 
      "--launch-template-configs", 
      "--target-capacity-specification", 
      "--terminate-instances-with-expiration", 
      "--no-terminate-instances-with-expiration", 
      "--type", 
      "--valid-from", 
      "--valid-until", 
      "--replace-unhealthy-instances", 
      "--no-replace-unhealthy-instances", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-flow-logs{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--deliver-logs-permission-arn", 
      "--log-group-name", 
      "--resource-ids", 
      "--resource-type", 
      "--traffic-type", 
      "--log-destination-type", 
      "--log-destination", 
      "--log-format", 
      "--tag-specifications", 
      "--max-aggregation-interval", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-fpga-image{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--input-storage-location", 
      "--logs-storage-location", 
      "--description", 
      "--name", 
      "--client-token", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-image{
   $flags=(
      "--block-device-mappings", 
      "--description", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-id", 
      "--name", 
      "--no-reboot", 
      "--reboot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-instance-export-task{
   $flags=(
      "--description", 
      "--export-to-s3-task", 
      "--instance-id", 
      "--target-environment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-internet-gateway{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-key-pair{
   $flags=(
      "--key-name", 
      "--dry-run", 
      "--no-dry-run", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-launch-template{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--launch-template-name", 
      "--version-description", 
      "--launch-template-data", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-launch-template-version{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--launch-template-id", 
      "--launch-template-name", 
      "--source-version", 
      "--version-description", 
      "--launch-template-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-local-gateway-route{
   $flags=(
      "--destination-cidr-block", 
      "--local-gateway-route-table-id", 
      "--local-gateway-virtual-interface-group-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-local-gateway-route-table-vpc-association{
   $flags=(
      "--local-gateway-route-table-id", 
      "--vpc-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-nat-gateway{
   $flags=(
      "--allocation-id", 
      "--client-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--subnet-id", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-network-acl{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-network-acl-entry{
   $flags=(
      "--cidr-block", 
      "--dry-run", 
      "--no-dry-run", 
      "--egress", 
      "--ingress", 
      "--icmp-type-code", 
      "--ipv", 
      "--network-acl-id", 
      "--port-range", 
      "--protocol", 
      "--rule-action", 
      "--rule-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-network-interface{
   $flags=(
      "--description", 
      "--dry-run", 
      "--no-dry-run", 
      "--groups", 
      "--ipv", 
      "--ipv", 
      "--private-ip-address", 
      "--private-ip-addresses", 
      "--secondary-private-ip-address-count", 
      "--interface-type", 
      "--subnet-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-network-interface-permission{
   $flags=(
      "--network-interface-id", 
      "--aws-account-id", 
      "--aws-service", 
      "--permission", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-placement-group{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--group-name", 
      "--strategy", 
      "--partition-count", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-reserved-instances-listing{
   $flags=(
      "--client-token", 
      "--instance-count", 
      "--price-schedules", 
      "--reserved-instances-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-route{
   $flags=(
      "--destination-cidr-block", 
      "--destination-ipv", 
      "--dry-run", 
      "--no-dry-run", 
      "--egress-only-internet-gateway-id", 
      "--gateway-id", 
      "--instance-id", 
      "--nat-gateway-id", 
      "--transit-gateway-id", 
      "--local-gateway-id", 
      "--network-interface-id", 
      "--route-table-id", 
      "--vpc-peering-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-route-table{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-security-group{
   $flags=(
      "--description", 
      "--group-name", 
      "--vpc-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-snapshot{
   $flags=(
      "--description", 
      "--volume-id", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-snapshots{
   $flags=(
      "--description", 
      "--instance-specification", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--copy-tags-from-source", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-spot-datafeed-subscription{
   $flags=(
      "--bucket", 
      "--dry-run", 
      "--no-dry-run", 
      "--prefix", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-subnet{
   $flags=(
      "--availability-zone", 
      "--availability-zone-id", 
      "--cidr-block", 
      "--ipv", 
      "--outpost-arn", 
      "--vpc-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-tags{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--resources", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-traffic-mirror-filter{
   $flags=(
      "--description", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-traffic-mirror-filter-rule{
   $flags=(
      "--traffic-mirror-filter-id", 
      "--traffic-direction", 
      "--rule-number", 
      "--rule-action", 
      "--destination-port-range", 
      "--source-port-range", 
      "--protocol", 
      "--destination-cidr-block", 
      "--source-cidr-block", 
      "--description", 
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-traffic-mirror-session{
   $flags=(
      "--network-interface-id", 
      "--traffic-mirror-target-id", 
      "--traffic-mirror-filter-id", 
      "--packet-length", 
      "--session-number", 
      "--virtual-network-id", 
      "--description", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-traffic-mirror-target{
   $flags=(
      "--network-interface-id", 
      "--network-load-balancer-arn", 
      "--description", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-transit-gateway{
   $flags=(
      "--description", 
      "--options", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-transit-gateway-multicast-domain{
   $flags=(
      "--transit-gateway-id", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-transit-gateway-peering-attachment{
   $flags=(
      "--transit-gateway-id", 
      "--peer-transit-gateway-id", 
      "--peer-account-id", 
      "--peer-region", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-transit-gateway-route{
   $flags=(
      "--destination-cidr-block", 
      "--transit-gateway-route-table-id", 
      "--transit-gateway-attachment-id", 
      "--blackhole", 
      "--no-blackhole", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-transit-gateway-route-table{
   $flags=(
      "--transit-gateway-id", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-transit-gateway-vpc-attachment{
   $flags=(
      "--transit-gateway-id", 
      "--vpc-id", 
      "--subnet-ids", 
      "--options", 
      "--tag-specifications", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-volume{
   $flags=(
      "--availability-zone", 
      "--encrypted", 
      "--no-encrypted", 
      "--iops", 
      "--kms-key-id", 
      "--outpost-arn", 
      "--size", 
      "--snapshot-id", 
      "--volume-type", 
      "--dry-run", 
      "--no-dry-run", 
      "--tag-specifications", 
      "--multi-attach-enabled", 
      "--no-multi-attach-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-vpc{
   $flags=(
      "--cidr-block", 
      "--amazon-provided-ipv", 
      "--no-amazon-provided-ipv", 
      "--ipv", 
      "--ipv", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-tenancy", 
      "--ipv", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-vpc-endpoint{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-endpoint-type", 
      "--vpc-id", 
      "--service-name", 
      "--policy-document", 
      "--route-table-ids", 
      "--subnet-ids", 
      "--security-group-ids", 
      "--client-token", 
      "--private-dns-enabled", 
      "--no-private-dns-enabled", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-vpc-endpoint-connection-notification{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-id", 
      "--vpc-endpoint-id", 
      "--connection-notification-arn", 
      "--connection-events", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-vpc-endpoint-service-configuration{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--acceptance-required", 
      "--no-acceptance-required", 
      "--private-dns-name", 
      "--network-load-balancer-arns", 
      "--client-token", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-vpc-peering-connection{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--peer-owner-id", 
      "--peer-vpc-id", 
      "--vpc-id", 
      "--peer-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-vpn-connection{
   $flags=(
      "--customer-gateway-id", 
      "--type", 
      "--vpn-gateway-id", 
      "--transit-gateway-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-vpn-connection-route{
   $flags=(
      "--destination-cidr-block", 
      "--vpn-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-create-vpn-gateway{
   $flags=(
      "--availability-zone", 
      "--type", 
      "--amazon-side-asn", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-client-vpn-endpoint{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-client-vpn-route{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--target-vpc-subnet-id", 
      "--destination-cidr-block", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-customer-gateway{
   $flags=(
      "--customer-gateway-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-dhcp-options{
   $flags=(
      "--dhcp-options-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-egress-only-internet-gateway{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--egress-only-internet-gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-fleets{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--fleet-ids", 
      "--terminate-instances", 
      "--no-terminate-instances", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-flow-logs{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--flow-log-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-fpga-image{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--fpga-image-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-internet-gateway{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--internet-gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-key-pair{
   $flags=(
      "--key-name", 
      "--key-pair-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-launch-template{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--launch-template-id", 
      "--launch-template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-launch-template-versions{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--launch-template-id", 
      "--launch-template-name", 
      "--versions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-local-gateway-route{
   $flags=(
      "--destination-cidr-block", 
      "--local-gateway-route-table-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-local-gateway-route-table-vpc-association{
   $flags=(
      "--local-gateway-route-table-vpc-association-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-nat-gateway{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--nat-gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-network-acl{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--network-acl-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-network-acl-entry{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--egress", 
      "--ingress", 
      "--network-acl-id", 
      "--rule-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-network-interface{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--network-interface-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-network-interface-permission{
   $flags=(
      "--network-interface-permission-id", 
      "--force", 
      "--no-force", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-placement-group{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-queued-reserved-instances{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--reserved-instances-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-route{
   $flags=(
      "--destination-cidr-block", 
      "--destination-ipv", 
      "--dry-run", 
      "--no-dry-run", 
      "--route-table-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-route-table{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--route-table-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-security-group{
   $flags=(
      "--group-id", 
      "--group-name", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-snapshot{
   $flags=(
      "--snapshot-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-spot-datafeed-subscription{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-subnet{
   $flags=(
      "--subnet-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-tags{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--resources", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-traffic-mirror-filter{
   $flags=(
      "--traffic-mirror-filter-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-traffic-mirror-filter-rule{
   $flags=(
      "--traffic-mirror-filter-rule-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-traffic-mirror-session{
   $flags=(
      "--traffic-mirror-session-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-traffic-mirror-target{
   $flags=(
      "--traffic-mirror-target-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-transit-gateway{
   $flags=(
      "--transit-gateway-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-transit-gateway-multicast-domain{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-transit-gateway-peering-attachment{
   $flags=(
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-transit-gateway-route{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--destination-cidr-block", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-transit-gateway-route-table{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-transit-gateway-vpc-attachment{
   $flags=(
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-volume{
   $flags=(
      "--volume-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-vpc{
   $flags=(
      "--vpc-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-vpc-endpoint-connection-notifications{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--connection-notification-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-vpc-endpoint-service-configurations{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-vpc-endpoints{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-endpoint-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-vpc-peering-connection{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-peering-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-vpn-connection{
   $flags=(
      "--vpn-connection-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-vpn-connection-route{
   $flags=(
      "--destination-cidr-block", 
      "--vpn-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-delete-vpn-gateway{
   $flags=(
      "--vpn-gateway-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-deprovision-byoip-cidr{
   $flags=(
      "--cidr", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-deregister-image{
   $flags=(
      "--image-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-deregister-instance-event-notification-attributes{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-tag-attribute", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-deregister-transit-gateway-multicast-group-members{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--group-ip-address", 
      "--network-interface-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-deregister-transit-gateway-multicast-group-sources{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--group-ip-address", 
      "--network-interface-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-account-attributes{
   $flags=(
      "--attribute-names", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-addresses{
   $flags=(
      "--filters", 
      "--public-ips", 
      "--allocation-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-aggregate-id-format{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-availability-zones{
   $flags=(
      "--filters", 
      "--zone-names", 
      "--zone-ids", 
      "--all-availability-zones", 
      "--no-all-availability-zones", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-bundle-tasks{
   $flags=(
      "--bundle-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-byoip-cidrs{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-capacity-reservations{
   $flags=(
      "--capacity-reservation-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-classic-link-instances{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-client-vpn-authorization-rules{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-client-vpn-connections{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-client-vpn-endpoints{
   $flags=(
      "--client-vpn-endpoint-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-client-vpn-routes{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-client-vpn-target-networks{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--association-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-coip-pools{
   $flags=(
      "--pool-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-conversion-tasks{
   $flags=(
      "--conversion-task-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-customer-gateways{
   $flags=(
      "--customer-gateway-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-dhcp-options{
   $flags=(
      "--dhcp-options-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-egress-only-internet-gateways{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--egress-only-internet-gateway-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-elastic-gpus{
   $flags=(
      "--elastic-gpu-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-export-image-tasks{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--export-image-task-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-export-tasks{
   $flags=(
      "--export-task-ids", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-fast-snapshot-restores{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-fleet-history{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--event-type", 
      "--max-results", 
      "--next-token", 
      "--fleet-id", 
      "--start-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-fleet-instances{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--max-results", 
      "--next-token", 
      "--fleet-id", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-fleets{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--fleet-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-flow-logs{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filter", 
      "--flow-log-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-fpga-image-attribute{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--fpga-image-id", 
      "--attribute", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-fpga-images{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--fpga-image-ids", 
      "--owners", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-host-reservation-offerings{
   $flags=(
      "--filter", 
      "--max-duration", 
      "--min-duration", 
      "--offering-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-host-reservations{
   $flags=(
      "--filter", 
      "--host-reservation-id-set", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-hosts{
   $flags=(
      "--filter", 
      "--host-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-iam-instance-profile-associations{
   $flags=(
      "--association-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-id-format{
   $flags=(
      "--resource", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-identity-id-format{
   $flags=(
      "--principal-arn", 
      "--resource", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-image-attribute{
   $flags=(
      "--attribute", 
      "--image-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-images{
   $flags=(
      "--executable-users", 
      "--filters", 
      "--image-ids", 
      "--owners", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-import-image-tasks{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--import-task-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-import-snapshot-tasks{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--import-task-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-instance-attribute{
   $flags=(
      "--attribute", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-instance-credit-specifications{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--instance-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-instance-event-notification-attributes{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-instance-status{
   $flags=(
      "--filters", 
      "--instance-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--include-all-instances", 
      "--no-include-all-instances", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-instance-type-offerings{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--location-type", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-instance-types{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-types", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-instances{
   $flags=(
      "--filters", 
      "--instance-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-internet-gateways{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--internet-gateway-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-ipv6-pools{
   $flags=(
      "--pool-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-key-pairs{
   $flags=(
      "--filters", 
      "--key-names", 
      "--key-pair-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-launch-template-versions{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--launch-template-id", 
      "--launch-template-name", 
      "--versions", 
      "--min-version", 
      "--max-version", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-launch-templates{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--launch-template-ids", 
      "--launch-template-names", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-local-gateway-route-table-virtual-interface-group-associations{
   $flags=(
      "--local-gateway-route-table-virtual-interface-group-association-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-local-gateway-route-table-vpc-associations{
   $flags=(
      "--local-gateway-route-table-vpc-association-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-local-gateway-route-tables{
   $flags=(
      "--local-gateway-route-table-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-local-gateway-virtual-interface-groups{
   $flags=(
      "--local-gateway-virtual-interface-group-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-local-gateway-virtual-interfaces{
   $flags=(
      "--local-gateway-virtual-interface-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-local-gateways{
   $flags=(
      "--local-gateway-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-moving-addresses{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--public-ips", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-nat-gateways{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filter", 
      "--nat-gateway-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-network-acls{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--network-acl-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-network-interface-attribute{
   $flags=(
      "--attribute", 
      "--dry-run", 
      "--no-dry-run", 
      "--network-interface-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-network-interface-permissions{
   $flags=(
      "--network-interface-permission-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-network-interfaces{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--network-interface-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-placement-groups{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--group-names", 
      "--group-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-prefix-lists{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--prefix-list-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-principal-id-format{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--resources", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-public-ipv4-pools{
   $flags=(
      "--pool-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-regions{
   $flags=(
      "--filters", 
      "--region-names", 
      "--dry-run", 
      "--no-dry-run", 
      "--all-regions", 
      "--no-all-regions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-reserved-instances{
   $flags=(
      "--filters", 
      "--offering-class", 
      "--reserved-instances-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--offering-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-reserved-instances-listings{
   $flags=(
      "--filters", 
      "--reserved-instances-id", 
      "--reserved-instances-listing-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-reserved-instances-modifications{
   $flags=(
      "--filters", 
      "--reserved-instances-modification-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-reserved-instances-offerings{
   $flags=(
      "--availability-zone", 
      "--filters", 
      "--include-marketplace", 
      "--no-include-marketplace", 
      "--instance-type", 
      "--max-duration", 
      "--max-instance-count", 
      "--min-duration", 
      "--offering-class", 
      "--product-description", 
      "--reserved-instances-offering-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-tenancy", 
      "--offering-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-route-tables{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--route-table-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-scheduled-instance-availability{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--first-slot-start-time-range", 
      "--max-slot-duration-in-hours", 
      "--min-slot-duration-in-hours", 
      "--recurrence", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-scheduled-instances{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--scheduled-instance-ids", 
      "--slot-start-time-range", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-security-group-references{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-security-groups{
   $flags=(
      "--filters", 
      "--group-ids", 
      "--group-names", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-snapshot-attribute{
   $flags=(
      "--attribute", 
      "--snapshot-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-snapshots{
   $flags=(
      "--filters", 
      "--owner-ids", 
      "--restorable-by-user-ids", 
      "--snapshot-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-spot-datafeed-subscription{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-spot-fleet-instances{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--spot-fleet-request-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-spot-fleet-request-history{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--event-type", 
      "--max-results", 
      "--next-token", 
      "--spot-fleet-request-id", 
      "--start-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-spot-fleet-requests{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--spot-fleet-request-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-spot-instance-requests{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--spot-instance-request-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-spot-price-history{
   $flags=(
      "--filters", 
      "--availability-zone", 
      "--dry-run", 
      "--no-dry-run", 
      "--end-time", 
      "--instance-types", 
      "--product-descriptions", 
      "--start-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-stale-security-groups{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-subnets{
   $flags=(
      "--filters", 
      "--subnet-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-tags{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-traffic-mirror-filters{
   $flags=(
      "--traffic-mirror-filter-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-traffic-mirror-sessions{
   $flags=(
      "--traffic-mirror-session-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-traffic-mirror-targets{
   $flags=(
      "--traffic-mirror-target-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-transit-gateway-attachments{
   $flags=(
      "--transit-gateway-attachment-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-transit-gateway-multicast-domains{
   $flags=(
      "--transit-gateway-multicast-domain-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-transit-gateway-peering-attachments{
   $flags=(
      "--transit-gateway-attachment-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-transit-gateway-route-tables{
   $flags=(
      "--transit-gateway-route-table-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-transit-gateway-vpc-attachments{
   $flags=(
      "--transit-gateway-attachment-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-transit-gateways{
   $flags=(
      "--transit-gateway-ids", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-volume-attribute{
   $flags=(
      "--attribute", 
      "--volume-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-volume-status{
   $flags=(
      "--filters", 
      "--volume-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-volumes{
   $flags=(
      "--filters", 
      "--volume-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-volumes-modifications{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--volume-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-attribute{
   $flags=(
      "--attribute", 
      "--vpc-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-classic-link{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-classic-link-dns-support{
   $flags=(
      "--vpc-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-endpoint-connection-notifications{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--connection-notification-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-endpoint-connections{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-endpoint-service-configurations{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-endpoint-service-permissions{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-endpoint-services{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-names", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-endpoints{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-endpoint-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpc-peering-connections{
   $flags=(
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-peering-connection-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpcs{
   $flags=(
      "--filters", 
      "--vpc-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpn-connections{
   $flags=(
      "--filters", 
      "--vpn-connection-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-describe-vpn-gateways{
   $flags=(
      "--filters", 
      "--vpn-gateway-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-detach-classic-link-vpc{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-id", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-detach-internet-gateway{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--internet-gateway-id", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-detach-network-interface{
   $flags=(
      "--attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-detach-volume{
   $flags=(
      "--device", 
      "--force", 
      "--no-force", 
      "--instance-id", 
      "--volume-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-detach-vpn-gateway{
   $flags=(
      "--vpc-id", 
      "--vpn-gateway-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disable-ebs-encryption-by-default{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disable-fast-snapshot-restores{
   $flags=(
      "--availability-zones", 
      "--source-snapshot-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disable-transit-gateway-route-table-propagation{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disable-vgw-route-propagation{
   $flags=(
      "--gateway-id", 
      "--route-table-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disable-vpc-classic-link{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disable-vpc-classic-link-dns-support{
   $flags=(
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disassociate-address{
   $flags=(
      "--association-id", 
      "--public-ip", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disassociate-client-vpn-target-network{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--association-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disassociate-iam-instance-profile{
   $flags=(
      "--association-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disassociate-route-table{
   $flags=(
      "--association-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disassociate-subnet-cidr-block{
   $flags=(
      "--association-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disassociate-transit-gateway-multicast-domain{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--transit-gateway-attachment-id", 
      "--subnet-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disassociate-transit-gateway-route-table{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-disassociate-vpc-cidr-block{
   $flags=(
      "--association-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-enable-ebs-encryption-by-default{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-enable-fast-snapshot-restores{
   $flags=(
      "--availability-zones", 
      "--source-snapshot-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-enable-transit-gateway-route-table-propagation{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-enable-vgw-route-propagation{
   $flags=(
      "--gateway-id", 
      "--route-table-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-enable-volume-io{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--volume-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-enable-vpc-classic-link{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-enable-vpc-classic-link-dns-support{
   $flags=(
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-export-client-vpn-client-certificate-revocation-list{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-export-client-vpn-client-configuration{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-export-image{
   $flags=(
      "--client-token", 
      "--description", 
      "--disk-image-format", 
      "--dry-run", 
      "--no-dry-run", 
      "--image-id", 
      "--s3-export-location", 
      "--role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-export-transit-gateway-routes{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--filters", 
      "--s3-bucket", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-associated-ipv6-pool-cidrs{
   $flags=(
      "--pool-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-capacity-reservation-usage{
   $flags=(
      "--capacity-reservation-id", 
      "--next-token", 
      "--max-results", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-coip-pool-usage{
   $flags=(
      "--pool-id", 
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-console-output{
   $flags=(
      "--instance-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--latest", 
      "--no-latest", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-console-screenshot{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-id", 
      "--wake-up", 
      "--no-wake-up", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-default-credit-specification{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-family", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-ebs-default-kms-key-id{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-ebs-encryption-by-default{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-host-reservation-purchase-preview{
   $flags=(
      "--host-id-set", 
      "--offering-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-launch-template-data{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-password-data{
   $flags=(
      "--instance-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--priv-launch-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-reserved-instances-exchange-quote{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--reserved-instance-ids", 
      "--target-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-transit-gateway-attachment-propagations{
   $flags=(
      "--transit-gateway-attachment-id", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-transit-gateway-multicast-domain-associations{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-transit-gateway-route-table-associations{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-get-transit-gateway-route-table-propagations{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-import-client-vpn-client-certificate-revocation-list{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--certificate-revocation-list", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-import-image{
   $flags=(
      "--architecture", 
      "--client-data", 
      "--client-token", 
      "--description", 
      "--disk-containers", 
      "--dry-run", 
      "--no-dry-run", 
      "--encrypted", 
      "--no-encrypted", 
      "--hypervisor", 
      "--kms-key-id", 
      "--license-type", 
      "--platform", 
      "--role-name", 
      "--license-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-import-key-pair{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--key-name", 
      "--public-key-material", 
      "--tag-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-import-snapshot{
   $flags=(
      "--client-data", 
      "--client-token", 
      "--description", 
      "--disk-container", 
      "--dry-run", 
      "--no-dry-run", 
      "--encrypted", 
      "--no-encrypted", 
      "--kms-key-id", 
      "--role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-availability-zone-group{
   $flags=(
      "--group-name", 
      "--opt-in-status", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-capacity-reservation{
   $flags=(
      "--capacity-reservation-id", 
      "--instance-count", 
      "--end-date", 
      "--end-date-type", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-client-vpn-endpoint{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--server-certificate-arn", 
      "--connection-log-options", 
      "--dns-servers", 
      "--vpn-port", 
      "--description", 
      "--split-tunnel", 
      "--no-split-tunnel", 
      "--dry-run", 
      "--no-dry-run", 
      "--security-group-ids", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-default-credit-specification{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-family", 
      "--cpu-credits", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-ebs-default-kms-key-id{
   $flags=(
      "--kms-key-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-fleet{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--excess-capacity-termination-policy", 
      "--fleet-id", 
      "--target-capacity-specification", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-fpga-image-attribute{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--fpga-image-id", 
      "--attribute", 
      "--operation-type", 
      "--user-ids", 
      "--user-groups", 
      "--product-codes", 
      "--load-permission", 
      "--description", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-hosts{
   $flags=(
      "--auto-placement", 
      "--host-ids", 
      "--host-recovery", 
      "--instance-type", 
      "--instance-family", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-id-format{
   $flags=(
      "--resource", 
      "--use-long-ids", 
      "--no-use-long-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-identity-id-format{
   $flags=(
      "--principal-arn", 
      "--resource", 
      "--use-long-ids", 
      "--no-use-long-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-image-attribute{
   $flags=(
      "--attribute", 
      "--description", 
      "--image-id", 
      "--launch-permission", 
      "--operation-type", 
      "--product-codes", 
      "--user-groups", 
      "--user-ids", 
      "--value", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-instance-attribute{
   $flags=(
      "--source-dest-check", 
      "--no-source-dest-check", 
      "--attribute", 
      "--block-device-mappings", 
      "--disable-api-termination", 
      "--no-disable-api-termination", 
      "--dry-run", 
      "--no-dry-run", 
      "--ebs-optimized", 
      "--no-ebs-optimized", 
      "--ena-support", 
      "--no-ena-support", 
      "--groups", 
      "--instance-id", 
      "--instance-initiated-shutdown-behavior", 
      "--instance-type", 
      "--kernel", 
      "--ramdisk", 
      "--sriov-net-support", 
      "--user-data", 
      "--value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-instance-capacity-reservation-attributes{
   $flags=(
      "--instance-id", 
      "--capacity-reservation-specification", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-instance-credit-specification{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--instance-credit-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-instance-event-start-time{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-id", 
      "--instance-event-id", 
      "--not-before", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-instance-metadata-options{
   $flags=(
      "--instance-id", 
      "--http-tokens", 
      "--http-put-response-hop-limit", 
      "--http-endpoint", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-instance-placement{
   $flags=(
      "--affinity", 
      "--group-name", 
      "--host-id", 
      "--instance-id", 
      "--tenancy", 
      "--partition-number", 
      "--host-resource-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-launch-template{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--launch-template-id", 
      "--launch-template-name", 
      "--default-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-network-interface-attribute{
   $flags=(
      "--attachment", 
      "--description", 
      "--dry-run", 
      "--no-dry-run", 
      "--groups", 
      "--network-interface-id", 
      "--source-dest-check", 
      "--no-source-dest-check", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-reserved-instances{
   $flags=(
      "--reserved-instances-ids", 
      "--client-token", 
      "--target-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-snapshot-attribute{
   $flags=(
      "--attribute", 
      "--create-volume-permission", 
      "--group-names", 
      "--operation-type", 
      "--snapshot-id", 
      "--user-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-spot-fleet-request{
   $flags=(
      "--excess-capacity-termination-policy", 
      "--spot-fleet-request-id", 
      "--target-capacity", 
      "--on-demand-target-capacity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-subnet-attribute{
   $flags=(
      "--assign-ipv", 
      "--no-assign-ipv", 
      "--map-public-ip-on-launch", 
      "--no-map-public-ip-on-launch", 
      "--subnet-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-traffic-mirror-filter-network-services{
   $flags=(
      "--traffic-mirror-filter-id", 
      "--add-network-services", 
      "--remove-network-services", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-traffic-mirror-filter-rule{
   $flags=(
      "--traffic-mirror-filter-rule-id", 
      "--traffic-direction", 
      "--rule-number", 
      "--rule-action", 
      "--destination-port-range", 
      "--source-port-range", 
      "--protocol", 
      "--destination-cidr-block", 
      "--source-cidr-block", 
      "--description", 
      "--remove-fields", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-traffic-mirror-session{
   $flags=(
      "--traffic-mirror-session-id", 
      "--traffic-mirror-target-id", 
      "--traffic-mirror-filter-id", 
      "--packet-length", 
      "--session-number", 
      "--virtual-network-id", 
      "--description", 
      "--remove-fields", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-transit-gateway-vpc-attachment{
   $flags=(
      "--transit-gateway-attachment-id", 
      "--add-subnet-ids", 
      "--remove-subnet-ids", 
      "--options", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-volume{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--volume-id", 
      "--size", 
      "--volume-type", 
      "--iops", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-volume-attribute{
   $flags=(
      "--auto-enable-io", 
      "--no-auto-enable-io", 
      "--volume-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpc-attribute{
   $flags=(
      "--enable-dns-hostnames", 
      "--no-enable-dns-hostnames", 
      "--enable-dns-support", 
      "--no-enable-dns-support", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpc-endpoint{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-endpoint-id", 
      "--reset-policy", 
      "--no-reset-policy", 
      "--policy-document", 
      "--add-route-table-ids", 
      "--remove-route-table-ids", 
      "--add-subnet-ids", 
      "--remove-subnet-ids", 
      "--add-security-group-ids", 
      "--remove-security-group-ids", 
      "--private-dns-enabled", 
      "--no-private-dns-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpc-endpoint-connection-notification{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--connection-notification-id", 
      "--connection-notification-arn", 
      "--connection-events", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpc-endpoint-service-configuration{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-id", 
      "--private-dns-name", 
      "--remove-private-dns-name", 
      "--no-remove-private-dns-name", 
      "--acceptance-required", 
      "--no-acceptance-required", 
      "--add-network-load-balancer-arns", 
      "--remove-network-load-balancer-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpc-endpoint-service-permissions{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-id", 
      "--add-allowed-principals", 
      "--remove-allowed-principals", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpc-peering-connection-options{
   $flags=(
      "--accepter-peering-connection-options", 
      "--dry-run", 
      "--no-dry-run", 
      "--requester-peering-connection-options", 
      "--vpc-peering-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpc-tenancy{
   $flags=(
      "--vpc-id", 
      "--instance-tenancy", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpn-connection{
   $flags=(
      "--vpn-connection-id", 
      "--transit-gateway-id", 
      "--customer-gateway-id", 
      "--vpn-gateway-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpn-tunnel-certificate{
   $flags=(
      "--vpn-connection-id", 
      "--vpn-tunnel-outside-ip-address", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-modify-vpn-tunnel-options{
   $flags=(
      "--vpn-connection-id", 
      "--vpn-tunnel-outside-ip-address", 
      "--tunnel-options", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-monitor-instances{
   $flags=(
      "--instance-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-move-address-to-vpc{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--public-ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-provision-byoip-cidr{
   $flags=(
      "--cidr", 
      "--cidr-authorization-context", 
      "--publicly-advertisable", 
      "--no-publicly-advertisable", 
      "--description", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-purchase-host-reservation{
   $flags=(
      "--client-token", 
      "--currency-code", 
      "--host-id-set", 
      "--limit-price", 
      "--offering-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-purchase-reserved-instances-offering{
   $flags=(
      "--instance-count", 
      "--reserved-instances-offering-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--limit-price", 
      "--purchase-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-purchase-scheduled-instances{
   $flags=(
      "--client-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--purchase-requests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reboot-instances{
   $flags=(
      "--instance-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-register-image{
   $flags=(
      "--image-location", 
      "--architecture", 
      "--block-device-mappings", 
      "--description", 
      "--dry-run", 
      "--no-dry-run", 
      "--ena-support", 
      "--no-ena-support", 
      "--kernel-id", 
      "--name", 
      "--billing-products", 
      "--ramdisk-id", 
      "--root-device-name", 
      "--sriov-net-support", 
      "--virtualization-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-register-instance-event-notification-attributes{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--instance-tag-attribute", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-register-transit-gateway-multicast-group-members{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--group-ip-address", 
      "--network-interface-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-register-transit-gateway-multicast-group-sources{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--group-ip-address", 
      "--network-interface-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reject-transit-gateway-peering-attachment{
   $flags=(
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reject-transit-gateway-vpc-attachment{
   $flags=(
      "--transit-gateway-attachment-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reject-vpc-endpoint-connections{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-id", 
      "--vpc-endpoint-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reject-vpc-peering-connection{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--vpc-peering-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-release-address{
   $flags=(
      "--allocation-id", 
      "--public-ip", 
      "--network-border-group", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-release-hosts{
   $flags=(
      "--host-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-replace-iam-instance-profile-association{
   $flags=(
      "--iam-instance-profile", 
      "--association-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-replace-network-acl-association{
   $flags=(
      "--association-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--network-acl-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-replace-network-acl-entry{
   $flags=(
      "--cidr-block", 
      "--dry-run", 
      "--no-dry-run", 
      "--egress", 
      "--ingress", 
      "--icmp-type-code", 
      "--ipv", 
      "--network-acl-id", 
      "--port-range", 
      "--protocol", 
      "--rule-action", 
      "--rule-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-replace-route{
   $flags=(
      "--destination-cidr-block", 
      "--destination-ipv", 
      "--dry-run", 
      "--no-dry-run", 
      "--egress-only-internet-gateway-id", 
      "--gateway-id", 
      "--instance-id", 
      "--local-target", 
      "--no-local-target", 
      "--nat-gateway-id", 
      "--transit-gateway-id", 
      "--local-gateway-id", 
      "--network-interface-id", 
      "--route-table-id", 
      "--vpc-peering-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-replace-route-table-association{
   $flags=(
      "--association-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--route-table-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-replace-transit-gateway-route{
   $flags=(
      "--destination-cidr-block", 
      "--transit-gateway-route-table-id", 
      "--transit-gateway-attachment-id", 
      "--blackhole", 
      "--no-blackhole", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-report-instance-status{
   $flags=(
      "--description", 
      "--dry-run", 
      "--no-dry-run", 
      "--end-time", 
      "--instances", 
      "--reason-codes", 
      "--start-time", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-request-spot-fleet{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--spot-fleet-request-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-request-spot-instances{
   $flags=(
      "--availability-zone-group", 
      "--block-duration-minutes", 
      "--client-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-count", 
      "--launch-group", 
      "--launch-specification", 
      "--spot-price", 
      "--type", 
      "--valid-from", 
      "--valid-until", 
      "--instance-interruption-behavior", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reset-ebs-default-kms-key-id{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reset-fpga-image-attribute{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--fpga-image-id", 
      "--attribute", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reset-image-attribute{
   $flags=(
      "--attribute", 
      "--image-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reset-instance-attribute{
   $flags=(
      "--attribute", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reset-network-interface-attribute{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--network-interface-id", 
      "--source-dest-check", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-reset-snapshot-attribute{
   $flags=(
      "--attribute", 
      "--snapshot-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-restore-address-to-classic{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--public-ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-revoke-client-vpn-ingress{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--target-network-cidr", 
      "--access-group-id", 
      "--revoke-all-groups", 
      "--no-revoke-all-groups", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-revoke-security-group-egress{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--group-id", 
      "--ip-permissions", 
      "--protocol", 
      "--port", 
      "--cidr", 
      "--source-group", 
      "--group-owner", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-revoke-security-group-ingress{
   $flags=(
      "--group-id", 
      "--group-name", 
      "--ip-permissions", 
      "--dry-run", 
      "--no-dry-run", 
      "--protocol", 
      "--port", 
      "--cidr", 
      "--source-group", 
      "--group-owner", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-run-instances{
   $flags=(
      "--block-device-mappings", 
      "--image-id", 
      "--instance-type", 
      "--ipv", 
      "--ipv", 
      "--kernel-id", 
      "--key-name", 
      "--monitoring", 
      "--placement", 
      "--ramdisk-id", 
      "--security-group-ids", 
      "--security-groups", 
      "--subnet-id", 
      "--user-data", 
      "--additional-info", 
      "--client-token", 
      "--disable-api-termination", 
      "--enable-api-termination", 
      "--dry-run", 
      "--no-dry-run", 
      "--ebs-optimized", 
      "--no-ebs-optimized", 
      "--iam-instance-profile", 
      "--instance-initiated-shutdown-behavior", 
      "--network-interfaces", 
      "--private-ip-address", 
      "--elastic-gpu-specification", 
      "--elastic-inference-accelerators", 
      "--tag-specifications", 
      "--launch-template", 
      "--instance-market-options", 
      "--credit-specification", 
      "--cpu-options", 
      "--capacity-reservation-specification", 
      "--hibernation-options", 
      "--license-specifications", 
      "--metadata-options", 
      "--count", 
      "--secondary-private-ip-addresses", 
      "--secondary-private-ip-address-count", 
      "--associate-public-ip-address", 
      "--no-associate-public-ip-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-run-scheduled-instances{
   $flags=(
      "--client-token", 
      "--dry-run", 
      "--no-dry-run", 
      "--instance-count", 
      "--launch-specification", 
      "--scheduled-instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-search-local-gateway-routes{
   $flags=(
      "--local-gateway-route-table-id", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-search-transit-gateway-multicast-groups{
   $flags=(
      "--transit-gateway-multicast-domain-id", 
      "--filters", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-search-transit-gateway-routes{
   $flags=(
      "--transit-gateway-route-table-id", 
      "--filters", 
      "--max-results", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-send-diagnostic-interrupt{
   $flags=(
      "--instance-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-start-instances{
   $flags=(
      "--instance-ids", 
      "--additional-info", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-start-vpc-endpoint-service-private-dns-verification{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--service-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-stop-instances{
   $flags=(
      "--instance-ids", 
      "--hibernate", 
      "--no-hibernate", 
      "--dry-run", 
      "--no-dry-run", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-terminate-client-vpn-connections{
   $flags=(
      "--client-vpn-endpoint-id", 
      "--connection-id", 
      "--username", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-terminate-instances{
   $flags=(
      "--instance-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-unassign-ipv6-addresses{
   $flags=(
      "--ipv", 
      "--network-interface-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-unassign-private-ip-addresses{
   $flags=(
      "--network-interface-id", 
      "--private-ip-addresses", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-unmonitor-instances{
   $flags=(
      "--instance-ids", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-update-security-group-rule-descriptions-egress{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--group-id", 
      "--group-name", 
      "--ip-permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-update-security-group-rule-descriptions-ingress{
   $flags=(
      "--dry-run", 
      "--no-dry-run", 
      "--group-id", 
      "--group-name", 
      "--ip-permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-wait{
   $flags=("");
   return $flags;
}
function Get-ec2-withdraw-byoip-cidr{
   $flags=(
      "--cidr", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ec2-instance-connect{
   $commands=(
      "send-ssh-public-key"
    );
   return $commands;
}
function Get-ec2-instance-connect-send-ssh-public-key{
   $flags=(
      "--instance-id", 
      "--instance-os-user", 
      "--ssh-public-key", 
      "--availability-zone", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr{
   $commands=(
      "batch-check-layer-availability", 
      "batch-delete-image", 
      "batch-get-image", 
      "complete-layer-upload", 
      "create-repository", 
      "delete-lifecycle-policy", 
      "delete-repository", 
      "delete-repository-policy", 
      "describe-image-scan-findings", 
      "describe-images", 
      "describe-repositories", 
      "get-authorization-token", 
      "get-download-url-for-layer", 
      "get-lifecycle-policy", 
      "get-lifecycle-policy-preview", 
      "get-login", 
      "get-login-password", 
      "get-repository-policy", 
      "initiate-layer-upload", 
      "list-images", 
      "list-tags-for-resource", 
      "put-image", 
      "put-image-scanning-configuration", 
      "put-image-tag-mutability", 
      "put-lifecycle-policy", 
      "set-repository-policy", 
      "start-image-scan", 
      "start-lifecycle-policy-preview", 
      "tag-resource", 
      "untag-resource", 
      "upload-layer-part", 
      "wait"
    );
   return $commands;
}
function Get-ecr-batch-check-layer-availability{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--layer-digests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-batch-delete-image{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-batch-get-image{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-ids", 
      "--accepted-media-types", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-complete-layer-upload{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--upload-id", 
      "--layer-digests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-create-repository{
   $flags=(
      "--repository-name", 
      "--tags", 
      "--image-tag-mutability", 
      "--image-scanning-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-delete-lifecycle-policy{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-delete-repository{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-delete-repository-policy{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-describe-image-scan-findings{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-describe-images{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-ids", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-describe-repositories{
   $flags=(
      "--registry-id", 
      "--repository-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-get-authorization-token{
   $flags=(
      "--registry-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-get-download-url-for-layer{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--layer-digest", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-get-lifecycle-policy{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-get-lifecycle-policy-preview{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-ids", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-get-login{
   $flags=(
      "--registry-ids", 
      "--include-email", 
      "--no-include-email"
    );
   return $flags;
}
function Get-ecr-get-login-password{
   $flags=("");
   return $flags;
}
function Get-ecr-get-repository-policy{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-initiate-layer-upload{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-list-images{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-put-image{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-manifest", 
      "--image-tag", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-put-image-scanning-configuration{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-scanning-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-put-image-tag-mutability{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-tag-mutability", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-put-lifecycle-policy{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--lifecycle-policy-text", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-set-repository-policy{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--policy-text", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-start-image-scan{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--image-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-start-lifecycle-policy-preview{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--lifecycle-policy-text", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-upload-layer-part{
   $flags=(
      "--registry-id", 
      "--repository-name", 
      "--upload-id", 
      "--part-first-byte", 
      "--part-last-byte", 
      "--layer-part-blob", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecr-wait{
   $flags=("");
   return $flags;
}
function Get-ecs{
   $commands=(
      "create-capacity-provider", 
      "create-cluster", 
      "create-service", 
      "create-task-set", 
      "delete-account-setting", 
      "delete-attributes", 
      "delete-cluster", 
      "delete-service", 
      "delete-task-set", 
      "deploy", 
      "deregister-container-instance", 
      "deregister-task-definition", 
      "describe-capacity-providers", 
      "describe-clusters", 
      "describe-container-instances", 
      "describe-services", 
      "describe-task-definition", 
      "describe-task-sets", 
      "describe-tasks", 
      "discover-poll-endpoint", 
      "list-account-settings", 
      "list-attributes", 
      "list-clusters", 
      "list-container-instances", 
      "list-services", 
      "list-tags-for-resource", 
      "list-task-definition-families", 
      "list-task-definitions", 
      "list-tasks", 
      "put-account-setting", 
      "put-account-setting-default", 
      "put-attributes", 
      "put-cluster-capacity-providers", 
      "register-container-instance", 
      "register-task-definition", 
      "run-task", 
      "start-task", 
      "stop-task", 
      "submit-attachment-state-changes", 
      "submit-container-state-change", 
      "submit-task-state-change", 
      "tag-resource", 
      "untag-resource", 
      "update-cluster-settings", 
      "update-container-agent", 
      "update-container-instances-state", 
      "update-service", 
      "update-service-primary-task-set", 
      "update-task-set", 
      "wait"
    );
   return $commands;
}
function Get-ecs-create-capacity-provider{
   $flags=(
      "--name", 
      "--auto-scaling-group-provider", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-create-cluster{
   $flags=(
      "--cluster-name", 
      "--tags", 
      "--settings", 
      "--capacity-providers", 
      "--default-capacity-provider-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-create-service{
   $flags=(
      "--cluster", 
      "--service-name", 
      "--task-definition", 
      "--load-balancers", 
      "--service-registries", 
      "--desired-count", 
      "--client-token", 
      "--launch-type", 
      "--capacity-provider-strategy", 
      "--platform-version", 
      "--role", 
      "--deployment-configuration", 
      "--placement-constraints", 
      "--placement-strategy", 
      "--network-configuration", 
      "--health-check-grace-period-seconds", 
      "--scheduling-strategy", 
      "--deployment-controller", 
      "--tags", 
      "--enable-ecs-managed-tags", 
      "--no-enable-ecs-managed-tags", 
      "--propagate-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-create-task-set{
   $flags=(
      "--service", 
      "--cluster", 
      "--external-id", 
      "--task-definition", 
      "--network-configuration", 
      "--load-balancers", 
      "--service-registries", 
      "--launch-type", 
      "--capacity-provider-strategy", 
      "--platform-version", 
      "--scale", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-delete-account-setting{
   $flags=(
      "--name", 
      "--principal-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-delete-attributes{
   $flags=(
      "--cluster", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-delete-cluster{
   $flags=(
      "--cluster", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-delete-service{
   $flags=(
      "--cluster", 
      "--service", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-delete-task-set{
   $flags=(
      "--cluster", 
      "--service", 
      "--task-set", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-deploy{
   $flags=(
      "--service", 
      "--task-definition", 
      "--codedeploy-appspec", 
      "--cluster", 
      "--codedeploy-application", 
      "--codedeploy-deployment-group"
    );
   return $flags;
}
function Get-ecs-deregister-container-instance{
   $flags=(
      "--cluster", 
      "--container-instance", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-deregister-task-definition{
   $flags=(
      "--task-definition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-describe-capacity-providers{
   $flags=(
      "--capacity-providers", 
      "--include", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-describe-clusters{
   $flags=(
      "--clusters", 
      "--include", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-describe-container-instances{
   $flags=(
      "--cluster", 
      "--container-instances", 
      "--include", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-describe-services{
   $flags=(
      "--cluster", 
      "--services", 
      "--include", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-describe-task-definition{
   $flags=(
      "--task-definition", 
      "--include", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-describe-task-sets{
   $flags=(
      "--cluster", 
      "--service", 
      "--task-sets", 
      "--include", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-describe-tasks{
   $flags=(
      "--cluster", 
      "--tasks", 
      "--include", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-discover-poll-endpoint{
   $flags=(
      "--container-instance", 
      "--cluster", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-account-settings{
   $flags=(
      "--name", 
      "--value", 
      "--principal-arn", 
      "--effective-settings", 
      "--no-effective-settings", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-attributes{
   $flags=(
      "--cluster", 
      "--target-type", 
      "--attribute-name", 
      "--attribute-value", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-clusters{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-container-instances{
   $flags=(
      "--cluster", 
      "--filter", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-services{
   $flags=(
      "--cluster", 
      "--launch-type", 
      "--scheduling-strategy", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-task-definition-families{
   $flags=(
      "--family-prefix", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-task-definitions{
   $flags=(
      "--family-prefix", 
      "--status", 
      "--sort", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-list-tasks{
   $flags=(
      "--cluster", 
      "--container-instance", 
      "--family", 
      "--started-by", 
      "--service-name", 
      "--desired-status", 
      "--launch-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-put-account-setting{
   $flags=(
      "--name", 
      "--value", 
      "--principal-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-put-account-setting-default{
   $flags=(
      "--name", 
      "--value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-put-attributes{
   $flags=(
      "--cluster", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-put-cluster-capacity-providers{
   $flags=(
      "--cluster", 
      "--capacity-providers", 
      "--default-capacity-provider-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-register-container-instance{
   $flags=(
      "--cluster", 
      "--instance-identity-document", 
      "--instance-identity-document-signature", 
      "--total-resources", 
      "--version-info", 
      "--container-instance-arn", 
      "--attributes", 
      "--platform-devices", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-register-task-definition{
   $flags=(
      "--family", 
      "--task-role-arn", 
      "--execution-role-arn", 
      "--network-mode", 
      "--container-definitions", 
      "--volumes", 
      "--placement-constraints", 
      "--requires-compatibilities", 
      "--cpu", 
      "--memory", 
      "--tags", 
      "--pid-mode", 
      "--ipc-mode", 
      "--proxy-configuration", 
      "--inference-accelerators", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-run-task{
   $flags=(
      "--capacity-provider-strategy", 
      "--cluster", 
      "--count", 
      "--enable-ecs-managed-tags", 
      "--no-enable-ecs-managed-tags", 
      "--group", 
      "--launch-type", 
      "--network-configuration", 
      "--overrides", 
      "--placement-constraints", 
      "--placement-strategy", 
      "--platform-version", 
      "--propagate-tags", 
      "--reference-id", 
      "--started-by", 
      "--tags", 
      "--task-definition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-start-task{
   $flags=(
      "--cluster", 
      "--container-instances", 
      "--enable-ecs-managed-tags", 
      "--no-enable-ecs-managed-tags", 
      "--group", 
      "--network-configuration", 
      "--overrides", 
      "--propagate-tags", 
      "--reference-id", 
      "--started-by", 
      "--tags", 
      "--task-definition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-stop-task{
   $flags=(
      "--cluster", 
      "--task", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-submit-attachment-state-changes{
   $flags=(
      "--cluster", 
      "--attachments", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-submit-container-state-change{
   $flags=(
      "--cluster", 
      "--task", 
      "--container-name", 
      "--runtime-id", 
      "--status", 
      "--exit-code", 
      "--reason", 
      "--network-bindings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-submit-task-state-change{
   $flags=(
      "--cluster", 
      "--task", 
      "--status", 
      "--reason", 
      "--containers", 
      "--attachments", 
      "--pull-started-at", 
      "--pull-stopped-at", 
      "--execution-stopped-at", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-update-cluster-settings{
   $flags=(
      "--cluster", 
      "--settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-update-container-agent{
   $flags=(
      "--cluster", 
      "--container-instance", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-update-container-instances-state{
   $flags=(
      "--cluster", 
      "--container-instances", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-update-service{
   $flags=(
      "--cluster", 
      "--service", 
      "--desired-count", 
      "--task-definition", 
      "--capacity-provider-strategy", 
      "--deployment-configuration", 
      "--network-configuration", 
      "--placement-constraints", 
      "--placement-strategy", 
      "--platform-version", 
      "--force-new-deployment", 
      "--no-force-new-deployment", 
      "--health-check-grace-period-seconds", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-update-service-primary-task-set{
   $flags=(
      "--cluster", 
      "--service", 
      "--primary-task-set", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-update-task-set{
   $flags=(
      "--cluster", 
      "--service", 
      "--task-set", 
      "--scale", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ecs-wait{
   $flags=("");
   return $flags;
}
function Get-efs{
   $commands=(
      "create-access-point", 
      "create-file-system", 
      "create-mount-target", 
      "delete-access-point", 
      "delete-file-system", 
      "delete-file-system-policy", 
      "delete-mount-target", 
      "describe-access-points", 
      "describe-file-system-policy", 
      "describe-file-systems", 
      "describe-lifecycle-configuration", 
      "describe-mount-target-security-groups", 
      "describe-mount-targets", 
      "list-tags-for-resource", 
      "modify-mount-target-security-groups", 
      "put-file-system-policy", 
      "put-lifecycle-configuration", 
      "tag-resource", 
      "untag-resource", 
      "update-file-system"
    );
   return $commands;
}
function Get-efs-create-access-point{
   $flags=(
      "--client-token", 
      "--tags", 
      "--file-system-id", 
      "--posix-user", 
      "--root-directory", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-create-file-system{
   $flags=(
      "--creation-token", 
      "--performance-mode", 
      "--encrypted", 
      "--no-encrypted", 
      "--kms-key-id", 
      "--throughput-mode", 
      "--provisioned-throughput-in-mibps", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-create-mount-target{
   $flags=(
      "--file-system-id", 
      "--subnet-id", 
      "--ip-address", 
      "--security-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-delete-access-point{
   $flags=(
      "--access-point-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-delete-file-system{
   $flags=(
      "--file-system-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-delete-file-system-policy{
   $flags=(
      "--file-system-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-delete-mount-target{
   $flags=(
      "--mount-target-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-describe-access-points{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--access-point-id", 
      "--file-system-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-describe-file-system-policy{
   $flags=(
      "--file-system-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-describe-file-systems{
   $flags=(
      "--max-items", 
      "--creation-token", 
      "--file-system-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-describe-lifecycle-configuration{
   $flags=(
      "--file-system-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-describe-mount-target-security-groups{
   $flags=(
      "--mount-target-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-describe-mount-targets{
   $flags=(
      "--max-items", 
      "--file-system-id", 
      "--mount-target-id", 
      "--access-point-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-list-tags-for-resource{
   $flags=(
      "--resource-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-modify-mount-target-security-groups{
   $flags=(
      "--mount-target-id", 
      "--security-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-put-file-system-policy{
   $flags=(
      "--file-system-id", 
      "--policy", 
      "--bypass-policy-lockout-safety-check", 
      "--no-bypass-policy-lockout-safety-check", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-put-lifecycle-configuration{
   $flags=(
      "--file-system-id", 
      "--lifecycle-policies", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-tag-resource{
   $flags=(
      "--resource-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-untag-resource{
   $flags=(
      "--resource-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-efs-update-file-system{
   $flags=(
      "--file-system-id", 
      "--throughput-mode", 
      "--provisioned-throughput-in-mibps", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks{
   $commands=(
      "create-cluster", 
      "create-fargate-profile", 
      "create-nodegroup", 
      "delete-cluster", 
      "delete-fargate-profile", 
      "delete-nodegroup", 
      "describe-cluster", 
      "describe-fargate-profile", 
      "describe-nodegroup", 
      "describe-update", 
      "get-token", 
      "list-clusters", 
      "list-fargate-profiles", 
      "list-nodegroups", 
      "list-tags-for-resource", 
      "list-updates", 
      "tag-resource", 
      "untag-resource", 
      "update-cluster-config", 
      "update-cluster-version", 
      "update-kubeconfig", 
      "update-nodegroup-config", 
      "update-nodegroup-version", 
      "wait"
    );
   return $commands;
}
function Get-eks-create-cluster{
   $flags=(
      "--name", 
      "--role-arn", 
      "--resources-vpc-config", 
      "--logging", 
      "--client-request-token", 
      "--tags", 
      "--encryption-config", 
      "--kubernetes-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-create-fargate-profile{
   $flags=(
      "--fargate-profile-name", 
      "--cluster-name", 
      "--pod-execution-role-arn", 
      "--subnets", 
      "--selectors", 
      "--client-request-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-create-nodegroup{
   $flags=(
      "--cluster-name", 
      "--nodegroup-name", 
      "--scaling-config", 
      "--disk-size", 
      "--subnets", 
      "--instance-types", 
      "--ami-type", 
      "--remote-access", 
      "--node-role", 
      "--labels", 
      "--tags", 
      "--client-request-token", 
      "--release-version", 
      "--kubernetes-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-delete-cluster{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-delete-fargate-profile{
   $flags=(
      "--cluster-name", 
      "--fargate-profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-delete-nodegroup{
   $flags=(
      "--cluster-name", 
      "--nodegroup-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-describe-cluster{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-describe-fargate-profile{
   $flags=(
      "--cluster-name", 
      "--fargate-profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-describe-nodegroup{
   $flags=(
      "--cluster-name", 
      "--nodegroup-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-describe-update{
   $flags=(
      "--name", 
      "--update-id", 
      "--nodegroup-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-get-token{
   $flags=(
      "--cluster-name", 
      "--role-arn"
    );
   return $flags;
}
function Get-eks-list-clusters{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-list-fargate-profiles{
   $flags=(
      "--cluster-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-list-nodegroups{
   $flags=(
      "--cluster-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-list-updates{
   $flags=(
      "--name", 
      "--nodegroup-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-update-cluster-config{
   $flags=(
      "--name", 
      "--resources-vpc-config", 
      "--logging", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-update-cluster-version{
   $flags=(
      "--name", 
      "--client-request-token", 
      "--kubernetes-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-update-kubeconfig{
   $flags=(
      "--name", 
      "--kubeconfig", 
      "--role-arn", 
      "--dry-run", 
      "--verbose", 
      "--alias"
    );
   return $flags;
}
function Get-eks-update-nodegroup-config{
   $flags=(
      "--cluster-name", 
      "--nodegroup-name", 
      "--labels", 
      "--scaling-config", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-update-nodegroup-version{
   $flags=(
      "--cluster-name", 
      "--nodegroup-name", 
      "--release-version", 
      "--force", 
      "--no-force", 
      "--client-request-token", 
      "--kubernetes-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-eks-wait{
   $flags=(
      "--name"
    );
   return $flags;
}
function Get-elastic-inference{
   $commands=(
      "describe-accelerator-offerings", 
      "describe-accelerator-types", 
      "describe-accelerators", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-elastic-inference-describe-accelerator-offerings{
   $flags=(
      "--location-type", 
      "--accelerator-types", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastic-inference-describe-accelerator-types{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastic-inference-describe-accelerators{
   $flags=(
      "--accelerator-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastic-inference-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastic-inference-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastic-inference-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache{
   $commands=(
      "add-tags-to-resource", 
      "authorize-cache-security-group-ingress", 
      "batch-apply-update-action", 
      "batch-stop-update-action", 
      "complete-migration", 
      "copy-snapshot", 
      "create-cache-cluster", 
      "create-cache-parameter-group", 
      "create-cache-security-group", 
      "create-cache-subnet-group", 
      "create-global-replication-group", 
      "create-replication-group", 
      "create-snapshot", 
      "decrease-node-groups-in-global-replication-group", 
      "decrease-replica-count", 
      "delete-cache-cluster", 
      "delete-cache-parameter-group", 
      "delete-cache-security-group", 
      "delete-cache-subnet-group", 
      "delete-global-replication-group", 
      "delete-replication-group", 
      "delete-snapshot", 
      "describe-cache-clusters", 
      "describe-cache-engine-versions", 
      "describe-cache-parameter-groups", 
      "describe-cache-parameters", 
      "describe-cache-security-groups", 
      "describe-cache-subnet-groups", 
      "describe-engine-default-parameters", 
      "describe-events", 
      "describe-global-replication-groups", 
      "describe-replication-groups", 
      "describe-reserved-cache-nodes", 
      "describe-reserved-cache-nodes-offerings", 
      "describe-service-updates", 
      "describe-snapshots", 
      "describe-update-actions", 
      "disassociate-global-replication-group", 
      "failover-global-replication-group", 
      "increase-node-groups-in-global-replication-group", 
      "increase-replica-count", 
      "list-allowed-node-type-modifications", 
      "list-tags-for-resource", 
      "modify-cache-cluster", 
      "modify-cache-parameter-group", 
      "modify-cache-subnet-group", 
      "modify-global-replication-group", 
      "modify-replication-group", 
      "modify-replication-group-shard-configuration", 
      "purchase-reserved-cache-nodes-offering", 
      "rebalance-slots-in-global-replication-group", 
      "reboot-cache-cluster", 
      "remove-tags-from-resource", 
      "reset-cache-parameter-group", 
      "revoke-cache-security-group-ingress", 
      "start-migration", 
      "test-failover", 
      "wait"
    );
   return $commands;
}
function Get-elasticache-add-tags-to-resource{
   $flags=(
      "--resource-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-authorize-cache-security-group-ingress{
   $flags=(
      "--cache-security-group-name", 
      "--ec", 
      "--ec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-batch-apply-update-action{
   $flags=(
      "--replication-group-ids", 
      "--cache-cluster-ids", 
      "--service-update-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-batch-stop-update-action{
   $flags=(
      "--replication-group-ids", 
      "--cache-cluster-ids", 
      "--service-update-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-complete-migration{
   $flags=(
      "--replication-group-id", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-copy-snapshot{
   $flags=(
      "--source-snapshot-name", 
      "--target-snapshot-name", 
      "--target-bucket", 
      "--kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-create-cache-cluster{
   $flags=(
      "--cache-cluster-id", 
      "--replication-group-id", 
      "--az-mode", 
      "--preferred-availability-zone", 
      "--preferred-availability-zones", 
      "--num-cache-nodes", 
      "--cache-node-type", 
      "--engine", 
      "--engine-version", 
      "--cache-parameter-group-name", 
      "--cache-subnet-group-name", 
      "--cache-security-group-names", 
      "--security-group-ids", 
      "--tags", 
      "--snapshot-arns", 
      "--snapshot-name", 
      "--preferred-maintenance-window", 
      "--port", 
      "--notification-topic-arn", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--snapshot-retention-limit", 
      "--snapshot-window", 
      "--auth-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-create-cache-parameter-group{
   $flags=(
      "--cache-parameter-group-name", 
      "--cache-parameter-group-family", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-create-cache-security-group{
   $flags=(
      "--cache-security-group-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-create-cache-subnet-group{
   $flags=(
      "--cache-subnet-group-name", 
      "--cache-subnet-group-description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-create-global-replication-group{
   $flags=(
      "--global-replication-group-id-suffix", 
      "--global-replication-group-description", 
      "--primary-replication-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-create-replication-group{
   $flags=(
      "--replication-group-id", 
      "--replication-group-description", 
      "--global-replication-group-id", 
      "--primary-cluster-id", 
      "--automatic-failover-enabled", 
      "--no-automatic-failover-enabled", 
      "--num-cache-clusters", 
      "--preferred-cache-cluster-a-zs", 
      "--num-node-groups", 
      "--replicas-per-node-group", 
      "--node-group-configuration", 
      "--cache-node-type", 
      "--engine", 
      "--engine-version", 
      "--cache-parameter-group-name", 
      "--cache-subnet-group-name", 
      "--cache-security-group-names", 
      "--security-group-ids", 
      "--tags", 
      "--snapshot-arns", 
      "--snapshot-name", 
      "--preferred-maintenance-window", 
      "--port", 
      "--notification-topic-arn", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--snapshot-retention-limit", 
      "--snapshot-window", 
      "--auth-token", 
      "--transit-encryption-enabled", 
      "--no-transit-encryption-enabled", 
      "--at-rest-encryption-enabled", 
      "--no-at-rest-encryption-enabled", 
      "--kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-create-snapshot{
   $flags=(
      "--replication-group-id", 
      "--cache-cluster-id", 
      "--snapshot-name", 
      "--kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-decrease-node-groups-in-global-replication-group{
   $flags=(
      "--global-replication-group-id", 
      "--node-group-count", 
      "--global-node-groups-to-remove", 
      "--global-node-groups-to-retain", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-decrease-replica-count{
   $flags=(
      "--replication-group-id", 
      "--new-replica-count", 
      "--replica-configuration", 
      "--replicas-to-remove", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-delete-cache-cluster{
   $flags=(
      "--cache-cluster-id", 
      "--final-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-delete-cache-parameter-group{
   $flags=(
      "--cache-parameter-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-delete-cache-security-group{
   $flags=(
      "--cache-security-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-delete-cache-subnet-group{
   $flags=(
      "--cache-subnet-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-delete-global-replication-group{
   $flags=(
      "--global-replication-group-id", 
      "--retain-primary-replication-group", 
      "--no-retain-primary-replication-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-delete-replication-group{
   $flags=(
      "--replication-group-id", 
      "--retain-primary-cluster", 
      "--no-retain-primary-cluster", 
      "--final-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-delete-snapshot{
   $flags=(
      "--snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-cache-clusters{
   $flags=(
      "--cache-cluster-id", 
      "--show-cache-node-info", 
      "--no-show-cache-node-info", 
      "--show-cache-clusters-not-in-replication-groups", 
      "--no-show-cache-clusters-not-in-replication-groups", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-cache-engine-versions{
   $flags=(
      "--engine", 
      "--engine-version", 
      "--cache-parameter-group-family", 
      "--default-only", 
      "--no-default-only", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-cache-parameter-groups{
   $flags=(
      "--cache-parameter-group-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-cache-parameters{
   $flags=(
      "--cache-parameter-group-name", 
      "--source", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-cache-security-groups{
   $flags=(
      "--cache-security-group-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-cache-subnet-groups{
   $flags=(
      "--cache-subnet-group-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-engine-default-parameters{
   $flags=(
      "--cache-parameter-group-family", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-events{
   $flags=(
      "--source-identifier", 
      "--source-type", 
      "--start-time", 
      "--end-time", 
      "--duration", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-global-replication-groups{
   $flags=(
      "--global-replication-group-id", 
      "--show-member-info", 
      "--no-show-member-info", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-replication-groups{
   $flags=(
      "--replication-group-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-reserved-cache-nodes{
   $flags=(
      "--reserved-cache-node-id", 
      "--reserved-cache-nodes-offering-id", 
      "--cache-node-type", 
      "--duration", 
      "--product-description", 
      "--offering-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-reserved-cache-nodes-offerings{
   $flags=(
      "--reserved-cache-nodes-offering-id", 
      "--cache-node-type", 
      "--duration", 
      "--product-description", 
      "--offering-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-service-updates{
   $flags=(
      "--service-update-name", 
      "--service-update-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-snapshots{
   $flags=(
      "--replication-group-id", 
      "--cache-cluster-id", 
      "--snapshot-name", 
      "--snapshot-source", 
      "--show-node-group-config", 
      "--no-show-node-group-config", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-describe-update-actions{
   $flags=(
      "--service-update-name", 
      "--replication-group-ids", 
      "--cache-cluster-ids", 
      "--engine", 
      "--service-update-status", 
      "--service-update-time-range", 
      "--update-action-status", 
      "--show-node-level-update-status", 
      "--no-show-node-level-update-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-disassociate-global-replication-group{
   $flags=(
      "--global-replication-group-id", 
      "--replication-group-id", 
      "--replication-group-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-failover-global-replication-group{
   $flags=(
      "--global-replication-group-id", 
      "--primary-region", 
      "--primary-replication-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-increase-node-groups-in-global-replication-group{
   $flags=(
      "--global-replication-group-id", 
      "--node-group-count", 
      "--regional-configurations", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-increase-replica-count{
   $flags=(
      "--replication-group-id", 
      "--new-replica-count", 
      "--replica-configuration", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-list-allowed-node-type-modifications{
   $flags=(
      "--cache-cluster-id", 
      "--replication-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-list-tags-for-resource{
   $flags=(
      "--resource-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-modify-cache-cluster{
   $flags=(
      "--cache-cluster-id", 
      "--num-cache-nodes", 
      "--cache-node-ids-to-remove", 
      "--az-mode", 
      "--new-availability-zones", 
      "--cache-security-group-names", 
      "--security-group-ids", 
      "--preferred-maintenance-window", 
      "--notification-topic-arn", 
      "--cache-parameter-group-name", 
      "--notification-topic-status", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--engine-version", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--snapshot-retention-limit", 
      "--snapshot-window", 
      "--cache-node-type", 
      "--auth-token", 
      "--auth-token-update-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-modify-cache-parameter-group{
   $flags=(
      "--cache-parameter-group-name", 
      "--parameter-name-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-modify-cache-subnet-group{
   $flags=(
      "--cache-subnet-group-name", 
      "--cache-subnet-group-description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-modify-global-replication-group{
   $flags=(
      "--global-replication-group-id", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--cache-node-type", 
      "--engine-version", 
      "--global-replication-group-description", 
      "--automatic-failover-enabled", 
      "--no-automatic-failover-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-modify-replication-group{
   $flags=(
      "--replication-group-id", 
      "--replication-group-description", 
      "--primary-cluster-id", 
      "--snapshotting-cluster-id", 
      "--automatic-failover-enabled", 
      "--no-automatic-failover-enabled", 
      "--node-group-id", 
      "--cache-security-group-names", 
      "--security-group-ids", 
      "--preferred-maintenance-window", 
      "--notification-topic-arn", 
      "--cache-parameter-group-name", 
      "--notification-topic-status", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--engine-version", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--snapshot-retention-limit", 
      "--snapshot-window", 
      "--cache-node-type", 
      "--auth-token", 
      "--auth-token-update-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-modify-replication-group-shard-configuration{
   $flags=(
      "--replication-group-id", 
      "--node-group-count", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--resharding-configuration", 
      "--node-groups-to-remove", 
      "--node-groups-to-retain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-purchase-reserved-cache-nodes-offering{
   $flags=(
      "--reserved-cache-nodes-offering-id", 
      "--reserved-cache-node-id", 
      "--cache-node-count", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-rebalance-slots-in-global-replication-group{
   $flags=(
      "--global-replication-group-id", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-reboot-cache-cluster{
   $flags=(
      "--cache-cluster-id", 
      "--cache-node-ids-to-reboot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-remove-tags-from-resource{
   $flags=(
      "--resource-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-reset-cache-parameter-group{
   $flags=(
      "--cache-parameter-group-name", 
      "--reset-all-parameters", 
      "--no-reset-all-parameters", 
      "--parameter-name-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-revoke-cache-security-group-ingress{
   $flags=(
      "--cache-security-group-name", 
      "--ec", 
      "--ec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-start-migration{
   $flags=(
      "--replication-group-id", 
      "--customer-node-endpoint-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-test-failover{
   $flags=(
      "--replication-group-id", 
      "--node-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticache-wait{
   $flags=("");
   return $flags;
}
function Get-elasticbeanstalk{
   $commands=(
      "abort-environment-update", 
      "apply-environment-managed-action", 
      "check-dns-availability", 
      "compose-environments", 
      "create-application", 
      "create-application-version", 
      "create-configuration-template", 
      "create-environment", 
      "create-platform-version", 
      "create-storage-location", 
      "delete-application", 
      "delete-application-version", 
      "delete-configuration-template", 
      "delete-environment-configuration", 
      "delete-platform-version", 
      "describe-account-attributes", 
      "describe-application-versions", 
      "describe-applications", 
      "describe-configuration-options", 
      "describe-configuration-settings", 
      "describe-environment-health", 
      "describe-environment-managed-action-history", 
      "describe-environment-managed-actions", 
      "describe-environment-resources", 
      "describe-environments", 
      "describe-events", 
      "describe-instances-health", 
      "describe-platform-version", 
      "list-available-solution-stacks", 
      "list-platform-branches", 
      "list-platform-versions", 
      "list-tags-for-resource", 
      "rebuild-environment", 
      "request-environment-info", 
      "restart-app-server", 
      "retrieve-environment-info", 
      "swap-environment-cnames", 
      "terminate-environment", 
      "update-application", 
      "update-application-resource-lifecycle", 
      "update-application-version", 
      "update-configuration-template", 
      "update-environment", 
      "update-tags-for-resource", 
      "validate-configuration-settings"
    );
   return $commands;
}
function Get-elasticbeanstalk-abort-environment-update{
   $flags=(
      "--environment-id", 
      "--environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-apply-environment-managed-action{
   $flags=(
      "--environment-name", 
      "--environment-id", 
      "--action-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-check-dns-availability{
   $flags=(
      "--cname-prefix", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-compose-environments{
   $flags=(
      "--application-name", 
      "--group-name", 
      "--version-labels", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-create-application{
   $flags=(
      "--application-name", 
      "--description", 
      "--resource-lifecycle-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-create-application-version{
   $flags=(
      "--application-name", 
      "--version-label", 
      "--description", 
      "--source-build-information", 
      "--source-bundle", 
      "--build-configuration", 
      "--auto-create-application", 
      "--no-auto-create-application", 
      "--process", 
      "--no-process", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-create-configuration-template{
   $flags=(
      "--application-name", 
      "--template-name", 
      "--solution-stack-name", 
      "--platform-arn", 
      "--source-configuration", 
      "--environment-id", 
      "--description", 
      "--option-settings", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-create-environment{
   $flags=(
      "--application-name", 
      "--environment-name", 
      "--group-name", 
      "--description", 
      "--cname-prefix", 
      "--tier", 
      "--tags", 
      "--version-label", 
      "--template-name", 
      "--solution-stack-name", 
      "--platform-arn", 
      "--option-settings", 
      "--options-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-create-platform-version{
   $flags=(
      "--platform-name", 
      "--platform-version", 
      "--platform-definition-bundle", 
      "--environment-name", 
      "--option-settings", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-create-storage-location{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-delete-application{
   $flags=(
      "--application-name", 
      "--terminate-env-by-force", 
      "--no-terminate-env-by-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-delete-application-version{
   $flags=(
      "--application-name", 
      "--version-label", 
      "--delete-source-bundle", 
      "--no-delete-source-bundle", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-delete-configuration-template{
   $flags=(
      "--application-name", 
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-delete-environment-configuration{
   $flags=(
      "--application-name", 
      "--environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-delete-platform-version{
   $flags=(
      "--platform-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-account-attributes{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-application-versions{
   $flags=(
      "--application-name", 
      "--version-labels", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-applications{
   $flags=(
      "--application-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-configuration-options{
   $flags=(
      "--application-name", 
      "--template-name", 
      "--environment-name", 
      "--solution-stack-name", 
      "--platform-arn", 
      "--options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-configuration-settings{
   $flags=(
      "--application-name", 
      "--template-name", 
      "--environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-environment-health{
   $flags=(
      "--environment-name", 
      "--environment-id", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-environment-managed-action-history{
   $flags=(
      "--environment-id", 
      "--environment-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-environment-managed-actions{
   $flags=(
      "--environment-name", 
      "--environment-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-environment-resources{
   $flags=(
      "--environment-id", 
      "--environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-environments{
   $flags=(
      "--application-name", 
      "--version-label", 
      "--environment-ids", 
      "--environment-names", 
      "--include-deleted", 
      "--no-include-deleted", 
      "--included-deleted-back-to", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-events{
   $flags=(
      "--application-name", 
      "--version-label", 
      "--template-name", 
      "--environment-id", 
      "--environment-name", 
      "--platform-arn", 
      "--request-id", 
      "--severity", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-instances-health{
   $flags=(
      "--environment-name", 
      "--environment-id", 
      "--attribute-names", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-describe-platform-version{
   $flags=(
      "--platform-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-list-available-solution-stacks{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-list-platform-branches{
   $flags=(
      "--filters", 
      "--max-records", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-list-platform-versions{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-rebuild-environment{
   $flags=(
      "--environment-id", 
      "--environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-request-environment-info{
   $flags=(
      "--environment-id", 
      "--environment-name", 
      "--info-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-restart-app-server{
   $flags=(
      "--environment-id", 
      "--environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-retrieve-environment-info{
   $flags=(
      "--environment-id", 
      "--environment-name", 
      "--info-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-swap-environment-cnames{
   $flags=(
      "--source-environment-id", 
      "--source-environment-name", 
      "--destination-environment-id", 
      "--destination-environment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-terminate-environment{
   $flags=(
      "--environment-id", 
      "--environment-name", 
      "--terminate-resources", 
      "--no-terminate-resources", 
      "--force-terminate", 
      "--no-force-terminate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-update-application{
   $flags=(
      "--application-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-update-application-resource-lifecycle{
   $flags=(
      "--application-name", 
      "--resource-lifecycle-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-update-application-version{
   $flags=(
      "--application-name", 
      "--version-label", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-update-configuration-template{
   $flags=(
      "--application-name", 
      "--template-name", 
      "--description", 
      "--option-settings", 
      "--options-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-update-environment{
   $flags=(
      "--application-name", 
      "--environment-id", 
      "--environment-name", 
      "--group-name", 
      "--description", 
      "--tier", 
      "--version-label", 
      "--template-name", 
      "--solution-stack-name", 
      "--platform-arn", 
      "--option-settings", 
      "--options-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-update-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--tags-to-add", 
      "--tags-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elasticbeanstalk-validate-configuration-settings{
   $flags=(
      "--application-name", 
      "--template-name", 
      "--environment-name", 
      "--option-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder{
   $commands=(
      "cancel-job", 
      "create-job", 
      "create-pipeline", 
      "create-preset", 
      "delete-pipeline", 
      "delete-preset", 
      "list-jobs-by-pipeline", 
      "list-jobs-by-status", 
      "list-pipelines", 
      "list-presets", 
      "read-job", 
      "read-pipeline", 
      "read-preset", 
      "update-pipeline", 
      "update-pipeline-notifications", 
      "update-pipeline-status", 
      "wait"
    );
   return $commands;
}
function Get-elastictranscoder-cancel-job{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-create-job{
   $flags=(
      "--pipeline-id", 
      "--input", 
      "--inputs", 
      "--outputs", 
      "--output-key-prefix", 
      "--playlists", 
      "--user-metadata", 
      "--job-output", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-create-pipeline{
   $flags=(
      "--name", 
      "--input-bucket", 
      "--output-bucket", 
      "--role", 
      "--aws-kms-key-arn", 
      "--notifications", 
      "--content-config", 
      "--thumbnail-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-create-preset{
   $flags=(
      "--name", 
      "--description", 
      "--container", 
      "--video", 
      "--audio", 
      "--thumbnails", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-delete-pipeline{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-delete-preset{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-list-jobs-by-pipeline{
   $flags=(
      "--pipeline-id", 
      "--ascending", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-list-jobs-by-status{
   $flags=(
      "--status", 
      "--ascending", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-list-pipelines{
   $flags=(
      "--ascending", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-list-presets{
   $flags=(
      "--ascending", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-read-job{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-read-pipeline{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-read-preset{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-update-pipeline{
   $flags=(
      "--id", 
      "--name", 
      "--input-bucket", 
      "--role", 
      "--aws-kms-key-arn", 
      "--notifications", 
      "--content-config", 
      "--thumbnail-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-update-pipeline-notifications{
   $flags=(
      "--id", 
      "--notifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-update-pipeline-status{
   $flags=(
      "--id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elastictranscoder-wait{
   $flags=("");
   return $flags;
}
function Get-elb{
   $commands=(
      "add-tags", 
      "apply-security-groups-to-load-balancer", 
      "attach-load-balancer-to-subnets", 
      "configure-health-check", 
      "create-app-cookie-stickiness-policy", 
      "create-lb-cookie-stickiness-policy", 
      "create-load-balancer", 
      "create-load-balancer-listeners", 
      "create-load-balancer-policy", 
      "delete-load-balancer", 
      "delete-load-balancer-listeners", 
      "delete-load-balancer-policy", 
      "deregister-instances-from-load-balancer", 
      "describe-account-limits", 
      "describe-instance-health", 
      "describe-load-balancer-attributes", 
      "describe-load-balancer-policies", 
      "describe-load-balancer-policy-types", 
      "describe-load-balancers", 
      "describe-tags", 
      "detach-load-balancer-from-subnets", 
      "disable-availability-zones-for-load-balancer", 
      "enable-availability-zones-for-load-balancer", 
      "modify-load-balancer-attributes", 
      "register-instances-with-load-balancer", 
      "remove-tags", 
      "set-load-balancer-listener-ssl-certificate", 
      "set-load-balancer-policies-for-backend-server", 
      "set-load-balancer-policies-of-listener", 
      "wait"
    );
   return $commands;
}
function Get-elb-add-tags{
   $flags=(
      "--load-balancer-names", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-apply-security-groups-to-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--security-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-attach-load-balancer-to-subnets{
   $flags=(
      "--load-balancer-name", 
      "--subnets", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-configure-health-check{
   $flags=(
      "--load-balancer-name", 
      "--health-check", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-create-app-cookie-stickiness-policy{
   $flags=(
      "--load-balancer-name", 
      "--policy-name", 
      "--cookie-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-create-lb-cookie-stickiness-policy{
   $flags=(
      "--load-balancer-name", 
      "--policy-name", 
      "--cookie-expiration-period", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-create-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--listeners", 
      "--availability-zones", 
      "--subnets", 
      "--security-groups", 
      "--scheme", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-create-load-balancer-listeners{
   $flags=(
      "--load-balancer-name", 
      "--listeners", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-create-load-balancer-policy{
   $flags=(
      "--load-balancer-name", 
      "--policy-name", 
      "--policy-type-name", 
      "--policy-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-delete-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-delete-load-balancer-listeners{
   $flags=(
      "--load-balancer-name", 
      "--load-balancer-ports", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-delete-load-balancer-policy{
   $flags=(
      "--load-balancer-name", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-deregister-instances-from-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--instances", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-describe-account-limits{
   $flags=(
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-describe-instance-health{
   $flags=(
      "--load-balancer-name", 
      "--instances", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-describe-load-balancer-attributes{
   $flags=(
      "--load-balancer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-describe-load-balancer-policies{
   $flags=(
      "--load-balancer-name", 
      "--policy-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-describe-load-balancer-policy-types{
   $flags=(
      "--policy-type-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-describe-load-balancers{
   $flags=(
      "--load-balancer-names", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-describe-tags{
   $flags=(
      "--load-balancer-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-detach-load-balancer-from-subnets{
   $flags=(
      "--load-balancer-name", 
      "--subnets", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-disable-availability-zones-for-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--availability-zones", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-enable-availability-zones-for-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--availability-zones", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-modify-load-balancer-attributes{
   $flags=(
      "--load-balancer-name", 
      "--load-balancer-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-register-instances-with-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--instances", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-remove-tags{
   $flags=(
      "--load-balancer-names", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-set-load-balancer-listener-ssl-certificate{
   $flags=(
      "--load-balancer-name", 
      "--load-balancer-port", 
      "--ssl-certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-set-load-balancer-policies-for-backend-server{
   $flags=(
      "--load-balancer-name", 
      "--instance-port", 
      "--policy-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-set-load-balancer-policies-of-listener{
   $flags=(
      "--load-balancer-name", 
      "--load-balancer-port", 
      "--policy-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elb-wait{
   $flags=("");
   return $flags;
}
function Get-elbv2{
   $commands=(
      "add-listener-certificates", 
      "add-tags", 
      "create-listener", 
      "create-load-balancer", 
      "create-rule", 
      "create-target-group", 
      "delete-listener", 
      "delete-load-balancer", 
      "delete-rule", 
      "delete-target-group", 
      "deregister-targets", 
      "describe-account-limits", 
      "describe-listener-certificates", 
      "describe-listeners", 
      "describe-load-balancer-attributes", 
      "describe-load-balancers", 
      "describe-rules", 
      "describe-ssl-policies", 
      "describe-tags", 
      "describe-target-group-attributes", 
      "describe-target-groups", 
      "describe-target-health", 
      "modify-listener", 
      "modify-load-balancer-attributes", 
      "modify-rule", 
      "modify-target-group", 
      "modify-target-group-attributes", 
      "register-targets", 
      "remove-listener-certificates", 
      "remove-tags", 
      "set-ip-address-type", 
      "set-rule-priorities", 
      "set-security-groups", 
      "set-subnets", 
      "wait"
    );
   return $commands;
}
function Get-elbv2-add-listener-certificates{
   $flags=(
      "--listener-arn", 
      "--certificates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-add-tags{
   $flags=(
      "--resource-arns", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-create-listener{
   $flags=(
      "--load-balancer-arn", 
      "--protocol", 
      "--port", 
      "--ssl-policy", 
      "--certificates", 
      "--default-actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-create-load-balancer{
   $flags=(
      "--name", 
      "--subnets", 
      "--subnet-mappings", 
      "--security-groups", 
      "--scheme", 
      "--tags", 
      "--type", 
      "--ip-address-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-create-rule{
   $flags=(
      "--listener-arn", 
      "--conditions", 
      "--priority", 
      "--actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-create-target-group{
   $flags=(
      "--name", 
      "--protocol", 
      "--port", 
      "--vpc-id", 
      "--health-check-protocol", 
      "--health-check-port", 
      "--health-check-enabled", 
      "--no-health-check-enabled", 
      "--health-check-path", 
      "--health-check-interval-seconds", 
      "--health-check-timeout-seconds", 
      "--healthy-threshold-count", 
      "--unhealthy-threshold-count", 
      "--matcher", 
      "--target-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-delete-listener{
   $flags=(
      "--listener-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-delete-load-balancer{
   $flags=(
      "--load-balancer-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-delete-rule{
   $flags=(
      "--rule-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-delete-target-group{
   $flags=(
      "--target-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-deregister-targets{
   $flags=(
      "--target-group-arn", 
      "--targets", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-account-limits{
   $flags=(
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-listener-certificates{
   $flags=(
      "--listener-arn", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-listeners{
   $flags=(
      "--load-balancer-arn", 
      "--listener-arns", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-load-balancer-attributes{
   $flags=(
      "--load-balancer-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-load-balancers{
   $flags=(
      "--load-balancer-arns", 
      "--names", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-rules{
   $flags=(
      "--listener-arn", 
      "--rule-arns", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-ssl-policies{
   $flags=(
      "--names", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-tags{
   $flags=(
      "--resource-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-target-group-attributes{
   $flags=(
      "--target-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-target-groups{
   $flags=(
      "--load-balancer-arn", 
      "--target-group-arns", 
      "--names", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-describe-target-health{
   $flags=(
      "--target-group-arn", 
      "--targets", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-modify-listener{
   $flags=(
      "--listener-arn", 
      "--port", 
      "--protocol", 
      "--ssl-policy", 
      "--certificates", 
      "--default-actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-modify-load-balancer-attributes{
   $flags=(
      "--load-balancer-arn", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-modify-rule{
   $flags=(
      "--rule-arn", 
      "--conditions", 
      "--actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-modify-target-group{
   $flags=(
      "--target-group-arn", 
      "--health-check-protocol", 
      "--health-check-port", 
      "--health-check-path", 
      "--health-check-enabled", 
      "--no-health-check-enabled", 
      "--health-check-interval-seconds", 
      "--health-check-timeout-seconds", 
      "--healthy-threshold-count", 
      "--unhealthy-threshold-count", 
      "--matcher", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-modify-target-group-attributes{
   $flags=(
      "--target-group-arn", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-register-targets{
   $flags=(
      "--target-group-arn", 
      "--targets", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-remove-listener-certificates{
   $flags=(
      "--listener-arn", 
      "--certificates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-remove-tags{
   $flags=(
      "--resource-arns", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-set-ip-address-type{
   $flags=(
      "--load-balancer-arn", 
      "--ip-address-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-set-rule-priorities{
   $flags=(
      "--rule-priorities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-set-security-groups{
   $flags=(
      "--load-balancer-arn", 
      "--security-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-set-subnets{
   $flags=(
      "--load-balancer-arn", 
      "--subnets", 
      "--subnet-mappings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-elbv2-wait{
   $flags=("");
   return $flags;
}
function Get-emr{
   $commands=(
      "add-instance-fleet", 
      "add-instance-groups", 
      "add-steps", 
      "add-tags", 
      "cancel-steps", 
      "create-cluster", 
      "create-default-roles", 
      "create-hbase-backup", 
      "create-security-configuration", 
      "delete-security-configuration", 
      "describe-cluster", 
      "describe-security-configuration", 
      "describe-step", 
      "disable-hbase-backups", 
      "get", 
      "get-block-public-access-configuration", 
      "get-managed-scaling-policy", 
      "install-applications", 
      "list-clusters", 
      "list-instance-fleets", 
      "list-instances", 
      "list-security-configurations", 
      "list-steps", 
      "modify-cluster", 
      "modify-cluster-attributes", 
      "modify-instance-fleet", 
      "modify-instance-groups", 
      "put", 
      "put-auto-scaling-policy", 
      "put-block-public-access-configuration", 
      "put-managed-scaling-policy", 
      "remove-auto-scaling-policy", 
      "remove-managed-scaling-policy", 
      "remove-tags", 
      "restore-from-hbase-backup", 
      "schedule-hbase-backup", 
      "socks", 
      "ssh", 
      "terminate-clusters", 
      "wait"
    );
   return $commands;
}
function Get-emr-add-instance-fleet{
   $flags=(
      "--cluster-id", 
      "--instance-fleet", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-add-instance-groups{
   $flags=(
      "--cluster-id", 
      "--instance-groups"
    );
   return $flags;
}
function Get-emr-add-steps{
   $flags=(
      "--cluster-id", 
      "--steps"
    );
   return $flags;
}
function Get-emr-add-tags{
   $flags=(
      "--resource-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-cancel-steps{
   $flags=(
      "--cluster-id", 
      "--step-ids", 
      "--step-cancellation-option", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-create-cluster{
   $flags=(
      "--release-label", 
      "--ami-version", 
      "--instance-fleets", 
      "--instance-groups", 
      "--instance-type", 
      "--instance-count", 
      "--auto-terminate", 
      "--no-auto-terminate", 
      "--use-default-roles", 
      "--service-role", 
      "--configurations", 
      "--name", 
      "--log-uri", 
      "--additional-info", 
      "--ec", 
      "--termination-protected", 
      "--no-termination-protected", 
      "--scale-down-behavior", 
      "--visible-to-all-users", 
      "--no-visible-to-all-users", 
      "--enable-debugging", 
      "--no-enable-debugging", 
      "--tags", 
      "--applications", 
      "--emrfs", 
      "--bootstrap-actions", 
      "--steps", 
      "--restore-from-hbase-backup", 
      "--security-configuration", 
      "--custom-ami-id", 
      "--ebs-root-volume-size", 
      "--repo-upgrade-on-boot", 
      "--kerberos-attributes", 
      "--managed-scaling-policy"
    );
   return $flags;
}
function Get-emr-create-default-roles{
   $flags=(
      "--iam-endpoint"
    );
   return $flags;
}
function Get-emr-create-hbase-backup{
   $flags=(
      "--cluster-id", 
      "--dir", 
      "--consistent"
    );
   return $flags;
}
function Get-emr-create-security-configuration{
   $flags=(
      "--name", 
      "--security-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-delete-security-configuration{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-describe-cluster{
   $flags=(
      "--cluster-id"
    );
   return $flags;
}
function Get-emr-describe-security-configuration{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-describe-step{
   $flags=(
      "--cluster-id", 
      "--step-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-disable-hbase-backups{
   $flags=(
      "--cluster-id", 
      "--full", 
      "--incremental"
    );
   return $flags;
}
function Get-emr-get{
   $flags=(
      "--cluster-id", 
      "--key-pair-file", 
      "--src", 
      "--dest"
    );
   return $flags;
}
function Get-emr-get-block-public-access-configuration{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-get-managed-scaling-policy{
   $flags=(
      "--cluster-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-install-applications{
   $flags=(
      "--cluster-id", 
      "--applications"
    );
   return $flags;
}
function Get-emr-list-clusters{
   $flags=(
      "--created-after", 
      "--created-before", 
      "--cluster-states", 
      "--active", 
      "--terminated", 
      "--failed", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-list-instance-fleets{
   $flags=(
      "--cluster-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-list-instances{
   $flags=(
      "--cluster-id", 
      "--instance-group-id", 
      "--instance-group-types", 
      "--instance-fleet-id", 
      "--instance-fleet-type", 
      "--instance-states", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-list-security-configurations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-list-steps{
   $flags=(
      "--cluster-id", 
      "--step-states", 
      "--step-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-modify-cluster{
   $flags=(
      "--cluster-id", 
      "--step-concurrency-level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-modify-cluster-attributes{
   $flags=(
      "--cluster-id", 
      "--visible-to-all-users", 
      "--no-visible-to-all-users", 
      "--termination-protected", 
      "--no-termination-protected"
    );
   return $flags;
}
function Get-emr-modify-instance-fleet{
   $flags=(
      "--cluster-id", 
      "--instance-fleet", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-modify-instance-groups{
   $flags=(
      "--cluster-id", 
      "--instance-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-put{
   $flags=(
      "--cluster-id", 
      "--key-pair-file", 
      "--src", 
      "--dest"
    );
   return $flags;
}
function Get-emr-put-auto-scaling-policy{
   $flags=(
      "--cluster-id", 
      "--instance-group-id", 
      "--auto-scaling-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-put-block-public-access-configuration{
   $flags=(
      "--block-public-access-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-put-managed-scaling-policy{
   $flags=(
      "--cluster-id", 
      "--managed-scaling-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-remove-auto-scaling-policy{
   $flags=(
      "--cluster-id", 
      "--instance-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-remove-managed-scaling-policy{
   $flags=(
      "--cluster-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-remove-tags{
   $flags=(
      "--resource-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-emr-restore-from-hbase-backup{
   $flags=(
      "--cluster-id", 
      "--dir", 
      "--backup-version"
    );
   return $flags;
}
function Get-emr-schedule-hbase-backup{
   $flags=(
      "--cluster-id", 
      "--type", 
      "--dir", 
      "--interval", 
      "--unit", 
      "--start-time", 
      "--consistent"
    );
   return $flags;
}
function Get-emr-socks{
   $flags=(
      "--cluster-id", 
      "--key-pair-file"
    );
   return $flags;
}
function Get-emr-ssh{
   $flags=(
      "--cluster-id", 
      "--key-pair-file", 
      "--command"
    );
   return $flags;
}
function Get-emr-terminate-clusters{
   $flags=(
      "--cluster-ids"
    );
   return $flags;
}
function Get-emr-wait{
   $flags=(
      "--cluster-id"
    );
   return $flags;
}
function Get-es{
   $commands=(
      "add-tags", 
      "associate-package", 
      "cancel-elasticsearch-service-software-update", 
      "create-elasticsearch-domain", 
      "create-package", 
      "delete-elasticsearch-domain", 
      "delete-elasticsearch-service-role", 
      "delete-package", 
      "describe-elasticsearch-domain", 
      "describe-elasticsearch-domain-config", 
      "describe-elasticsearch-domains", 
      "describe-elasticsearch-instance-type-limits", 
      "describe-packages", 
      "describe-reserved-elasticsearch-instance-offerings", 
      "describe-reserved-elasticsearch-instances", 
      "dissociate-package", 
      "get-compatible-elasticsearch-versions", 
      "get-upgrade-history", 
      "get-upgrade-status", 
      "list-domain-names", 
      "list-domains-for-package", 
      "list-elasticsearch-instance-types", 
      "list-elasticsearch-versions", 
      "list-packages-for-domain", 
      "list-tags", 
      "purchase-reserved-elasticsearch-instance-offering", 
      "remove-tags", 
      "start-elasticsearch-service-software-update", 
      "update-elasticsearch-domain-config", 
      "upgrade-elasticsearch-domain"
    );
   return $commands;
}
function Get-es-add-tags{
   $flags=(
      "--arn", 
      "--tag-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-associate-package{
   $flags=(
      "--package-id", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-cancel-elasticsearch-service-software-update{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-create-elasticsearch-domain{
   $flags=(
      "--domain-name", 
      "--elasticsearch-version", 
      "--elasticsearch-cluster-config", 
      "--ebs-options", 
      "--access-policies", 
      "--snapshot-options", 
      "--vpc-options", 
      "--cognito-options", 
      "--encryption-at-rest-options", 
      "--node-to-node-encryption-options", 
      "--advanced-options", 
      "--log-publishing-options", 
      "--domain-endpoint-options", 
      "--advanced-security-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-create-package{
   $flags=(
      "--package-name", 
      "--package-type", 
      "--package-description", 
      "--package-source", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-delete-elasticsearch-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-delete-elasticsearch-service-role{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-delete-package{
   $flags=(
      "--package-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-describe-elasticsearch-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-describe-elasticsearch-domain-config{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-describe-elasticsearch-domains{
   $flags=(
      "--domain-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-describe-elasticsearch-instance-type-limits{
   $flags=(
      "--domain-name", 
      "--instance-type", 
      "--elasticsearch-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-describe-packages{
   $flags=(
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-describe-reserved-elasticsearch-instance-offerings{
   $flags=(
      "--reserved-elasticsearch-instance-offering-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-describe-reserved-elasticsearch-instances{
   $flags=(
      "--reserved-elasticsearch-instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-dissociate-package{
   $flags=(
      "--package-id", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-get-compatible-elasticsearch-versions{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-get-upgrade-history{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-get-upgrade-status{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-list-domain-names{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-list-domains-for-package{
   $flags=(
      "--package-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-list-elasticsearch-instance-types{
   $flags=(
      "--elasticsearch-version", 
      "--domain-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-list-elasticsearch-versions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-list-packages-for-domain{
   $flags=(
      "--domain-name", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-list-tags{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-purchase-reserved-elasticsearch-instance-offering{
   $flags=(
      "--reserved-elasticsearch-instance-offering-id", 
      "--reservation-name", 
      "--instance-count", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-remove-tags{
   $flags=(
      "--arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-start-elasticsearch-service-software-update{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-update-elasticsearch-domain-config{
   $flags=(
      "--domain-name", 
      "--elasticsearch-cluster-config", 
      "--ebs-options", 
      "--snapshot-options", 
      "--vpc-options", 
      "--cognito-options", 
      "--advanced-options", 
      "--access-policies", 
      "--log-publishing-options", 
      "--domain-endpoint-options", 
      "--advanced-security-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-es-upgrade-elasticsearch-domain{
   $flags=(
      "--domain-name", 
      "--target-version", 
      "--perform-check-only", 
      "--no-perform-check-only", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events{
   $commands=(
      "activate-event-source", 
      "create-event-bus", 
      "create-partner-event-source", 
      "deactivate-event-source", 
      "delete-event-bus", 
      "delete-partner-event-source", 
      "delete-rule", 
      "describe-event-bus", 
      "describe-event-source", 
      "describe-partner-event-source", 
      "describe-rule", 
      "disable-rule", 
      "enable-rule", 
      "list-event-buses", 
      "list-event-sources", 
      "list-partner-event-source-accounts", 
      "list-partner-event-sources", 
      "list-rule-names-by-target", 
      "list-rules", 
      "list-tags-for-resource", 
      "list-targets-by-rule", 
      "put-events", 
      "put-partner-events", 
      "put-permission", 
      "put-rule", 
      "put-targets", 
      "remove-permission", 
      "remove-targets", 
      "tag-resource", 
      "test-event-pattern", 
      "untag-resource"
    );
   return $commands;
}
function Get-events-activate-event-source{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-create-event-bus{
   $flags=(
      "--name", 
      "--event-source-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-create-partner-event-source{
   $flags=(
      "--name", 
      "--account", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-deactivate-event-source{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-delete-event-bus{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-delete-partner-event-source{
   $flags=(
      "--name", 
      "--account", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-delete-rule{
   $flags=(
      "--name", 
      "--event-bus-name", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-describe-event-bus{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-describe-event-source{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-describe-partner-event-source{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-describe-rule{
   $flags=(
      "--name", 
      "--event-bus-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-disable-rule{
   $flags=(
      "--name", 
      "--event-bus-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-enable-rule{
   $flags=(
      "--name", 
      "--event-bus-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-list-event-buses{
   $flags=(
      "--name-prefix", 
      "--next-token", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-list-event-sources{
   $flags=(
      "--name-prefix", 
      "--next-token", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-list-partner-event-source-accounts{
   $flags=(
      "--event-source-name", 
      "--next-token", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-list-partner-event-sources{
   $flags=(
      "--name-prefix", 
      "--next-token", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-list-rule-names-by-target{
   $flags=(
      "--target-arn", 
      "--event-bus-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-list-rules{
   $flags=(
      "--name-prefix", 
      "--event-bus-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-list-targets-by-rule{
   $flags=(
      "--rule", 
      "--event-bus-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-put-events{
   $flags=(
      "--entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-put-partner-events{
   $flags=(
      "--entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-put-permission{
   $flags=(
      "--event-bus-name", 
      "--action", 
      "--principal", 
      "--statement-id", 
      "--condition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-put-rule{
   $flags=(
      "--name", 
      "--schedule-expression", 
      "--event-pattern", 
      "--state", 
      "--description", 
      "--role-arn", 
      "--tags", 
      "--event-bus-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-put-targets{
   $flags=(
      "--rule", 
      "--event-bus-name", 
      "--targets", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-remove-permission{
   $flags=(
      "--statement-id", 
      "--event-bus-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-remove-targets{
   $flags=(
      "--rule", 
      "--event-bus-name", 
      "--ids", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-test-event-pattern{
   $flags=(
      "--event-pattern", 
      "--event", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-events-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose{
   $commands=(
      "create-delivery-stream", 
      "delete-delivery-stream", 
      "describe-delivery-stream", 
      "list-delivery-streams", 
      "list-tags-for-delivery-stream", 
      "put-record", 
      "put-record-batch", 
      "start-delivery-stream-encryption", 
      "stop-delivery-stream-encryption", 
      "tag-delivery-stream", 
      "untag-delivery-stream", 
      "update-destination"
    );
   return $commands;
}
function Get-firehose-create-delivery-stream{
   $flags=(
      "--delivery-stream-name", 
      "--delivery-stream-type", 
      "--kinesis-stream-source-configuration", 
      "--delivery-stream-encryption-configuration-input", 
      "--s3-destination-configuration", 
      "--extended-s3-destination-configuration", 
      "--redshift-destination-configuration", 
      "--elasticsearch-destination-configuration", 
      "--splunk-destination-configuration", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-delete-delivery-stream{
   $flags=(
      "--delivery-stream-name", 
      "--allow-force-delete", 
      "--no-allow-force-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-describe-delivery-stream{
   $flags=(
      "--delivery-stream-name", 
      "--limit", 
      "--exclusive-start-destination-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-list-delivery-streams{
   $flags=(
      "--limit", 
      "--delivery-stream-type", 
      "--exclusive-start-delivery-stream-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-list-tags-for-delivery-stream{
   $flags=(
      "--delivery-stream-name", 
      "--exclusive-start-tag-key", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-put-record{
   $flags=(
      "--delivery-stream-name", 
      "--record", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-put-record-batch{
   $flags=(
      "--delivery-stream-name", 
      "--records", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-start-delivery-stream-encryption{
   $flags=(
      "--delivery-stream-name", 
      "--delivery-stream-encryption-configuration-input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-stop-delivery-stream-encryption{
   $flags=(
      "--delivery-stream-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-tag-delivery-stream{
   $flags=(
      "--delivery-stream-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-untag-delivery-stream{
   $flags=(
      "--delivery-stream-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-firehose-update-destination{
   $flags=(
      "--delivery-stream-name", 
      "--current-delivery-stream-version-id", 
      "--destination-id", 
      "--s3-destination-update", 
      "--extended-s3-destination-update", 
      "--redshift-destination-update", 
      "--elasticsearch-destination-update", 
      "--splunk-destination-update", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms{
   $commands=(
      "associate-admin-account", 
      "delete-notification-channel", 
      "delete-policy", 
      "disassociate-admin-account", 
      "get-admin-account", 
      "get-compliance-detail", 
      "get-notification-channel", 
      "get-policy", 
      "get-protection-status", 
      "list-compliance-status", 
      "list-member-accounts", 
      "list-policies", 
      "list-tags-for-resource", 
      "put-notification-channel", 
      "put-policy", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-fms-associate-admin-account{
   $flags=(
      "--admin-account", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-delete-notification-channel{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-delete-policy{
   $flags=(
      "--policy-id", 
      "--delete-all-policy-resources", 
      "--no-delete-all-policy-resources", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-disassociate-admin-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-get-admin-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-get-compliance-detail{
   $flags=(
      "--policy-id", 
      "--member-account", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-get-notification-channel{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-get-policy{
   $flags=(
      "--policy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-get-protection-status{
   $flags=(
      "--policy-id", 
      "--member-account-id", 
      "--start-time", 
      "--end-time", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-list-compliance-status{
   $flags=(
      "--policy-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-list-member-accounts{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-list-policies{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-put-notification-channel{
   $flags=(
      "--sns-topic-arn", 
      "--sns-role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-put-policy{
   $flags=(
      "--policy", 
      "--tag-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fms-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast{
   $commands=(
      "create-dataset", 
      "create-dataset-group", 
      "create-dataset-import-job", 
      "create-forecast", 
      "create-forecast-export-job", 
      "create-predictor", 
      "delete-dataset", 
      "delete-dataset-group", 
      "delete-dataset-import-job", 
      "delete-forecast", 
      "delete-forecast-export-job", 
      "delete-predictor", 
      "describe-dataset", 
      "describe-dataset-group", 
      "describe-dataset-import-job", 
      "describe-forecast", 
      "describe-forecast-export-job", 
      "describe-predictor", 
      "get-accuracy-metrics", 
      "list-dataset-groups", 
      "list-dataset-import-jobs", 
      "list-datasets", 
      "list-forecast-export-jobs", 
      "list-forecasts", 
      "list-predictors", 
      "update-dataset-group"
    );
   return $commands;
}
function Get-forecast-create-dataset{
   $flags=(
      "--dataset-name", 
      "--domain", 
      "--dataset-type", 
      "--data-frequency", 
      "--schema", 
      "--encryption-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-create-dataset-group{
   $flags=(
      "--dataset-group-name", 
      "--domain", 
      "--dataset-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-create-dataset-import-job{
   $flags=(
      "--dataset-import-job-name", 
      "--dataset-arn", 
      "--data-source", 
      "--timestamp-format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-create-forecast{
   $flags=(
      "--forecast-name", 
      "--predictor-arn", 
      "--forecast-types", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-create-forecast-export-job{
   $flags=(
      "--forecast-export-job-name", 
      "--forecast-arn", 
      "--destination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-create-predictor{
   $flags=(
      "--predictor-name", 
      "--algorithm-arn", 
      "--forecast-horizon", 
      "--perform-auto-ml", 
      "--no-perform-auto-ml", 
      "--perform-hpo", 
      "--no-perform-hpo", 
      "--training-parameters", 
      "--evaluation-parameters", 
      "--hpo-config", 
      "--input-data-config", 
      "--featurization-config", 
      "--encryption-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-delete-dataset{
   $flags=(
      "--dataset-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-delete-dataset-group{
   $flags=(
      "--dataset-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-delete-dataset-import-job{
   $flags=(
      "--dataset-import-job-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-delete-forecast{
   $flags=(
      "--forecast-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-delete-forecast-export-job{
   $flags=(
      "--forecast-export-job-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-delete-predictor{
   $flags=(
      "--predictor-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-describe-dataset{
   $flags=(
      "--dataset-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-describe-dataset-group{
   $flags=(
      "--dataset-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-describe-dataset-import-job{
   $flags=(
      "--dataset-import-job-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-describe-forecast{
   $flags=(
      "--forecast-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-describe-forecast-export-job{
   $flags=(
      "--forecast-export-job-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-describe-predictor{
   $flags=(
      "--predictor-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-get-accuracy-metrics{
   $flags=(
      "--predictor-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-list-dataset-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-list-dataset-import-jobs{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-list-datasets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-list-forecast-export-jobs{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-list-forecasts{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-list-predictors{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecast-update-dataset-group{
   $flags=(
      "--dataset-group-arn", 
      "--dataset-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-forecastquery{
   $commands=(
      "query-forecast"
    );
   return $commands;
}
function Get-forecastquery-query-forecast{
   $flags=(
      "--forecast-arn", 
      "--start-date", 
      "--end-date", 
      "--filters", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector{
   $commands=(
      "batch-create-variable", 
      "batch-get-variable", 
      "create-detector-version", 
      "create-model-version", 
      "create-rule", 
      "create-variable", 
      "delete-detector", 
      "delete-detector-version", 
      "delete-event", 
      "delete-rule-version", 
      "describe-detector", 
      "describe-model-versions", 
      "get-detector-version", 
      "get-detectors", 
      "get-external-models", 
      "get-model-version", 
      "get-models", 
      "get-outcomes", 
      "get-prediction", 
      "get-rules", 
      "get-variables", 
      "put-detector", 
      "put-external-model", 
      "put-model", 
      "put-outcome", 
      "update-detector-version", 
      "update-detector-version-metadata", 
      "update-detector-version-status", 
      "update-model-version", 
      "update-rule-metadata", 
      "update-rule-version", 
      "update-variable"
    );
   return $commands;
}
function Get-frauddetector-batch-create-variable{
   $flags=(
      "--variable-entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-batch-get-variable{
   $flags=(
      "--names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-create-detector-version{
   $flags=(
      "--detector-id", 
      "--description", 
      "--external-model-endpoints", 
      "--rules", 
      "--model-versions", 
      "--rule-execution-mode", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-create-model-version{
   $flags=(
      "--model-id", 
      "--model-type", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-create-rule{
   $flags=(
      "--rule-id", 
      "--detector-id", 
      "--description", 
      "--expression", 
      "--language", 
      "--outcomes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-create-variable{
   $flags=(
      "--name", 
      "--data-type", 
      "--data-source", 
      "--default-value", 
      "--description", 
      "--variable-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-delete-detector{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-delete-detector-version{
   $flags=(
      "--detector-id", 
      "--detector-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-delete-event{
   $flags=(
      "--event-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-delete-rule-version{
   $flags=(
      "--detector-id", 
      "--rule-id", 
      "--rule-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-describe-detector{
   $flags=(
      "--detector-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-describe-model-versions{
   $flags=(
      "--model-id", 
      "--model-version-number", 
      "--model-type", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-detector-version{
   $flags=(
      "--detector-id", 
      "--detector-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-detectors{
   $flags=(
      "--detector-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-external-models{
   $flags=(
      "--model-endpoint", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-model-version{
   $flags=(
      "--model-id", 
      "--model-type", 
      "--model-version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-models{
   $flags=(
      "--model-type", 
      "--model-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-outcomes{
   $flags=(
      "--name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-prediction{
   $flags=(
      "--detector-id", 
      "--detector-version-id", 
      "--event-id", 
      "--event-attributes", 
      "--external-model-endpoint-data-blobs", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-rules{
   $flags=(
      "--rule-id", 
      "--detector-id", 
      "--rule-version", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-get-variables{
   $flags=(
      "--name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-put-detector{
   $flags=(
      "--detector-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-put-external-model{
   $flags=(
      "--model-endpoint", 
      "--model-source", 
      "--role", 
      "--input-configuration", 
      "--output-configuration", 
      "--model-endpoint-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-put-model{
   $flags=(
      "--model-id", 
      "--model-type", 
      "--description", 
      "--training-data-source", 
      "--model-variables", 
      "--label-schema", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-put-outcome{
   $flags=(
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-update-detector-version{
   $flags=(
      "--detector-id", 
      "--detector-version-id", 
      "--external-model-endpoints", 
      "--rules", 
      "--description", 
      "--model-versions", 
      "--rule-execution-mode", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-update-detector-version-metadata{
   $flags=(
      "--detector-id", 
      "--detector-version-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-update-detector-version-status{
   $flags=(
      "--detector-id", 
      "--detector-version-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-update-model-version{
   $flags=(
      "--model-id", 
      "--model-type", 
      "--model-version-number", 
      "--description", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-update-rule-metadata{
   $flags=(
      "--rule", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-update-rule-version{
   $flags=(
      "--rule", 
      "--description", 
      "--expression", 
      "--language", 
      "--outcomes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-frauddetector-update-variable{
   $flags=(
      "--name", 
      "--default-value", 
      "--description", 
      "--variable-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx{
   $commands=(
      "cancel-data-repository-task", 
      "create-backup", 
      "create-data-repository-task", 
      "create-file-system", 
      "create-file-system-from-backup", 
      "delete-backup", 
      "delete-file-system", 
      "describe-backups", 
      "describe-data-repository-tasks", 
      "describe-file-systems", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-file-system"
    );
   return $commands;
}
function Get-fsx-cancel-data-repository-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-create-backup{
   $flags=(
      "--file-system-id", 
      "--client-request-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-create-data-repository-task{
   $flags=(
      "--type", 
      "--paths", 
      "--file-system-id", 
      "--report", 
      "--client-request-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-create-file-system{
   $flags=(
      "--client-request-token", 
      "--file-system-type", 
      "--storage-capacity", 
      "--storage-type", 
      "--subnet-ids", 
      "--security-group-ids", 
      "--tags", 
      "--kms-key-id", 
      "--windows-configuration", 
      "--lustre-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-create-file-system-from-backup{
   $flags=(
      "--backup-id", 
      "--client-request-token", 
      "--subnet-ids", 
      "--security-group-ids", 
      "--tags", 
      "--windows-configuration", 
      "--storage-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-delete-backup{
   $flags=(
      "--backup-id", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-delete-file-system{
   $flags=(
      "--file-system-id", 
      "--client-request-token", 
      "--windows-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-describe-backups{
   $flags=(
      "--backup-ids", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-describe-data-repository-tasks{
   $flags=(
      "--task-ids", 
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-describe-file-systems{
   $flags=(
      "--file-system-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-fsx-update-file-system{
   $flags=(
      "--file-system-id", 
      "--client-request-token", 
      "--windows-configuration", 
      "--lustre-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift{
   $commands=(
      "accept-match", 
      "claim-game-server", 
      "create-alias", 
      "create-build", 
      "create-fleet", 
      "create-game-server-group", 
      "create-game-session", 
      "create-game-session-queue", 
      "create-matchmaking-configuration", 
      "create-matchmaking-rule-set", 
      "create-player-session", 
      "create-player-sessions", 
      "create-script", 
      "create-vpc-peering-authorization", 
      "create-vpc-peering-connection", 
      "delete-alias", 
      "delete-build", 
      "delete-fleet", 
      "delete-game-server-group", 
      "delete-game-session-queue", 
      "delete-matchmaking-configuration", 
      "delete-matchmaking-rule-set", 
      "delete-scaling-policy", 
      "delete-script", 
      "delete-vpc-peering-authorization", 
      "delete-vpc-peering-connection", 
      "deregister-game-server", 
      "describe-alias", 
      "describe-build", 
      "describe-ec2-instance-limits", 
      "describe-fleet-attributes", 
      "describe-fleet-capacity", 
      "describe-fleet-events", 
      "describe-fleet-port-settings", 
      "describe-fleet-utilization", 
      "describe-game-server", 
      "describe-game-server-group", 
      "describe-game-session-details", 
      "describe-game-session-placement", 
      "describe-game-session-queues", 
      "describe-game-sessions", 
      "describe-instances", 
      "describe-matchmaking", 
      "describe-matchmaking-configurations", 
      "describe-matchmaking-rule-sets", 
      "describe-player-sessions", 
      "describe-runtime-configuration", 
      "describe-scaling-policies", 
      "describe-script", 
      "describe-vpc-peering-authorizations", 
      "describe-vpc-peering-connections", 
      "get-game-session-log", 
      "get-game-session-log-url", 
      "get-instance-access", 
      "list-aliases", 
      "list-builds", 
      "list-fleets", 
      "list-game-server-groups", 
      "list-game-servers", 
      "list-scripts", 
      "list-tags-for-resource", 
      "put-scaling-policy", 
      "register-game-server", 
      "request-upload-credentials", 
      "resolve-alias", 
      "resume-game-server-group", 
      "search-game-sessions", 
      "start-fleet-actions", 
      "start-game-session-placement", 
      "start-match-backfill", 
      "start-matchmaking", 
      "stop-fleet-actions", 
      "stop-game-session-placement", 
      "stop-matchmaking", 
      "suspend-game-server-group", 
      "tag-resource", 
      "untag-resource", 
      "update-alias", 
      "update-build", 
      "update-fleet-attributes", 
      "update-fleet-capacity", 
      "update-fleet-port-settings", 
      "update-game-server", 
      "update-game-server-group", 
      "update-game-session", 
      "update-game-session-queue", 
      "update-matchmaking-configuration", 
      "update-runtime-configuration", 
      "update-script", 
      "upload-build", 
      "validate-matchmaking-rule-set"
    );
   return $commands;
}
function Get-gamelift-accept-match{
   $flags=(
      "--ticket-id", 
      "--player-ids", 
      "--acceptance-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-claim-game-server{
   $flags=(
      "--game-server-group-name", 
      "--game-server-id", 
      "--game-server-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-alias{
   $flags=(
      "--name", 
      "--description", 
      "--routing-strategy", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-build{
   $flags=(
      "--name", 
      "--storage-location", 
      "--operating-system", 
      "--tags", 
      "--build-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-fleet{
   $flags=(
      "--name", 
      "--description", 
      "--build-id", 
      "--script-id", 
      "--server-launch-path", 
      "--server-launch-parameters", 
      "--log-paths", 
      "--ec", 
      "--ec", 
      "--new-game-session-protection-policy", 
      "--runtime-configuration", 
      "--resource-creation-limit-policy", 
      "--metric-groups", 
      "--peer-vpc-aws-account-id", 
      "--peer-vpc-id", 
      "--fleet-type", 
      "--instance-role-arn", 
      "--certificate-configuration", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-game-server-group{
   $flags=(
      "--game-server-group-name", 
      "--role-arn", 
      "--min-size", 
      "--max-size", 
      "--launch-template", 
      "--instance-definitions", 
      "--auto-scaling-policy", 
      "--balancing-strategy", 
      "--game-server-protection-policy", 
      "--vpc-subnets", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-game-session{
   $flags=(
      "--fleet-id", 
      "--alias-id", 
      "--maximum-player-session-count", 
      "--name", 
      "--game-properties", 
      "--creator-id", 
      "--game-session-id", 
      "--idempotency-token", 
      "--game-session-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-game-session-queue{
   $flags=(
      "--name", 
      "--timeout-in-seconds", 
      "--player-latency-policies", 
      "--destinations", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-matchmaking-configuration{
   $flags=(
      "--name", 
      "--description", 
      "--game-session-queue-arns", 
      "--request-timeout-seconds", 
      "--acceptance-timeout-seconds", 
      "--acceptance-required", 
      "--no-acceptance-required", 
      "--rule-set-name", 
      "--notification-target", 
      "--additional-player-count", 
      "--custom-event-data", 
      "--game-properties", 
      "--game-session-data", 
      "--backfill-mode", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-matchmaking-rule-set{
   $flags=(
      "--name", 
      "--rule-set-body", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-player-session{
   $flags=(
      "--game-session-id", 
      "--player-id", 
      "--player-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-player-sessions{
   $flags=(
      "--game-session-id", 
      "--player-ids", 
      "--player-data-map", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-script{
   $flags=(
      "--name", 
      "--storage-location", 
      "--zip-file", 
      "--tags", 
      "--script-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-vpc-peering-authorization{
   $flags=(
      "--game-lift-aws-account-id", 
      "--peer-vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-create-vpc-peering-connection{
   $flags=(
      "--fleet-id", 
      "--peer-vpc-aws-account-id", 
      "--peer-vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-alias{
   $flags=(
      "--alias-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-build{
   $flags=(
      "--build-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-fleet{
   $flags=(
      "--fleet-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-game-server-group{
   $flags=(
      "--game-server-group-name", 
      "--delete-option", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-game-session-queue{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-matchmaking-configuration{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-matchmaking-rule-set{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-scaling-policy{
   $flags=(
      "--name", 
      "--fleet-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-script{
   $flags=(
      "--script-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-vpc-peering-authorization{
   $flags=(
      "--game-lift-aws-account-id", 
      "--peer-vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-delete-vpc-peering-connection{
   $flags=(
      "--fleet-id", 
      "--vpc-peering-connection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-deregister-game-server{
   $flags=(
      "--game-server-group-name", 
      "--game-server-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-alias{
   $flags=(
      "--alias-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-build{
   $flags=(
      "--build-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-ec2-instance-limits{
   $flags=(
      "--ec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-fleet-attributes{
   $flags=(
      "--fleet-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-fleet-capacity{
   $flags=(
      "--fleet-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-fleet-events{
   $flags=(
      "--fleet-id", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-fleet-port-settings{
   $flags=(
      "--fleet-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-fleet-utilization{
   $flags=(
      "--fleet-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-game-server{
   $flags=(
      "--game-server-group-name", 
      "--game-server-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-game-server-group{
   $flags=(
      "--game-server-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-game-session-details{
   $flags=(
      "--fleet-id", 
      "--game-session-id", 
      "--alias-id", 
      "--status-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-game-session-placement{
   $flags=(
      "--placement-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-game-session-queues{
   $flags=(
      "--names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-game-sessions{
   $flags=(
      "--fleet-id", 
      "--game-session-id", 
      "--alias-id", 
      "--status-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-instances{
   $flags=(
      "--fleet-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-matchmaking{
   $flags=(
      "--ticket-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-matchmaking-configurations{
   $flags=(
      "--names", 
      "--rule-set-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-matchmaking-rule-sets{
   $flags=(
      "--names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-player-sessions{
   $flags=(
      "--game-session-id", 
      "--player-id", 
      "--player-session-id", 
      "--player-session-status-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-runtime-configuration{
   $flags=(
      "--fleet-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-scaling-policies{
   $flags=(
      "--fleet-id", 
      "--status-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-script{
   $flags=(
      "--script-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-vpc-peering-authorizations{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-describe-vpc-peering-connections{
   $flags=(
      "--fleet-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-get-game-session-log{
   $flags=(
      "--game-session-id", 
      "--save-as"
    );
   return $flags;
}
function Get-gamelift-get-game-session-log-url{
   $flags=(
      "--game-session-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-get-instance-access{
   $flags=(
      "--fleet-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-list-aliases{
   $flags=(
      "--routing-strategy-type", 
      "--name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-list-builds{
   $flags=(
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-list-fleets{
   $flags=(
      "--build-id", 
      "--script-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-list-game-server-groups{
   $flags=(
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-list-game-servers{
   $flags=(
      "--game-server-group-name", 
      "--sort-order", 
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-list-scripts{
   $flags=(
      "--limit", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-put-scaling-policy{
   $flags=(
      "--name", 
      "--fleet-id", 
      "--scaling-adjustment", 
      "--scaling-adjustment-type", 
      "--threshold", 
      "--comparison-operator", 
      "--evaluation-periods", 
      "--metric-name", 
      "--policy-type", 
      "--target-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-register-game-server{
   $flags=(
      "--game-server-group-name", 
      "--game-server-id", 
      "--instance-id", 
      "--connection-info", 
      "--game-server-data", 
      "--custom-sort-key", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-request-upload-credentials{
   $flags=(
      "--build-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-resolve-alias{
   $flags=(
      "--alias-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-resume-game-server-group{
   $flags=(
      "--game-server-group-name", 
      "--resume-actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-search-game-sessions{
   $flags=(
      "--fleet-id", 
      "--alias-id", 
      "--filter-expression", 
      "--sort-expression", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-start-fleet-actions{
   $flags=(
      "--fleet-id", 
      "--actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-start-game-session-placement{
   $flags=(
      "--placement-id", 
      "--game-session-queue-name", 
      "--game-properties", 
      "--maximum-player-session-count", 
      "--game-session-name", 
      "--player-latencies", 
      "--desired-player-sessions", 
      "--game-session-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-start-match-backfill{
   $flags=(
      "--ticket-id", 
      "--configuration-name", 
      "--game-session-arn", 
      "--players", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-start-matchmaking{
   $flags=(
      "--ticket-id", 
      "--configuration-name", 
      "--players", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-stop-fleet-actions{
   $flags=(
      "--fleet-id", 
      "--actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-stop-game-session-placement{
   $flags=(
      "--placement-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-stop-matchmaking{
   $flags=(
      "--ticket-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-suspend-game-server-group{
   $flags=(
      "--game-server-group-name", 
      "--suspend-actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-alias{
   $flags=(
      "--alias-id", 
      "--name", 
      "--description", 
      "--routing-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-build{
   $flags=(
      "--build-id", 
      "--name", 
      "--build-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-fleet-attributes{
   $flags=(
      "--fleet-id", 
      "--name", 
      "--description", 
      "--new-game-session-protection-policy", 
      "--resource-creation-limit-policy", 
      "--metric-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-fleet-capacity{
   $flags=(
      "--fleet-id", 
      "--desired-instances", 
      "--min-size", 
      "--max-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-fleet-port-settings{
   $flags=(
      "--fleet-id", 
      "--inbound-permission-authorizations", 
      "--inbound-permission-revocations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-game-server{
   $flags=(
      "--game-server-group-name", 
      "--game-server-id", 
      "--game-server-data", 
      "--custom-sort-key", 
      "--utilization-status", 
      "--health-check", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-game-server-group{
   $flags=(
      "--game-server-group-name", 
      "--role-arn", 
      "--instance-definitions", 
      "--game-server-protection-policy", 
      "--balancing-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-game-session{
   $flags=(
      "--game-session-id", 
      "--maximum-player-session-count", 
      "--name", 
      "--player-session-creation-policy", 
      "--protection-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-game-session-queue{
   $flags=(
      "--name", 
      "--timeout-in-seconds", 
      "--player-latency-policies", 
      "--destinations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-matchmaking-configuration{
   $flags=(
      "--name", 
      "--description", 
      "--game-session-queue-arns", 
      "--request-timeout-seconds", 
      "--acceptance-timeout-seconds", 
      "--acceptance-required", 
      "--no-acceptance-required", 
      "--rule-set-name", 
      "--notification-target", 
      "--additional-player-count", 
      "--custom-event-data", 
      "--game-properties", 
      "--game-session-data", 
      "--backfill-mode", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-runtime-configuration{
   $flags=(
      "--fleet-id", 
      "--runtime-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-update-script{
   $flags=(
      "--script-id", 
      "--name", 
      "--storage-location", 
      "--zip-file", 
      "--script-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-gamelift-upload-build{
   $flags=(
      "--name", 
      "--build-version", 
      "--build-root", 
      "--operating-system"
    );
   return $flags;
}
function Get-gamelift-validate-matchmaking-rule-set{
   $flags=(
      "--rule-set-body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier{
   $commands=(
      "abort-multipart-upload", 
      "abort-vault-lock", 
      "add-tags-to-vault", 
      "complete-multipart-upload", 
      "complete-vault-lock", 
      "create-vault", 
      "delete-archive", 
      "delete-vault", 
      "delete-vault-access-policy", 
      "delete-vault-notifications", 
      "describe-job", 
      "describe-vault", 
      "get-data-retrieval-policy", 
      "get-job-output", 
      "get-vault-access-policy", 
      "get-vault-lock", 
      "get-vault-notifications", 
      "initiate-job", 
      "initiate-multipart-upload", 
      "initiate-vault-lock", 
      "list-jobs", 
      "list-multipart-uploads", 
      "list-parts", 
      "list-provisioned-capacity", 
      "list-tags-for-vault", 
      "list-vaults", 
      "purchase-provisioned-capacity", 
      "remove-tags-from-vault", 
      "set-data-retrieval-policy", 
      "set-vault-access-policy", 
      "set-vault-notifications", 
      "upload-archive", 
      "upload-multipart-part", 
      "wait"
    );
   return $commands;
}
function Get-glacier-abort-multipart-upload{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--upload-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-abort-vault-lock{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-add-tags-to-vault{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-complete-multipart-upload{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--upload-id", 
      "--archive-size", 
      "--checksum", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-complete-vault-lock{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--lock-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-create-vault{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-delete-archive{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--archive-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-delete-vault{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-delete-vault-access-policy{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-delete-vault-notifications{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-describe-job{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-describe-vault{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-get-data-retrieval-policy{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-get-job-output{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--job-id", 
      "--range"
    );
   return $flags;
}
function Get-glacier-get-vault-access-policy{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-get-vault-lock{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-get-vault-notifications{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-initiate-job{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--job-parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-initiate-multipart-upload{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--archive-description", 
      "--part-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-initiate-vault-lock{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-list-jobs{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--statuscode", 
      "--completed", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-list-multipart-uploads{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-list-parts{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--upload-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-list-provisioned-capacity{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-list-tags-for-vault{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-list-vaults{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-purchase-provisioned-capacity{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-remove-tags-from-vault{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-set-data-retrieval-policy{
   $flags=(
      "--account-id", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-set-vault-access-policy{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-set-vault-notifications{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--vault-notification-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-upload-archive{
   $flags=(
      "--vault-name", 
      "--account-id", 
      "--archive-description", 
      "--checksum", 
      "--body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-upload-multipart-part{
   $flags=(
      "--account-id", 
      "--vault-name", 
      "--upload-id", 
      "--checksum", 
      "--range", 
      "--body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glacier-wait{
   $flags=("");
   return $flags;
}
function Get-globalaccelerator{
   $commands=(
      "advertise-byoip-cidr", 
      "create-accelerator", 
      "create-endpoint-group", 
      "create-listener", 
      "delete-accelerator", 
      "delete-endpoint-group", 
      "delete-listener", 
      "deprovision-byoip-cidr", 
      "describe-accelerator", 
      "describe-accelerator-attributes", 
      "describe-endpoint-group", 
      "describe-listener", 
      "list-accelerators", 
      "list-byoip-cidrs", 
      "list-endpoint-groups", 
      "list-listeners", 
      "list-tags-for-resource", 
      "provision-byoip-cidr", 
      "tag-resource", 
      "untag-resource", 
      "update-accelerator", 
      "update-accelerator-attributes", 
      "update-endpoint-group", 
      "update-listener", 
      "withdraw-byoip-cidr"
    );
   return $commands;
}
function Get-globalaccelerator-advertise-byoip-cidr{
   $flags=(
      "--cidr", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-create-accelerator{
   $flags=(
      "--name", 
      "--ip-address-type", 
      "--ip-addresses", 
      "--enabled", 
      "--no-enabled", 
      "--idempotency-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-create-endpoint-group{
   $flags=(
      "--listener-arn", 
      "--endpoint-group-region", 
      "--endpoint-configurations", 
      "--traffic-dial-percentage", 
      "--health-check-port", 
      "--health-check-protocol", 
      "--health-check-path", 
      "--health-check-interval-seconds", 
      "--threshold-count", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-create-listener{
   $flags=(
      "--accelerator-arn", 
      "--port-ranges", 
      "--protocol", 
      "--client-affinity", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-delete-accelerator{
   $flags=(
      "--accelerator-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-delete-endpoint-group{
   $flags=(
      "--endpoint-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-delete-listener{
   $flags=(
      "--listener-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-deprovision-byoip-cidr{
   $flags=(
      "--cidr", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-describe-accelerator{
   $flags=(
      "--accelerator-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-describe-accelerator-attributes{
   $flags=(
      "--accelerator-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-describe-endpoint-group{
   $flags=(
      "--endpoint-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-describe-listener{
   $flags=(
      "--listener-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-list-accelerators{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-list-byoip-cidrs{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-list-endpoint-groups{
   $flags=(
      "--listener-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-list-listeners{
   $flags=(
      "--accelerator-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-provision-byoip-cidr{
   $flags=(
      "--cidr", 
      "--cidr-authorization-context", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-update-accelerator{
   $flags=(
      "--accelerator-arn", 
      "--name", 
      "--ip-address-type", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-update-accelerator-attributes{
   $flags=(
      "--accelerator-arn", 
      "--flow-logs-enabled", 
      "--no-flow-logs-enabled", 
      "--flow-logs-s3-bucket", 
      "--flow-logs-s3-prefix", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-update-endpoint-group{
   $flags=(
      "--endpoint-group-arn", 
      "--endpoint-configurations", 
      "--traffic-dial-percentage", 
      "--health-check-port", 
      "--health-check-protocol", 
      "--health-check-path", 
      "--health-check-interval-seconds", 
      "--threshold-count", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-update-listener{
   $flags=(
      "--listener-arn", 
      "--port-ranges", 
      "--protocol", 
      "--client-affinity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-globalaccelerator-withdraw-byoip-cidr{
   $flags=(
      "--cidr", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue{
   $commands=(
      "batch-create-partition", 
      "batch-delete-connection", 
      "batch-delete-partition", 
      "batch-delete-table", 
      "batch-delete-table-version", 
      "batch-get-crawlers", 
      "batch-get-dev-endpoints", 
      "batch-get-jobs", 
      "batch-get-partition", 
      "batch-get-triggers", 
      "batch-get-workflows", 
      "batch-stop-job-run", 
      "cancel-ml-task-run", 
      "create-classifier", 
      "create-connection", 
      "create-crawler", 
      "create-database", 
      "create-dev-endpoint", 
      "create-job", 
      "create-ml-transform", 
      "create-partition", 
      "create-script", 
      "create-security-configuration", 
      "create-table", 
      "create-trigger", 
      "create-user-defined-function", 
      "create-workflow", 
      "delete-classifier", 
      "delete-connection", 
      "delete-crawler", 
      "delete-database", 
      "delete-dev-endpoint", 
      "delete-job", 
      "delete-ml-transform", 
      "delete-partition", 
      "delete-resource-policy", 
      "delete-security-configuration", 
      "delete-table", 
      "delete-table-version", 
      "delete-trigger", 
      "delete-user-defined-function", 
      "delete-workflow", 
      "get-catalog-import-status", 
      "get-classifier", 
      "get-classifiers", 
      "get-connection", 
      "get-connections", 
      "get-crawler", 
      "get-crawler-metrics", 
      "get-crawlers", 
      "get-data-catalog-encryption-settings", 
      "get-database", 
      "get-databases", 
      "get-dataflow-graph", 
      "get-dev-endpoint", 
      "get-dev-endpoints", 
      "get-job", 
      "get-job-bookmark", 
      "get-job-run", 
      "get-job-runs", 
      "get-jobs", 
      "get-mapping", 
      "get-ml-task-run", 
      "get-ml-task-runs", 
      "get-ml-transform", 
      "get-ml-transforms", 
      "get-partition", 
      "get-partitions", 
      "get-plan", 
      "get-resource-policy", 
      "get-security-configuration", 
      "get-security-configurations", 
      "get-table", 
      "get-table-version", 
      "get-table-versions", 
      "get-tables", 
      "get-tags", 
      "get-trigger", 
      "get-triggers", 
      "get-user-defined-function", 
      "get-user-defined-functions", 
      "get-workflow", 
      "get-workflow-run", 
      "get-workflow-run-properties", 
      "get-workflow-runs", 
      "import-catalog-to-glue", 
      "list-crawlers", 
      "list-dev-endpoints", 
      "list-jobs", 
      "list-ml-transforms", 
      "list-triggers", 
      "list-workflows", 
      "put-data-catalog-encryption-settings", 
      "put-resource-policy", 
      "put-workflow-run-properties", 
      "reset-job-bookmark", 
      "search-tables", 
      "start-crawler", 
      "start-crawler-schedule", 
      "start-export-labels-task-run", 
      "start-import-labels-task-run", 
      "start-job-run", 
      "start-ml-evaluation-task-run", 
      "start-ml-labeling-set-generation-task-run", 
      "start-trigger", 
      "start-workflow-run", 
      "stop-crawler", 
      "stop-crawler-schedule", 
      "stop-trigger", 
      "tag-resource", 
      "untag-resource", 
      "update-classifier", 
      "update-connection", 
      "update-crawler", 
      "update-crawler-schedule", 
      "update-database", 
      "update-dev-endpoint", 
      "update-job", 
      "update-ml-transform", 
      "update-partition", 
      "update-table", 
      "update-trigger", 
      "update-user-defined-function", 
      "update-workflow"
    );
   return $commands;
}
function Get-glue-batch-create-partition{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--partition-input-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-delete-connection{
   $flags=(
      "--catalog-id", 
      "--connection-name-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-delete-partition{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--partitions-to-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-delete-table{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--tables-to-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-delete-table-version{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--version-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-get-crawlers{
   $flags=(
      "--crawler-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-get-dev-endpoints{
   $flags=(
      "--dev-endpoint-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-get-jobs{
   $flags=(
      "--job-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-get-partition{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--partitions-to-get", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-get-triggers{
   $flags=(
      "--trigger-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-get-workflows{
   $flags=(
      "--names", 
      "--include-graph", 
      "--no-include-graph", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-batch-stop-job-run{
   $flags=(
      "--job-name", 
      "--job-run-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-cancel-ml-task-run{
   $flags=(
      "--transform-id", 
      "--task-run-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-classifier{
   $flags=(
      "--grok-classifier", 
      "--xml-classifier", 
      "--json-classifier", 
      "--csv-classifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-connection{
   $flags=(
      "--catalog-id", 
      "--connection-input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-crawler{
   $flags=(
      "--name", 
      "--role", 
      "--database-name", 
      "--description", 
      "--targets", 
      "--schedule", 
      "--classifiers", 
      "--table-prefix", 
      "--schema-change-policy", 
      "--configuration", 
      "--crawler-security-configuration", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-database{
   $flags=(
      "--catalog-id", 
      "--database-input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-dev-endpoint{
   $flags=(
      "--endpoint-name", 
      "--role-arn", 
      "--security-group-ids", 
      "--subnet-id", 
      "--public-key", 
      "--public-keys", 
      "--number-of-nodes", 
      "--worker-type", 
      "--glue-version", 
      "--number-of-workers", 
      "--extra-python-libs-s3-path", 
      "--extra-jars-s3-path", 
      "--security-configuration", 
      "--tags", 
      "--arguments", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-job{
   $flags=(
      "--name", 
      "--description", 
      "--log-uri", 
      "--role", 
      "--execution-property", 
      "--command", 
      "--default-arguments", 
      "--non-overridable-arguments", 
      "--connections", 
      "--max-retries", 
      "--allocated-capacity", 
      "--timeout", 
      "--max-capacity", 
      "--security-configuration", 
      "--tags", 
      "--notification-property", 
      "--glue-version", 
      "--number-of-workers", 
      "--worker-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-ml-transform{
   $flags=(
      "--name", 
      "--description", 
      "--input-record-tables", 
      "--parameters", 
      "--role", 
      "--glue-version", 
      "--max-capacity", 
      "--worker-type", 
      "--number-of-workers", 
      "--timeout", 
      "--max-retries", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-partition{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--partition-input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-script{
   $flags=(
      "--dag-nodes", 
      "--dag-edges", 
      "--language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-security-configuration{
   $flags=(
      "--name", 
      "--encryption-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-table{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-trigger{
   $flags=(
      "--name", 
      "--workflow-name", 
      "--type", 
      "--schedule", 
      "--predicate", 
      "--actions", 
      "--description", 
      "--start-on-creation", 
      "--no-start-on-creation", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-user-defined-{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "---input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-create-workflow{
   $flags=(
      "--name", 
      "--description", 
      "--default-run-properties", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-classifier{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-connection{
   $flags=(
      "--catalog-id", 
      "--connection-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-crawler{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-database{
   $flags=(
      "--catalog-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-dev-endpoint{
   $flags=(
      "--endpoint-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-job{
   $flags=(
      "--job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-ml-transform{
   $flags=(
      "--transform-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-partition{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--partition-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-resource-policy{
   $flags=(
      "--policy-hash-condition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-security-configuration{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-table{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-table-version{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-trigger{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-user-defined-{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "---name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-delete-workflow{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-catalog-import-status{
   $flags=(
      "--catalog-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-classifier{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-classifiers{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-connection{
   $flags=(
      "--catalog-id", 
      "--name", 
      "--hide-password", 
      "--no-hide-password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-connections{
   $flags=(
      "--catalog-id", 
      "--filter", 
      "--hide-password", 
      "--no-hide-password", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-crawler{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-crawler-metrics{
   $flags=(
      "--crawler-name-list", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-crawlers{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-data-catalog-encryption-settings{
   $flags=(
      "--catalog-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-database{
   $flags=(
      "--catalog-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-databases{
   $flags=(
      "--catalog-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-dataflow-graph{
   $flags=(
      "--python-script", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-dev-endpoint{
   $flags=(
      "--endpoint-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-dev-endpoints{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-job{
   $flags=(
      "--job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-job-bookmark{
   $flags=(
      "--job-name", 
      "--run-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-job-run{
   $flags=(
      "--job-name", 
      "--run-id", 
      "--predecessors-included", 
      "--no-predecessors-included", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-job-runs{
   $flags=(
      "--job-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-jobs{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-mapping{
   $flags=(
      "--source", 
      "--sinks", 
      "--location", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-ml-task-run{
   $flags=(
      "--transform-id", 
      "--task-run-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-ml-task-runs{
   $flags=(
      "--transform-id", 
      "--next-token", 
      "--max-results", 
      "--filter", 
      "--sort", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-ml-transform{
   $flags=(
      "--transform-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-ml-transforms{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--filter", 
      "--sort", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-partition{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--partition-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-partitions{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--expression", 
      "--segment", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-plan{
   $flags=(
      "--mapping", 
      "--source", 
      "--sinks", 
      "--location", 
      "--language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-resource-policy{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-security-configuration{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-security-configurations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-table{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-table-version{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-table-versions{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-tables{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--expression", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-tags{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-trigger{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-triggers{
   $flags=(
      "--dependent-job-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-user-defined-{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "---name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-user-defined-s{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--pattern", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-workflow{
   $flags=(
      "--name", 
      "--include-graph", 
      "--no-include-graph", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-workflow-run{
   $flags=(
      "--name", 
      "--run-id", 
      "--include-graph", 
      "--no-include-graph", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-workflow-run-properties{
   $flags=(
      "--name", 
      "--run-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-get-workflow-runs{
   $flags=(
      "--name", 
      "--include-graph", 
      "--no-include-graph", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-import-catalog-to-glue{
   $flags=(
      "--catalog-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-list-crawlers{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-list-dev-endpoints{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-list-jobs{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-list-ml-transforms{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--filter", 
      "--sort", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-list-triggers{
   $flags=(
      "--next-token", 
      "--dependent-job-name", 
      "--max-results", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-list-workflows{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-put-data-catalog-encryption-settings{
   $flags=(
      "--catalog-id", 
      "--data-catalog-encryption-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-put-resource-policy{
   $flags=(
      "--policy-in-json", 
      "--policy-hash-condition", 
      "--policy-exists-condition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-put-workflow-run-properties{
   $flags=(
      "--name", 
      "--run-id", 
      "--run-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-reset-job-bookmark{
   $flags=(
      "--job-name", 
      "--run-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-search-tables{
   $flags=(
      "--catalog-id", 
      "--next-token", 
      "--filters", 
      "--search-text", 
      "--sort-criteria", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-crawler{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-crawler-schedule{
   $flags=(
      "--crawler-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-export-labels-task-run{
   $flags=(
      "--transform-id", 
      "--output-s3-path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-import-labels-task-run{
   $flags=(
      "--transform-id", 
      "--input-s3-path", 
      "--replace-all-labels", 
      "--no-replace-all-labels", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-job-run{
   $flags=(
      "--job-name", 
      "--job-run-id", 
      "--arguments", 
      "--allocated-capacity", 
      "--timeout", 
      "--max-capacity", 
      "--security-configuration", 
      "--notification-property", 
      "--worker-type", 
      "--number-of-workers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-ml-evaluation-task-run{
   $flags=(
      "--transform-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-ml-labeling-set-generation-task-run{
   $flags=(
      "--transform-id", 
      "--output-s3-path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-trigger{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-start-workflow-run{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-stop-crawler{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-stop-crawler-schedule{
   $flags=(
      "--crawler-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-stop-trigger{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags-to-add", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tags-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-classifier{
   $flags=(
      "--grok-classifier", 
      "--xml-classifier", 
      "--json-classifier", 
      "--csv-classifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-connection{
   $flags=(
      "--catalog-id", 
      "--name", 
      "--connection-input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-crawler{
   $flags=(
      "--name", 
      "--role", 
      "--database-name", 
      "--description", 
      "--targets", 
      "--schedule", 
      "--classifiers", 
      "--table-prefix", 
      "--schema-change-policy", 
      "--configuration", 
      "--crawler-security-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-crawler-schedule{
   $flags=(
      "--crawler-name", 
      "--schedule", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-database{
   $flags=(
      "--catalog-id", 
      "--name", 
      "--database-input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-dev-endpoint{
   $flags=(
      "--endpoint-name", 
      "--public-key", 
      "--add-public-keys", 
      "--delete-public-keys", 
      "--custom-libraries", 
      "--update-etl-libraries", 
      "--no-update-etl-libraries", 
      "--delete-arguments", 
      "--add-arguments", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-job{
   $flags=(
      "--job-name", 
      "--job-update", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-ml-transform{
   $flags=(
      "--transform-id", 
      "--name", 
      "--description", 
      "--parameters", 
      "--role", 
      "--glue-version", 
      "--max-capacity", 
      "--worker-type", 
      "--number-of-workers", 
      "--timeout", 
      "--max-retries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-partition{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-name", 
      "--partition-value-list", 
      "--partition-input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-table{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "--table-input", 
      "--skip-archive", 
      "--no-skip-archive", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-trigger{
   $flags=(
      "--name", 
      "--trigger-update", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-user-defined-{
   $flags=(
      "--catalog-id", 
      "--database-name", 
      "---name", 
      "---input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-glue-update-workflow{
   $flags=(
      "--name", 
      "--description", 
      "--default-run-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass{
   $commands=(
      "associate-role-to-group", 
      "associate-service-role-to-account", 
      "create-connector-definition", 
      "create-connector-definition-version", 
      "create-core-definition", 
      "create-core-definition-version", 
      "create-deployment", 
      "create-device-definition", 
      "create-device-definition-version", 
      "create-function-definition", 
      "create-function-definition-version", 
      "create-group", 
      "create-group-certificate-authority", 
      "create-group-version", 
      "create-logger-definition", 
      "create-logger-definition-version", 
      "create-resource-definition", 
      "create-resource-definition-version", 
      "create-software-update-job", 
      "create-subscription-definition", 
      "create-subscription-definition-version", 
      "delete-connector-definition", 
      "delete-core-definition", 
      "delete-device-definition", 
      "delete-function-definition", 
      "delete-group", 
      "delete-logger-definition", 
      "delete-resource-definition", 
      "delete-subscription-definition", 
      "disassociate-role-from-group", 
      "disassociate-service-role-from-account", 
      "get-associated-role", 
      "get-bulk-deployment-status", 
      "get-connectivity-info", 
      "get-connector-definition", 
      "get-connector-definition-version", 
      "get-core-definition", 
      "get-core-definition-version", 
      "get-deployment-status", 
      "get-device-definition", 
      "get-device-definition-version", 
      "get-function-definition", 
      "get-function-definition-version", 
      "get-group", 
      "get-group-certificate-authority", 
      "get-group-certificate-configuration", 
      "get-group-version", 
      "get-logger-definition", 
      "get-logger-definition-version", 
      "get-resource-definition", 
      "get-resource-definition-version", 
      "get-service-role-for-account", 
      "get-subscription-definition", 
      "get-subscription-definition-version", 
      "list-bulk-deployment-detailed-reports", 
      "list-bulk-deployments", 
      "list-connector-definition-versions", 
      "list-connector-definitions", 
      "list-core-definition-versions", 
      "list-core-definitions", 
      "list-deployments", 
      "list-device-definition-versions", 
      "list-device-definitions", 
      "list-function-definition-versions", 
      "list-function-definitions", 
      "list-group-certificate-authorities", 
      "list-group-versions", 
      "list-groups", 
      "list-logger-definition-versions", 
      "list-logger-definitions", 
      "list-resource-definition-versions", 
      "list-resource-definitions", 
      "list-subscription-definition-versions", 
      "list-subscription-definitions", 
      "list-tags-for-resource", 
      "reset-deployments", 
      "start-bulk-deployment", 
      "stop-bulk-deployment", 
      "tag-resource", 
      "untag-resource", 
      "update-connectivity-info", 
      "update-connector-definition", 
      "update-core-definition", 
      "update-device-definition", 
      "update-function-definition", 
      "update-group", 
      "update-group-certificate-configuration", 
      "update-logger-definition", 
      "update-resource-definition", 
      "update-subscription-definition"
    );
   return $commands;
}
function Get-greengrass-associate-role-to-group{
   $flags=(
      "--group-id", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-associate-service-role-to-account{
   $flags=(
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-connector-definition{
   $flags=(
      "--amzn-client-token", 
      "--initial-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-connector-definition-version{
   $flags=(
      "--amzn-client-token", 
      "--connector-definition-id", 
      "--connectors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-core-definition{
   $flags=(
      "--amzn-client-token", 
      "--initial-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-core-definition-version{
   $flags=(
      "--amzn-client-token", 
      "--core-definition-id", 
      "--cores", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-deployment{
   $flags=(
      "--amzn-client-token", 
      "--deployment-id", 
      "--deployment-type", 
      "--group-id", 
      "--group-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-device-definition{
   $flags=(
      "--amzn-client-token", 
      "--initial-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-device-definition-version{
   $flags=(
      "--amzn-client-token", 
      "--device-definition-id", 
      "--devices", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-function-definition{
   $flags=(
      "--amzn-client-token", 
      "--initial-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-function-definition-version{
   $flags=(
      "--amzn-client-token", 
      "--default-config", 
      "---definition-id", 
      "--functions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-group{
   $flags=(
      "--amzn-client-token", 
      "--initial-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-group-certificate-authority{
   $flags=(
      "--amzn-client-token", 
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-group-version{
   $flags=(
      "--amzn-client-token", 
      "--connector-definition-version-arn", 
      "--core-definition-version-arn", 
      "--device-definition-version-arn", 
      "---definition-version-arn", 
      "--group-id", 
      "--logger-definition-version-arn", 
      "--resource-definition-version-arn", 
      "--subscription-definition-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-logger-definition{
   $flags=(
      "--amzn-client-token", 
      "--initial-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-logger-definition-version{
   $flags=(
      "--amzn-client-token", 
      "--logger-definition-id", 
      "--loggers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-resource-definition{
   $flags=(
      "--amzn-client-token", 
      "--initial-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-resource-definition-version{
   $flags=(
      "--amzn-client-token", 
      "--resource-definition-id", 
      "--resources", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-software-update-job{
   $flags=(
      "--amzn-client-token", 
      "--s3-url-signer-role", 
      "--software-to-update", 
      "--update-agent-log-level", 
      "--update-targets", 
      "--update-targets-architecture", 
      "--update-targets-operating-system", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-subscription-definition{
   $flags=(
      "--amzn-client-token", 
      "--initial-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-create-subscription-definition-version{
   $flags=(
      "--amzn-client-token", 
      "--subscription-definition-id", 
      "--subscriptions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-delete-connector-definition{
   $flags=(
      "--connector-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-delete-core-definition{
   $flags=(
      "--core-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-delete-device-definition{
   $flags=(
      "--device-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-delete-function-definition{
   $flags=(
      "---definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-delete-group{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-delete-logger-definition{
   $flags=(
      "--logger-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-delete-resource-definition{
   $flags=(
      "--resource-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-delete-subscription-definition{
   $flags=(
      "--subscription-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-disassociate-role-from-group{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-disassociate-service-role-from-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-associated-role{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-bulk-deployment-status{
   $flags=(
      "--bulk-deployment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-connectivity-info{
   $flags=(
      "--thing-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-connector-definition{
   $flags=(
      "--connector-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-connector-definition-version{
   $flags=(
      "--connector-definition-id", 
      "--connector-definition-version-id", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-core-definition{
   $flags=(
      "--core-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-core-definition-version{
   $flags=(
      "--core-definition-id", 
      "--core-definition-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-deployment-status{
   $flags=(
      "--deployment-id", 
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-device-definition{
   $flags=(
      "--device-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-device-definition-version{
   $flags=(
      "--device-definition-id", 
      "--device-definition-version-id", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-function-definition{
   $flags=(
      "---definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-function-definition-version{
   $flags=(
      "---definition-id", 
      "---definition-version-id", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-group{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-group-certificate-authority{
   $flags=(
      "--certificate-authority-id", 
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-group-certificate-configuration{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-group-version{
   $flags=(
      "--group-id", 
      "--group-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-logger-definition{
   $flags=(
      "--logger-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-logger-definition-version{
   $flags=(
      "--logger-definition-id", 
      "--logger-definition-version-id", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-resource-definition{
   $flags=(
      "--resource-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-resource-definition-version{
   $flags=(
      "--resource-definition-id", 
      "--resource-definition-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-service-role-for-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-subscription-definition{
   $flags=(
      "--subscription-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-get-subscription-definition-version{
   $flags=(
      "--next-token", 
      "--subscription-definition-id", 
      "--subscription-definition-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-bulk-deployment-detailed-reports{
   $flags=(
      "--bulk-deployment-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-bulk-deployments{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-connector-definition-versions{
   $flags=(
      "--connector-definition-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-connector-definitions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-core-definition-versions{
   $flags=(
      "--core-definition-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-core-definitions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-deployments{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-device-definition-versions{
   $flags=(
      "--device-definition-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-device-definitions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-function-definition-versions{
   $flags=(
      "---definition-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-function-definitions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-group-certificate-authorities{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-group-versions{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-logger-definition-versions{
   $flags=(
      "--logger-definition-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-logger-definitions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-resource-definition-versions{
   $flags=(
      "--resource-definition-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-resource-definitions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-subscription-definition-versions{
   $flags=(
      "--subscription-definition-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-subscription-definitions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-reset-deployments{
   $flags=(
      "--amzn-client-token", 
      "--force", 
      "--no-force", 
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-start-bulk-deployment{
   $flags=(
      "--amzn-client-token", 
      "--execution-role-arn", 
      "--input-file-uri", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-stop-bulk-deployment{
   $flags=(
      "--bulk-deployment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-connectivity-info{
   $flags=(
      "--connectivity-info", 
      "--thing-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-connector-definition{
   $flags=(
      "--connector-definition-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-core-definition{
   $flags=(
      "--core-definition-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-device-definition{
   $flags=(
      "--device-definition-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-function-definition{
   $flags=(
      "---definition-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-group{
   $flags=(
      "--group-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-group-certificate-configuration{
   $flags=(
      "--certificate-expiry-in-milliseconds", 
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-logger-definition{
   $flags=(
      "--logger-definition-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-resource-definition{
   $flags=(
      "--name", 
      "--resource-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-greengrass-update-subscription-definition{
   $flags=(
      "--name", 
      "--subscription-definition-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation{
   $commands=(
      "cancel-contact", 
      "create-config", 
      "create-dataflow-endpoint-group", 
      "create-mission-profile", 
      "delete-config", 
      "delete-dataflow-endpoint-group", 
      "delete-mission-profile", 
      "describe-contact", 
      "get-config", 
      "get-dataflow-endpoint-group", 
      "get-minute-usage", 
      "get-mission-profile", 
      "get-satellite", 
      "list-configs", 
      "list-contacts", 
      "list-dataflow-endpoint-groups", 
      "list-ground-stations", 
      "list-mission-profiles", 
      "list-satellites", 
      "list-tags-for-resource", 
      "reserve-contact", 
      "tag-resource", 
      "untag-resource", 
      "update-config", 
      "update-mission-profile"
    );
   return $commands;
}
function Get-groundstation-cancel-contact{
   $flags=(
      "--contact-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-create-config{
   $flags=(
      "--config-data", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-create-dataflow-endpoint-group{
   $flags=(
      "--endpoint-details", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-create-mission-profile{
   $flags=(
      "--contact-post-pass-duration-seconds", 
      "--contact-pre-pass-duration-seconds", 
      "--dataflow-edges", 
      "--minimum-viable-contact-duration-seconds", 
      "--name", 
      "--tags", 
      "--tracking-config-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-delete-config{
   $flags=(
      "--config-id", 
      "--config-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-delete-dataflow-endpoint-group{
   $flags=(
      "--dataflow-endpoint-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-delete-mission-profile{
   $flags=(
      "--mission-profile-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-describe-contact{
   $flags=(
      "--contact-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-get-config{
   $flags=(
      "--config-id", 
      "--config-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-get-dataflow-endpoint-group{
   $flags=(
      "--dataflow-endpoint-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-get-minute-usage{
   $flags=(
      "--month", 
      "--year", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-get-mission-profile{
   $flags=(
      "--mission-profile-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-get-satellite{
   $flags=(
      "--satellite-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-list-configs{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-list-contacts{
   $flags=(
      "--end-time", 
      "--ground-station", 
      "--mission-profile-arn", 
      "--satellite-arn", 
      "--start-time", 
      "--status-list", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-list-dataflow-endpoint-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-list-ground-stations{
   $flags=(
      "--satellite-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-list-mission-profiles{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-list-satellites{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-reserve-contact{
   $flags=(
      "--end-time", 
      "--ground-station", 
      "--mission-profile-arn", 
      "--satellite-arn", 
      "--start-time", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-update-config{
   $flags=(
      "--config-data", 
      "--config-id", 
      "--config-type", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-groundstation-update-mission-profile{
   $flags=(
      "--contact-post-pass-duration-seconds", 
      "--contact-pre-pass-duration-seconds", 
      "--dataflow-edges", 
      "--minimum-viable-contact-duration-seconds", 
      "--mission-profile-id", 
      "--name", 
      "--tracking-config-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty{
   $commands=(
      "accept-invitation", 
      "archive-findings", 
      "create-detector", 
      "create-filter", 
      "create-ip-set", 
      "create-members", 
      "create-publishing-destination", 
      "create-sample-findings", 
      "create-threat-intel-set", 
      "decline-invitations", 
      "delete-detector", 
      "delete-filter", 
      "delete-invitations", 
      "delete-ip-set", 
      "delete-members", 
      "delete-publishing-destination", 
      "delete-threat-intel-set", 
      "describe-organization-configuration", 
      "describe-publishing-destination", 
      "disable-organization-admin-account", 
      "disassociate-from-master-account", 
      "disassociate-members", 
      "enable-organization-admin-account", 
      "get-detector", 
      "get-filter", 
      "get-findings", 
      "get-findings-statistics", 
      "get-invitations-count", 
      "get-ip-set", 
      "get-master-account", 
      "get-members", 
      "get-threat-intel-set", 
      "invite-members", 
      "list-detectors", 
      "list-filters", 
      "list-findings", 
      "list-invitations", 
      "list-ip-sets", 
      "list-members", 
      "list-organization-admin-accounts", 
      "list-publishing-destinations", 
      "list-tags-for-resource", 
      "list-threat-intel-sets", 
      "start-monitoring-members", 
      "stop-monitoring-members", 
      "tag-resource", 
      "unarchive-findings", 
      "untag-resource", 
      "update-detector", 
      "update-filter", 
      "update-findings-feedback", 
      "update-ip-set", 
      "update-organization-configuration", 
      "update-publishing-destination", 
      "update-threat-intel-set"
    );
   return $commands;
}
function Get-guardduty-accept-invitation{
   $flags=(
      "--detector-id", 
      "--master-id", 
      "--invitation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-archive-findings{
   $flags=(
      "--detector-id", 
      "--finding-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-create-detector{
   $flags=(
      "--enable", 
      "--no-enable", 
      "--client-token", 
      "--finding-publishing-frequency", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-create-filter{
   $flags=(
      "--detector-id", 
      "--name", 
      "--description", 
      "--action", 
      "--rank", 
      "--finding-criteria", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-create-ip-set{
   $flags=(
      "--detector-id", 
      "--name", 
      "--format", 
      "--location", 
      "--activate", 
      "--no-activate", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-create-members{
   $flags=(
      "--detector-id", 
      "--account-details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-create-publishing-destination{
   $flags=(
      "--detector-id", 
      "--destination-type", 
      "--destination-properties", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-create-sample-findings{
   $flags=(
      "--detector-id", 
      "--finding-types", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-create-threat-intel-set{
   $flags=(
      "--detector-id", 
      "--name", 
      "--format", 
      "--location", 
      "--activate", 
      "--no-activate", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-decline-invitations{
   $flags=(
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-delete-detector{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-delete-filter{
   $flags=(
      "--detector-id", 
      "--filter-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-delete-invitations{
   $flags=(
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-delete-ip-set{
   $flags=(
      "--detector-id", 
      "--ip-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-delete-members{
   $flags=(
      "--detector-id", 
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-delete-publishing-destination{
   $flags=(
      "--detector-id", 
      "--destination-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-delete-threat-intel-set{
   $flags=(
      "--detector-id", 
      "--threat-intel-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-describe-organization-configuration{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-describe-publishing-destination{
   $flags=(
      "--detector-id", 
      "--destination-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-disable-organization-admin-account{
   $flags=(
      "--admin-account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-disassociate-from-master-account{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-disassociate-members{
   $flags=(
      "--detector-id", 
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-enable-organization-admin-account{
   $flags=(
      "--admin-account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-detector{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-filter{
   $flags=(
      "--detector-id", 
      "--filter-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-findings{
   $flags=(
      "--detector-id", 
      "--finding-ids", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-findings-statistics{
   $flags=(
      "--detector-id", 
      "--finding-statistic-types", 
      "--finding-criteria", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-invitations-count{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-ip-set{
   $flags=(
      "--detector-id", 
      "--ip-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-master-account{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-members{
   $flags=(
      "--detector-id", 
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-get-threat-intel-set{
   $flags=(
      "--detector-id", 
      "--threat-intel-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-invite-members{
   $flags=(
      "--detector-id", 
      "--account-ids", 
      "--disable-email-notification", 
      "--no-disable-email-notification", 
      "--message", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-detectors{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-filters{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-findings{
   $flags=(
      "--detector-id", 
      "--finding-criteria", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-invitations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-ip-sets{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-members{
   $flags=(
      "--detector-id", 
      "--only-associated", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-organization-admin-accounts{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-publishing-destinations{
   $flags=(
      "--detector-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-list-threat-intel-sets{
   $flags=(
      "--detector-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-start-monitoring-members{
   $flags=(
      "--detector-id", 
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-stop-monitoring-members{
   $flags=(
      "--detector-id", 
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-unarchive-findings{
   $flags=(
      "--detector-id", 
      "--finding-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-update-detector{
   $flags=(
      "--detector-id", 
      "--enable", 
      "--no-enable", 
      "--finding-publishing-frequency", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-update-filter{
   $flags=(
      "--detector-id", 
      "--filter-name", 
      "--description", 
      "--action", 
      "--rank", 
      "--finding-criteria", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-update-findings-feedback{
   $flags=(
      "--detector-id", 
      "--finding-ids", 
      "--feedback", 
      "--comments", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-update-ip-set{
   $flags=(
      "--detector-id", 
      "--ip-set-id", 
      "--name", 
      "--location", 
      "--activate", 
      "--no-activate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-update-organization-configuration{
   $flags=(
      "--detector-id", 
      "--auto-enable", 
      "--no-auto-enable", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-update-publishing-destination{
   $flags=(
      "--detector-id", 
      "--destination-id", 
      "--destination-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-guardduty-update-threat-intel-set{
   $flags=(
      "--detector-id", 
      "--threat-intel-set-id", 
      "--name", 
      "--location", 
      "--activate", 
      "--no-activate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health{
   $commands=(
      "describe-affected-accounts-for-organization", 
      "describe-affected-entities", 
      "describe-affected-entities-for-organization", 
      "describe-entity-aggregates", 
      "describe-event-aggregates", 
      "describe-event-details", 
      "describe-event-details-for-organization", 
      "describe-event-types", 
      "describe-events", 
      "describe-events-for-organization", 
      "describe-health-service-status-for-organization", 
      "disable-health-service-access-for-organization", 
      "enable-health-service-access-for-organization"
    );
   return $commands;
}
function Get-health-describe-affected-accounts-for-organization{
   $flags=(
      "--event-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-affected-entities{
   $flags=(
      "--filter", 
      "--locale", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-affected-entities-for-organization{
   $flags=(
      "--organization-entity-filters", 
      "--locale", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-entity-aggregates{
   $flags=(
      "--event-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-event-aggregates{
   $flags=(
      "--filter", 
      "--aggregate-field", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-event-details{
   $flags=(
      "--event-arns", 
      "--locale", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-event-details-for-organization{
   $flags=(
      "--organization-event-detail-filters", 
      "--locale", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-event-types{
   $flags=(
      "--filter", 
      "--locale", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-events{
   $flags=(
      "--filter", 
      "--locale", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-events-for-organization{
   $flags=(
      "--filter", 
      "--locale", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-describe-health-service-status-for-organization{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-disable-health-service-access-for-organization{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-health-enable-health-service-access-for-organization{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-history{
   $commands=(
      "list", 
      "show"
    );
   return $commands;
}
function Get-history-list{
   $flags=("");
   return $flags;
}
function Get-history-show{
   $flags=(
      "--include", 
      "--exclude", 
      "--format"
    );
   return $flags;
}
function Get-iam{
   $commands=(
      "add-client-id-to-open-id-connect-provider", 
      "add-role-to-instance-profile", 
      "add-user-to-group", 
      "attach-group-policy", 
      "attach-role-policy", 
      "attach-user-policy", 
      "change-password", 
      "create-access-key", 
      "create-account-alias", 
      "create-group", 
      "create-instance-profile", 
      "create-login-profile", 
      "create-open-id-connect-provider", 
      "create-policy", 
      "create-policy-version", 
      "create-role", 
      "create-saml-provider", 
      "create-service-linked-role", 
      "create-service-specific-credential", 
      "create-user", 
      "create-virtual-mfa-device", 
      "deactivate-mfa-device", 
      "delete-access-key", 
      "delete-account-alias", 
      "delete-account-password-policy", 
      "delete-group", 
      "delete-group-policy", 
      "delete-instance-profile", 
      "delete-login-profile", 
      "delete-open-id-connect-provider", 
      "delete-policy", 
      "delete-policy-version", 
      "delete-role", 
      "delete-role-permissions-boundary", 
      "delete-role-policy", 
      "delete-saml-provider", 
      "delete-server-certificate", 
      "delete-service-linked-role", 
      "delete-service-specific-credential", 
      "delete-signing-certificate", 
      "delete-ssh-public-key", 
      "delete-user", 
      "delete-user-permissions-boundary", 
      "delete-user-policy", 
      "delete-virtual-mfa-device", 
      "detach-group-policy", 
      "detach-role-policy", 
      "detach-user-policy", 
      "enable-mfa-device", 
      "generate-credential-report", 
      "generate-organizations-access-report", 
      "generate-service-last-accessed-details", 
      "get-access-key-last-used", 
      "get-account-authorization-details", 
      "get-account-password-policy", 
      "get-account-summary", 
      "get-context-keys-for-custom-policy", 
      "get-context-keys-for-principal-policy", 
      "get-credential-report", 
      "get-group", 
      "get-group-policy", 
      "get-instance-profile", 
      "get-login-profile", 
      "get-open-id-connect-provider", 
      "get-organizations-access-report", 
      "get-policy", 
      "get-policy-version", 
      "get-role", 
      "get-role-policy", 
      "get-saml-provider", 
      "get-server-certificate", 
      "get-service-last-accessed-details", 
      "get-service-last-accessed-details-with-entities", 
      "get-service-linked-role-deletion-status", 
      "get-ssh-public-key", 
      "get-user", 
      "get-user-policy", 
      "list-access-keys", 
      "list-account-aliases", 
      "list-attached-group-policies", 
      "list-attached-role-policies", 
      "list-attached-user-policies", 
      "list-entities-for-policy", 
      "list-group-policies", 
      "list-groups", 
      "list-groups-for-user", 
      "list-instance-profiles", 
      "list-instance-profiles-for-role", 
      "list-mfa-devices", 
      "list-open-id-connect-providers", 
      "list-policies", 
      "list-policies-granting-service-access", 
      "list-policy-versions", 
      "list-role-policies", 
      "list-role-tags", 
      "list-roles", 
      "list-saml-providers", 
      "list-server-certificates", 
      "list-service-specific-credentials", 
      "list-signing-certificates", 
      "list-ssh-public-keys", 
      "list-user-policies", 
      "list-user-tags", 
      "list-users", 
      "list-virtual-mfa-devices", 
      "put-group-policy", 
      "put-role-permissions-boundary", 
      "put-role-policy", 
      "put-user-permissions-boundary", 
      "put-user-policy", 
      "remove-client-id-from-open-id-connect-provider", 
      "remove-role-from-instance-profile", 
      "remove-user-from-group", 
      "reset-service-specific-credential", 
      "resync-mfa-device", 
      "set-default-policy-version", 
      "set-security-token-service-preferences", 
      "simulate-custom-policy", 
      "simulate-principal-policy", 
      "tag-role", 
      "tag-user", 
      "untag-role", 
      "untag-user", 
      "update-access-key", 
      "update-account-password-policy", 
      "update-assume-role-policy", 
      "update-group", 
      "update-login-profile", 
      "update-open-id-connect-provider-thumbprint", 
      "update-role", 
      "update-role-description", 
      "update-saml-provider", 
      "update-server-certificate", 
      "update-service-specific-credential", 
      "update-signing-certificate", 
      "update-ssh-public-key", 
      "update-user", 
      "upload-server-certificate", 
      "upload-signing-certificate", 
      "upload-ssh-public-key", 
      "wait"
    );
   return $commands;
}
function Get-iam-add-client-id-to-open-id-connect-provider{
   $flags=(
      "--open-id-connect-provider-arn", 
      "--client-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-add-role-to-instance-profile{
   $flags=(
      "--instance-profile-name", 
      "--role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-add-user-to-group{
   $flags=(
      "--group-name", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-attach-group-policy{
   $flags=(
      "--group-name", 
      "--policy-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-attach-role-policy{
   $flags=(
      "--role-name", 
      "--policy-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-attach-user-policy{
   $flags=(
      "--user-name", 
      "--policy-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-change-password{
   $flags=(
      "--old-password", 
      "--new-password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-access-key{
   $flags=(
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-account-alias{
   $flags=(
      "--account-alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-group{
   $flags=(
      "--path", 
      "--group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-instance-profile{
   $flags=(
      "--instance-profile-name", 
      "--path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-login-profile{
   $flags=(
      "--user-name", 
      "--password", 
      "--password-reset-required", 
      "--no-password-reset-required", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-open-id-connect-provider{
   $flags=(
      "--url", 
      "--client-id-list", 
      "--thumbprint-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-policy{
   $flags=(
      "--policy-name", 
      "--path", 
      "--policy-document", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-policy-version{
   $flags=(
      "--policy-arn", 
      "--policy-document", 
      "--set-as-default", 
      "--no-set-as-default", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-role{
   $flags=(
      "--path", 
      "--role-name", 
      "--assume-role-policy-document", 
      "--description", 
      "--max-session-duration", 
      "--permissions-boundary", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-saml-provider{
   $flags=(
      "--saml-metadata-document", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-service-linked-role{
   $flags=(
      "--aws-service-name", 
      "--description", 
      "--custom-suffix", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-service-specific-credential{
   $flags=(
      "--user-name", 
      "--service-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-user{
   $flags=(
      "--path", 
      "--user-name", 
      "--permissions-boundary", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-create-virtual-mfa-device{
   $flags=(
      "--path", 
      "--virtual-mfa-device-name", 
      "--outfile", 
      "--bootstrap-method"
    );
   return $flags;
}
function Get-iam-deactivate-mfa-device{
   $flags=(
      "--user-name", 
      "--serial-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-access-key{
   $flags=(
      "--user-name", 
      "--access-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-account-alias{
   $flags=(
      "--account-alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-account-password-policy{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-group{
   $flags=(
      "--group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-group-policy{
   $flags=(
      "--group-name", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-instance-profile{
   $flags=(
      "--instance-profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-login-profile{
   $flags=(
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-open-id-connect-provider{
   $flags=(
      "--open-id-connect-provider-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-policy{
   $flags=(
      "--policy-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-policy-version{
   $flags=(
      "--policy-arn", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-role{
   $flags=(
      "--role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-role-permissions-boundary{
   $flags=(
      "--role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-role-policy{
   $flags=(
      "--role-name", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-saml-provider{
   $flags=(
      "--saml-provider-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-server-certificate{
   $flags=(
      "--server-certificate-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-service-linked-role{
   $flags=(
      "--role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-service-specific-credential{
   $flags=(
      "--user-name", 
      "--service-specific-credential-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-signing-certificate{
   $flags=(
      "--user-name", 
      "--certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-ssh-public-key{
   $flags=(
      "--user-name", 
      "--ssh-public-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-user{
   $flags=(
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-user-permissions-boundary{
   $flags=(
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-user-policy{
   $flags=(
      "--user-name", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-delete-virtual-mfa-device{
   $flags=(
      "--serial-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-detach-group-policy{
   $flags=(
      "--group-name", 
      "--policy-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-detach-role-policy{
   $flags=(
      "--role-name", 
      "--policy-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-detach-user-policy{
   $flags=(
      "--user-name", 
      "--policy-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-enable-mfa-device{
   $flags=(
      "--user-name", 
      "--serial-number", 
      "--authentication-code", 
      "--authentication-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-generate-credential-report{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-generate-organizations-access-report{
   $flags=(
      "--entity-path", 
      "--organizations-policy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-generate-service-last-accessed-details{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-access-key-last-used{
   $flags=(
      "--access-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-account-authorization-details{
   $flags=(
      "--filter", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-account-password-policy{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-account-summary{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-context-keys-for-custom-policy{
   $flags=(
      "--policy-input-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-context-keys-for-principal-policy{
   $flags=(
      "--policy-source-arn", 
      "--policy-input-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-credential-report{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-group{
   $flags=(
      "--group-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-group-policy{
   $flags=(
      "--group-name", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-instance-profile{
   $flags=(
      "--instance-profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-login-profile{
   $flags=(
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-open-id-connect-provider{
   $flags=(
      "--open-id-connect-provider-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-organizations-access-report{
   $flags=(
      "--job-id", 
      "--max-items", 
      "--marker", 
      "--sort-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-policy{
   $flags=(
      "--policy-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-policy-version{
   $flags=(
      "--policy-arn", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-role{
   $flags=(
      "--role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-role-policy{
   $flags=(
      "--role-name", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-saml-provider{
   $flags=(
      "--saml-provider-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-server-certificate{
   $flags=(
      "--server-certificate-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-service-last-accessed-details{
   $flags=(
      "--job-id", 
      "--max-items", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-service-last-accessed-details-with-entities{
   $flags=(
      "--job-id", 
      "--service-namespace", 
      "--max-items", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-service-linked-role-deletion-status{
   $flags=(
      "--deletion-task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-ssh-public-key{
   $flags=(
      "--user-name", 
      "--ssh-public-key-id", 
      "--encoding", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-user{
   $flags=(
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-get-user-policy{
   $flags=(
      "--user-name", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-access-keys{
   $flags=(
      "--user-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-account-aliases{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-attached-group-policies{
   $flags=(
      "--group-name", 
      "--path-prefix", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-attached-role-policies{
   $flags=(
      "--role-name", 
      "--path-prefix", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-attached-user-policies{
   $flags=(
      "--user-name", 
      "--path-prefix", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-entities-for-policy{
   $flags=(
      "--policy-arn", 
      "--entity-filter", 
      "--path-prefix", 
      "--policy-usage-filter", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-group-policies{
   $flags=(
      "--group-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-groups{
   $flags=(
      "--path-prefix", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-groups-for-user{
   $flags=(
      "--user-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-instance-profiles{
   $flags=(
      "--path-prefix", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-instance-profiles-for-role{
   $flags=(
      "--role-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-mfa-devices{
   $flags=(
      "--user-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-open-id-connect-providers{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-policies{
   $flags=(
      "--scope", 
      "--only-attached", 
      "--no-only-attached", 
      "--path-prefix", 
      "--policy-usage-filter", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-policies-granting-service-access{
   $flags=(
      "--marker", 
      "--arn", 
      "--service-namespaces", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-policy-versions{
   $flags=(
      "--policy-arn", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-role-policies{
   $flags=(
      "--role-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-role-tags{
   $flags=(
      "--role-name", 
      "--marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-roles{
   $flags=(
      "--path-prefix", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-saml-providers{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-server-certificates{
   $flags=(
      "--path-prefix", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-service-specific-credentials{
   $flags=(
      "--user-name", 
      "--service-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-signing-certificates{
   $flags=(
      "--user-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-ssh-public-keys{
   $flags=(
      "--user-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-user-policies{
   $flags=(
      "--user-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-user-tags{
   $flags=(
      "--user-name", 
      "--marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-users{
   $flags=(
      "--path-prefix", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-list-virtual-mfa-devices{
   $flags=(
      "--assignment-status", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-put-group-policy{
   $flags=(
      "--group-name", 
      "--policy-name", 
      "--policy-document", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-put-role-permissions-boundary{
   $flags=(
      "--role-name", 
      "--permissions-boundary", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-put-role-policy{
   $flags=(
      "--role-name", 
      "--policy-name", 
      "--policy-document", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-put-user-permissions-boundary{
   $flags=(
      "--user-name", 
      "--permissions-boundary", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-put-user-policy{
   $flags=(
      "--user-name", 
      "--policy-name", 
      "--policy-document", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-remove-client-id-from-open-id-connect-provider{
   $flags=(
      "--open-id-connect-provider-arn", 
      "--client-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-remove-role-from-instance-profile{
   $flags=(
      "--instance-profile-name", 
      "--role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-remove-user-from-group{
   $flags=(
      "--group-name", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-reset-service-specific-credential{
   $flags=(
      "--user-name", 
      "--service-specific-credential-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-resync-mfa-device{
   $flags=(
      "--user-name", 
      "--serial-number", 
      "--authentication-code", 
      "--authentication-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-set-default-policy-version{
   $flags=(
      "--policy-arn", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-set-security-token-service-preferences{
   $flags=(
      "--global-endpoint-token-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-simulate-custom-policy{
   $flags=(
      "--policy-input-list", 
      "--permissions-boundary-policy-input-list", 
      "--action-names", 
      "--resource-arns", 
      "--resource-policy", 
      "--resource-owner", 
      "--caller-arn", 
      "--context-entries", 
      "--resource-handling-option", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-simulate-principal-policy{
   $flags=(
      "--policy-source-arn", 
      "--policy-input-list", 
      "--permissions-boundary-policy-input-list", 
      "--action-names", 
      "--resource-arns", 
      "--resource-policy", 
      "--resource-owner", 
      "--caller-arn", 
      "--context-entries", 
      "--resource-handling-option", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-tag-role{
   $flags=(
      "--role-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-tag-user{
   $flags=(
      "--user-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-untag-role{
   $flags=(
      "--role-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-untag-user{
   $flags=(
      "--user-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-access-key{
   $flags=(
      "--user-name", 
      "--access-key-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-account-password-policy{
   $flags=(
      "--minimum-password-length", 
      "--require-symbols", 
      "--no-require-symbols", 
      "--require-numbers", 
      "--no-require-numbers", 
      "--require-uppercase-characters", 
      "--no-require-uppercase-characters", 
      "--require-lowercase-characters", 
      "--no-require-lowercase-characters", 
      "--allow-users-to-change-password", 
      "--no-allow-users-to-change-password", 
      "--max-password-age", 
      "--password-reuse-prevention", 
      "--hard-expiry", 
      "--no-hard-expiry", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-assume-role-policy{
   $flags=(
      "--role-name", 
      "--policy-document", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-group{
   $flags=(
      "--group-name", 
      "--new-path", 
      "--new-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-login-profile{
   $flags=(
      "--user-name", 
      "--password", 
      "--password-reset-required", 
      "--no-password-reset-required", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-open-id-connect-provider-thumbprint{
   $flags=(
      "--open-id-connect-provider-arn", 
      "--thumbprint-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-role{
   $flags=(
      "--role-name", 
      "--description", 
      "--max-session-duration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-role-description{
   $flags=(
      "--role-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-saml-provider{
   $flags=(
      "--saml-metadata-document", 
      "--saml-provider-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-server-certificate{
   $flags=(
      "--server-certificate-name", 
      "--new-path", 
      "--new-server-certificate-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-service-specific-credential{
   $flags=(
      "--user-name", 
      "--service-specific-credential-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-signing-certificate{
   $flags=(
      "--user-name", 
      "--certificate-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-ssh-public-key{
   $flags=(
      "--user-name", 
      "--ssh-public-key-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-update-user{
   $flags=(
      "--user-name", 
      "--new-path", 
      "--new-user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-upload-server-certificate{
   $flags=(
      "--path", 
      "--server-certificate-name", 
      "--certificate-body", 
      "--private-key", 
      "--certificate-chain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-upload-signing-certificate{
   $flags=(
      "--user-name", 
      "--certificate-body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-upload-ssh-public-key{
   $flags=(
      "--user-name", 
      "--ssh-public-key-body", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iam-wait{
   $flags=("");
   return $flags;
}
function Get-imagebuilder{
   $commands=(
      "cancel-image-creation", 
      "create-component", 
      "create-distribution-configuration", 
      "create-image", 
      "create-image-pipeline", 
      "create-image-recipe", 
      "create-infrastructure-configuration", 
      "delete-component", 
      "delete-distribution-configuration", 
      "delete-image", 
      "delete-image-pipeline", 
      "delete-image-recipe", 
      "delete-infrastructure-configuration", 
      "get-component", 
      "get-component-policy", 
      "get-distribution-configuration", 
      "get-image", 
      "get-image-pipeline", 
      "get-image-policy", 
      "get-image-recipe", 
      "get-image-recipe-policy", 
      "get-infrastructure-configuration", 
      "import-component", 
      "list-component-build-versions", 
      "list-components", 
      "list-distribution-configurations", 
      "list-image-build-versions", 
      "list-image-pipeline-images", 
      "list-image-pipelines", 
      "list-image-recipes", 
      "list-images", 
      "list-infrastructure-configurations", 
      "list-tags-for-resource", 
      "put-component-policy", 
      "put-image-policy", 
      "put-image-recipe-policy", 
      "start-image-pipeline-execution", 
      "tag-resource", 
      "untag-resource", 
      "update-distribution-configuration", 
      "update-image-pipeline", 
      "update-infrastructure-configuration"
    );
   return $commands;
}
function Get-imagebuilder-cancel-image-creation{
   $flags=(
      "--image-build-version-arn", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-create-component{
   $flags=(
      "--name", 
      "--semantic-version", 
      "--description", 
      "--change-description", 
      "--platform", 
      "--data", 
      "--uri", 
      "--kms-key-id", 
      "--tags", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-create-distribution-configuration{
   $flags=(
      "--name", 
      "--description", 
      "--distributions", 
      "--tags", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-create-image{
   $flags=(
      "--image-recipe-arn", 
      "--distribution-configuration-arn", 
      "--infrastructure-configuration-arn", 
      "--image-tests-configuration", 
      "--enhanced-image-metadata-enabled", 
      "--no-enhanced-image-metadata-enabled", 
      "--tags", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-create-image-pipeline{
   $flags=(
      "--name", 
      "--description", 
      "--image-recipe-arn", 
      "--infrastructure-configuration-arn", 
      "--distribution-configuration-arn", 
      "--image-tests-configuration", 
      "--enhanced-image-metadata-enabled", 
      "--no-enhanced-image-metadata-enabled", 
      "--schedule", 
      "--status", 
      "--tags", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-create-image-recipe{
   $flags=(
      "--name", 
      "--description", 
      "--semantic-version", 
      "--components", 
      "--parent-image", 
      "--block-device-mappings", 
      "--tags", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-create-infrastructure-configuration{
   $flags=(
      "--name", 
      "--description", 
      "--instance-types", 
      "--instance-profile-name", 
      "--security-group-ids", 
      "--subnet-id", 
      "--logging", 
      "--key-pair", 
      "--terminate-instance-on-failure", 
      "--no-terminate-instance-on-failure", 
      "--sns-topic-arn", 
      "--tags", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-delete-component{
   $flags=(
      "--component-build-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-delete-distribution-configuration{
   $flags=(
      "--distribution-configuration-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-delete-image{
   $flags=(
      "--image-build-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-delete-image-pipeline{
   $flags=(
      "--image-pipeline-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-delete-image-recipe{
   $flags=(
      "--image-recipe-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-delete-infrastructure-configuration{
   $flags=(
      "--infrastructure-configuration-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-component{
   $flags=(
      "--component-build-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-component-policy{
   $flags=(
      "--component-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-distribution-configuration{
   $flags=(
      "--distribution-configuration-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-image{
   $flags=(
      "--image-build-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-image-pipeline{
   $flags=(
      "--image-pipeline-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-image-policy{
   $flags=(
      "--image-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-image-recipe{
   $flags=(
      "--image-recipe-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-image-recipe-policy{
   $flags=(
      "--image-recipe-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-get-infrastructure-configuration{
   $flags=(
      "--infrastructure-configuration-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-import-component{
   $flags=(
      "--name", 
      "--semantic-version", 
      "--description", 
      "--change-description", 
      "--type", 
      "--format", 
      "--platform", 
      "--data", 
      "--uri", 
      "--kms-key-id", 
      "--tags", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-component-build-versions{
   $flags=(
      "--component-version-arn", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-components{
   $flags=(
      "--owner", 
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-distribution-configurations{
   $flags=(
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-image-build-versions{
   $flags=(
      "--image-version-arn", 
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-image-pipeline-images{
   $flags=(
      "--image-pipeline-arn", 
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-image-pipelines{
   $flags=(
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-image-recipes{
   $flags=(
      "--owner", 
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-images{
   $flags=(
      "--owner", 
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-infrastructure-configurations{
   $flags=(
      "--filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-put-component-policy{
   $flags=(
      "--component-arn", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-put-image-policy{
   $flags=(
      "--image-arn", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-put-image-recipe-policy{
   $flags=(
      "--image-recipe-arn", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-start-image-pipeline-execution{
   $flags=(
      "--image-pipeline-arn", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-update-distribution-configuration{
   $flags=(
      "--distribution-configuration-arn", 
      "--description", 
      "--distributions", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-update-image-pipeline{
   $flags=(
      "--image-pipeline-arn", 
      "--description", 
      "--image-recipe-arn", 
      "--infrastructure-configuration-arn", 
      "--distribution-configuration-arn", 
      "--image-tests-configuration", 
      "--enhanced-image-metadata-enabled", 
      "--no-enhanced-image-metadata-enabled", 
      "--schedule", 
      "--status", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-imagebuilder-update-infrastructure-configuration{
   $flags=(
      "--infrastructure-configuration-arn", 
      "--description", 
      "--instance-types", 
      "--instance-profile-name", 
      "--security-group-ids", 
      "--subnet-id", 
      "--logging", 
      "--key-pair", 
      "--terminate-instance-on-failure", 
      "--no-terminate-instance-on-failure", 
      "--sns-topic-arn", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-importexport{
   $commands=(
      "cancel-job", 
      "create-job", 
      "get-shipping-label", 
      "get-status", 
      "list-jobs", 
      "update-job"
    );
   return $commands;
}
function Get-importexport-cancel-job{
   $flags=(
      "--job-id", 
      "--api-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-importexport-create-job{
   $flags=(
      "--job-type", 
      "--manifest", 
      "--manifest-addendum", 
      "--validate-only", 
      "--no-validate-only", 
      "--api-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-importexport-get-shipping-label{
   $flags=(
      "--job-ids", 
      "--name", 
      "--company", 
      "--phone-number", 
      "--country", 
      "--state-or-province", 
      "--city", 
      "--postal-code", 
      "--street", 
      "--street", 
      "--street", 
      "--api-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-importexport-get-status{
   $flags=(
      "--job-id", 
      "--api-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-importexport-list-jobs{
   $flags=(
      "--api-version", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-importexport-update-job{
   $flags=(
      "--job-id", 
      "--manifest", 
      "--job-type", 
      "--validate-only", 
      "--no-validate-only", 
      "--api-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector{
   $commands=(
      "add-attributes-to-findings", 
      "create-assessment-target", 
      "create-assessment-template", 
      "create-exclusions-preview", 
      "create-resource-group", 
      "delete-assessment-run", 
      "delete-assessment-target", 
      "delete-assessment-template", 
      "describe-assessment-runs", 
      "describe-assessment-targets", 
      "describe-assessment-templates", 
      "describe-cross-account-access-role", 
      "describe-exclusions", 
      "describe-findings", 
      "describe-resource-groups", 
      "describe-rules-packages", 
      "get-assessment-report", 
      "get-exclusions-preview", 
      "get-telemetry-metadata", 
      "list-assessment-run-agents", 
      "list-assessment-runs", 
      "list-assessment-targets", 
      "list-assessment-templates", 
      "list-event-subscriptions", 
      "list-exclusions", 
      "list-findings", 
      "list-rules-packages", 
      "list-tags-for-resource", 
      "preview-agents", 
      "register-cross-account-access-role", 
      "remove-attributes-from-findings", 
      "set-tags-for-resource", 
      "start-assessment-run", 
      "stop-assessment-run", 
      "subscribe-to-event", 
      "unsubscribe-from-event", 
      "update-assessment-target"
    );
   return $commands;
}
function Get-inspector-add-attributes-to-findings{
   $flags=(
      "--finding-arns", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-create-assessment-target{
   $flags=(
      "--assessment-target-name", 
      "--resource-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-create-assessment-template{
   $flags=(
      "--assessment-target-arn", 
      "--assessment-template-name", 
      "--duration-in-seconds", 
      "--rules-package-arns", 
      "--user-attributes-for-findings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-create-exclusions-preview{
   $flags=(
      "--assessment-template-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-create-resource-group{
   $flags=(
      "--resource-group-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-delete-assessment-run{
   $flags=(
      "--assessment-run-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-delete-assessment-target{
   $flags=(
      "--assessment-target-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-delete-assessment-template{
   $flags=(
      "--assessment-template-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-describe-assessment-runs{
   $flags=(
      "--assessment-run-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-describe-assessment-targets{
   $flags=(
      "--assessment-target-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-describe-assessment-templates{
   $flags=(
      "--assessment-template-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-describe-cross-account-access-role{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-describe-exclusions{
   $flags=(
      "--exclusion-arns", 
      "--locale", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-describe-findings{
   $flags=(
      "--finding-arns", 
      "--locale", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-describe-resource-groups{
   $flags=(
      "--resource-group-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-describe-rules-packages{
   $flags=(
      "--rules-package-arns", 
      "--locale", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-get-assessment-report{
   $flags=(
      "--assessment-run-arn", 
      "--report-file-format", 
      "--report-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-get-exclusions-preview{
   $flags=(
      "--assessment-template-arn", 
      "--preview-token", 
      "--next-token", 
      "--max-results", 
      "--locale", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-get-telemetry-metadata{
   $flags=(
      "--assessment-run-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-assessment-run-agents{
   $flags=(
      "--assessment-run-arn", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-assessment-runs{
   $flags=(
      "--assessment-template-arns", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-assessment-targets{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-assessment-templates{
   $flags=(
      "--assessment-target-arns", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-event-subscriptions{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-exclusions{
   $flags=(
      "--assessment-run-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-findings{
   $flags=(
      "--assessment-run-arns", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-rules-packages{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-preview-agents{
   $flags=(
      "--preview-agents-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-register-cross-account-access-role{
   $flags=(
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-remove-attributes-from-findings{
   $flags=(
      "--finding-arns", 
      "--attribute-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-set-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-start-assessment-run{
   $flags=(
      "--assessment-template-arn", 
      "--assessment-run-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-stop-assessment-run{
   $flags=(
      "--assessment-run-arn", 
      "--stop-action", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-subscribe-to-event{
   $flags=(
      "--resource-arn", 
      "--event", 
      "--topic-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-unsubscribe-from-event{
   $flags=(
      "--resource-arn", 
      "--event", 
      "--topic-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-inspector-update-assessment-target{
   $flags=(
      "--assessment-target-arn", 
      "--assessment-target-name", 
      "--resource-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot{
   $commands=(
      "accept-certificate-transfer", 
      "add-thing-to-billing-group", 
      "add-thing-to-thing-group", 
      "associate-targets-with-job", 
      "attach-policy", 
      "attach-security-profile", 
      "attach-thing-principal", 
      "cancel-audit-mitigation-actions-task", 
      "cancel-audit-task", 
      "cancel-certificate-transfer", 
      "cancel-job", 
      "cancel-job-execution", 
      "clear-default-authorizer", 
      "confirm-topic-rule-destination", 
      "create-authorizer", 
      "create-billing-group", 
      "create-certificate-from-csr", 
      "create-dimension", 
      "create-domain-configuration", 
      "create-dynamic-thing-group", 
      "create-job", 
      "create-keys-and-certificate", 
      "create-mitigation-action", 
      "create-ota-update", 
      "create-policy", 
      "create-policy-version", 
      "create-provisioning-claim", 
      "create-provisioning-template", 
      "create-provisioning-template-version", 
      "create-role-alias", 
      "create-scheduled-audit", 
      "create-security-profile", 
      "create-stream", 
      "create-thing", 
      "create-thing-group", 
      "create-thing-type", 
      "create-topic-rule", 
      "create-topic-rule-destination", 
      "delete-account-audit-configuration", 
      "delete-authorizer", 
      "delete-billing-group", 
      "delete-ca-certificate", 
      "delete-certificate", 
      "delete-dimension", 
      "delete-domain-configuration", 
      "delete-dynamic-thing-group", 
      "delete-job", 
      "delete-job-execution", 
      "delete-mitigation-action", 
      "delete-ota-update", 
      "delete-policy", 
      "delete-policy-version", 
      "delete-provisioning-template", 
      "delete-provisioning-template-version", 
      "delete-registration-code", 
      "delete-role-alias", 
      "delete-scheduled-audit", 
      "delete-security-profile", 
      "delete-stream", 
      "delete-thing", 
      "delete-thing-group", 
      "delete-thing-type", 
      "delete-topic-rule", 
      "delete-topic-rule-destination", 
      "delete-v2-logging-level", 
      "deprecate-thing-type", 
      "describe-account-audit-configuration", 
      "describe-audit-finding", 
      "describe-audit-mitigation-actions-task", 
      "describe-audit-task", 
      "describe-authorizer", 
      "describe-billing-group", 
      "describe-ca-certificate", 
      "describe-certificate", 
      "describe-default-authorizer", 
      "describe-dimension", 
      "describe-domain-configuration", 
      "describe-endpoint", 
      "describe-event-configurations", 
      "describe-index", 
      "describe-job", 
      "describe-job-execution", 
      "describe-mitigation-action", 
      "describe-provisioning-template", 
      "describe-provisioning-template-version", 
      "describe-role-alias", 
      "describe-scheduled-audit", 
      "describe-security-profile", 
      "describe-stream", 
      "describe-thing", 
      "describe-thing-group", 
      "describe-thing-registration-task", 
      "describe-thing-type", 
      "detach-policy", 
      "detach-security-profile", 
      "detach-thing-principal", 
      "disable-topic-rule", 
      "enable-topic-rule", 
      "get-cardinality", 
      "get-effective-policies", 
      "get-indexing-configuration", 
      "get-job-document", 
      "get-logging-options", 
      "get-ota-update", 
      "get-percentiles", 
      "get-policy", 
      "get-policy-version", 
      "get-registration-code", 
      "get-statistics", 
      "get-topic-rule", 
      "get-topic-rule-destination", 
      "get-v2-logging-options", 
      "list-active-violations", 
      "list-attached-policies", 
      "list-audit-findings", 
      "list-audit-mitigation-actions-executions", 
      "list-audit-mitigation-actions-tasks", 
      "list-audit-tasks", 
      "list-authorizers", 
      "list-billing-groups", 
      "list-ca-certificates", 
      "list-certificates", 
      "list-certificates-by-ca", 
      "list-dimensions", 
      "list-domain-configurations", 
      "list-indices", 
      "list-job-executions-for-job", 
      "list-job-executions-for-thing", 
      "list-jobs", 
      "list-mitigation-actions", 
      "list-ota-updates", 
      "list-outgoing-certificates", 
      "list-policies", 
      "list-policy-versions", 
      "list-principal-things", 
      "list-provisioning-template-versions", 
      "list-provisioning-templates", 
      "list-role-aliases", 
      "list-scheduled-audits", 
      "list-security-profiles", 
      "list-security-profiles-for-target", 
      "list-streams", 
      "list-tags-for-resource", 
      "list-targets-for-policy", 
      "list-targets-for-security-profile", 
      "list-thing-groups", 
      "list-thing-groups-for-thing", 
      "list-thing-principals", 
      "list-thing-registration-task-reports", 
      "list-thing-registration-tasks", 
      "list-thing-types", 
      "list-things", 
      "list-things-in-billing-group", 
      "list-things-in-thing-group", 
      "list-topic-rule-destinations", 
      "list-topic-rules", 
      "list-v2-logging-levels", 
      "list-violation-events", 
      "register-ca-certificate", 
      "register-certificate", 
      "register-certificate-without-ca", 
      "register-thing", 
      "reject-certificate-transfer", 
      "remove-thing-from-billing-group", 
      "remove-thing-from-thing-group", 
      "replace-topic-rule", 
      "search-index", 
      "set-default-authorizer", 
      "set-default-policy-version", 
      "set-logging-options", 
      "set-v2-logging-level", 
      "set-v2-logging-options", 
      "start-audit-mitigation-actions-task", 
      "start-on-demand-audit-task", 
      "start-thing-registration-task", 
      "stop-thing-registration-task", 
      "tag-resource", 
      "test-authorization", 
      "test-invoke-authorizer", 
      "transfer-certificate", 
      "untag-resource", 
      "update-account-audit-configuration", 
      "update-authorizer", 
      "update-billing-group", 
      "update-ca-certificate", 
      "update-certificate", 
      "update-dimension", 
      "update-domain-configuration", 
      "update-dynamic-thing-group", 
      "update-event-configurations", 
      "update-indexing-configuration", 
      "update-job", 
      "update-mitigation-action", 
      "update-provisioning-template", 
      "update-role-alias", 
      "update-scheduled-audit", 
      "update-security-profile", 
      "update-stream", 
      "update-thing", 
      "update-thing-group", 
      "update-thing-groups-for-thing", 
      "update-topic-rule-destination", 
      "validate-security-profile-behaviors"
    );
   return $commands;
}
function Get-iot-accept-certificate-transfer{
   $flags=(
      "--certificate-id", 
      "--set-as-active", 
      "--no-set-as-active", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-add-thing-to-billing-group{
   $flags=(
      "--billing-group-name", 
      "--billing-group-arn", 
      "--thing-name", 
      "--thing-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-add-thing-to-thing-group{
   $flags=(
      "--thing-group-name", 
      "--thing-group-arn", 
      "--thing-name", 
      "--thing-arn", 
      "--override-dynamic-groups", 
      "--no-override-dynamic-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-associate-targets-with-job{
   $flags=(
      "--targets", 
      "--job-id", 
      "--comment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-attach-policy{
   $flags=(
      "--policy-name", 
      "--target", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-attach-security-profile{
   $flags=(
      "--security-profile-name", 
      "--security-profile-target-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-attach-thing-principal{
   $flags=(
      "--thing-name", 
      "--principal", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-cancel-audit-mitigation-actions-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-cancel-audit-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-cancel-certificate-transfer{
   $flags=(
      "--certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-cancel-job{
   $flags=(
      "--job-id", 
      "--reason-code", 
      "--comment", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-cancel-job-execution{
   $flags=(
      "--job-id", 
      "--thing-name", 
      "--force", 
      "--no-force", 
      "--expected-version", 
      "--status-details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-clear-default-authorizer{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-confirm-topic-rule-destination{
   $flags=(
      "--confirmation-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-authorizer{
   $flags=(
      "--authorizer-name", 
      "--authorizer-function-arn", 
      "--token-key-name", 
      "--token-signing-public-keys", 
      "--status", 
      "--tags", 
      "--signing-disabled", 
      "--no-signing-disabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-billing-group{
   $flags=(
      "--billing-group-name", 
      "--billing-group-properties", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-certificate-from-csr{
   $flags=(
      "--certificate-signing-request", 
      "--set-as-active", 
      "--no-set-as-active", 
      "--certificate-pem-outfile", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-dimension{
   $flags=(
      "--name", 
      "--type", 
      "--string-values", 
      "--tags", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-domain-configuration{
   $flags=(
      "--domain-configuration-name", 
      "--domain-name", 
      "--server-certificate-arns", 
      "--validation-certificate-arn", 
      "--authorizer-config", 
      "--service-type", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-dynamic-thing-group{
   $flags=(
      "--thing-group-name", 
      "--thing-group-properties", 
      "--index-name", 
      "--query-string", 
      "--query-version", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-job{
   $flags=(
      "--job-id", 
      "--targets", 
      "--document-source", 
      "--document", 
      "--description", 
      "--presigned-url-config", 
      "--target-selection", 
      "--job-executions-rollout-config", 
      "--abort-config", 
      "--timeout-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-keys-and-certificate{
   $flags=(
      "--set-as-active", 
      "--no-set-as-active", 
      "--certificate-pem-outfile", 
      "--public-key-outfile", 
      "--private-key-outfile", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-mitigation-action{
   $flags=(
      "--action-name", 
      "--role-arn", 
      "--action-params", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-ota-update{
   $flags=(
      "--ota-update-id", 
      "--description", 
      "--targets", 
      "--protocols", 
      "--target-selection", 
      "--aws-job-executions-rollout-config", 
      "--aws-job-presigned-url-config", 
      "--files", 
      "--role-arn", 
      "--additional-parameters", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-policy{
   $flags=(
      "--policy-name", 
      "--policy-document", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-policy-version{
   $flags=(
      "--policy-name", 
      "--policy-document", 
      "--set-as-default", 
      "--no-set-as-default", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-provisioning-claim{
   $flags=(
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-provisioning-template{
   $flags=(
      "--template-name", 
      "--description", 
      "--template-body", 
      "--enabled", 
      "--no-enabled", 
      "--provisioning-role-arn", 
      "--pre-provisioning-hook", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-provisioning-template-version{
   $flags=(
      "--template-name", 
      "--template-body", 
      "--set-as-default", 
      "--no-set-as-default", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-role-alias{
   $flags=(
      "--role-alias", 
      "--role-arn", 
      "--credential-duration-seconds", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-scheduled-audit{
   $flags=(
      "--frequency", 
      "--day-of-month", 
      "--day-of-week", 
      "--target-check-names", 
      "--scheduled-audit-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-security-profile{
   $flags=(
      "--security-profile-name", 
      "--security-profile-description", 
      "--behaviors", 
      "--alert-targets", 
      "--additional-metrics-to-retain", 
      "--additional-metrics-to-retain-v", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-stream{
   $flags=(
      "--stream-id", 
      "--description", 
      "--files", 
      "--role-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-thing{
   $flags=(
      "--thing-name", 
      "--thing-type-name", 
      "--attribute-payload", 
      "--billing-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-thing-group{
   $flags=(
      "--thing-group-name", 
      "--parent-group-name", 
      "--thing-group-properties", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-thing-type{
   $flags=(
      "--thing-type-name", 
      "--thing-type-properties", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-topic-rule{
   $flags=(
      "--rule-name", 
      "--topic-rule-payload", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-create-topic-rule-destination{
   $flags=(
      "--destination-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-account-audit-configuration{
   $flags=(
      "--delete-scheduled-audits", 
      "--no-delete-scheduled-audits", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-authorizer{
   $flags=(
      "--authorizer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-billing-group{
   $flags=(
      "--billing-group-name", 
      "--expected-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-ca-certificate{
   $flags=(
      "--certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-certificate{
   $flags=(
      "--certificate-id", 
      "--force-delete", 
      "--no-force-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-dimension{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-domain-configuration{
   $flags=(
      "--domain-configuration-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-dynamic-thing-group{
   $flags=(
      "--thing-group-name", 
      "--expected-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-job{
   $flags=(
      "--job-id", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-job-execution{
   $flags=(
      "--job-id", 
      "--thing-name", 
      "--execution-number", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-mitigation-action{
   $flags=(
      "--action-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-ota-update{
   $flags=(
      "--ota-update-id", 
      "--delete-stream", 
      "--no-delete-stream", 
      "--force-delete-aws-job", 
      "--no-force-delete-aws-job", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-policy{
   $flags=(
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-policy-version{
   $flags=(
      "--policy-name", 
      "--policy-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-provisioning-template{
   $flags=(
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-provisioning-template-version{
   $flags=(
      "--template-name", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-registration-code{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-role-alias{
   $flags=(
      "--role-alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-scheduled-audit{
   $flags=(
      "--scheduled-audit-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-security-profile{
   $flags=(
      "--security-profile-name", 
      "--expected-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-stream{
   $flags=(
      "--stream-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-thing{
   $flags=(
      "--thing-name", 
      "--expected-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-thing-group{
   $flags=(
      "--thing-group-name", 
      "--expected-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-thing-type{
   $flags=(
      "--thing-type-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-topic-rule{
   $flags=(
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-topic-rule-destination{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-delete-v2-logging-level{
   $flags=(
      "--target-type", 
      "--target-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-deprecate-thing-type{
   $flags=(
      "--thing-type-name", 
      "--undo-deprecate", 
      "--no-undo-deprecate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-account-audit-configuration{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-audit-finding{
   $flags=(
      "--finding-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-audit-mitigation-actions-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-audit-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-authorizer{
   $flags=(
      "--authorizer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-billing-group{
   $flags=(
      "--billing-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-ca-certificate{
   $flags=(
      "--certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-certificate{
   $flags=(
      "--certificate-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-default-authorizer{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-dimension{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-domain-configuration{
   $flags=(
      "--domain-configuration-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-endpoint{
   $flags=(
      "--endpoint-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-event-configurations{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-index{
   $flags=(
      "--index-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-job-execution{
   $flags=(
      "--job-id", 
      "--thing-name", 
      "--execution-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-mitigation-action{
   $flags=(
      "--action-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-provisioning-template{
   $flags=(
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-provisioning-template-version{
   $flags=(
      "--template-name", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-role-alias{
   $flags=(
      "--role-alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-scheduled-audit{
   $flags=(
      "--scheduled-audit-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-security-profile{
   $flags=(
      "--security-profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-stream{
   $flags=(
      "--stream-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-thing{
   $flags=(
      "--thing-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-thing-group{
   $flags=(
      "--thing-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-thing-registration-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-describe-thing-type{
   $flags=(
      "--thing-type-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-detach-policy{
   $flags=(
      "--policy-name", 
      "--target", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-detach-security-profile{
   $flags=(
      "--security-profile-name", 
      "--security-profile-target-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-detach-thing-principal{
   $flags=(
      "--thing-name", 
      "--principal", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-disable-topic-rule{
   $flags=(
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-enable-topic-rule{
   $flags=(
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-cardinality{
   $flags=(
      "--index-name", 
      "--query-string", 
      "--aggregation-field", 
      "--query-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-effective-policies{
   $flags=(
      "--principal", 
      "--cognito-identity-pool-id", 
      "--thing-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-indexing-configuration{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-job-document{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-logging-options{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-ota-update{
   $flags=(
      "--ota-update-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-percentiles{
   $flags=(
      "--index-name", 
      "--query-string", 
      "--aggregation-field", 
      "--query-version", 
      "--percents", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-policy{
   $flags=(
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-policy-version{
   $flags=(
      "--policy-name", 
      "--policy-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-registration-code{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-statistics{
   $flags=(
      "--index-name", 
      "--query-string", 
      "--aggregation-field", 
      "--query-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-topic-rule{
   $flags=(
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-topic-rule-destination{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-get-v2-logging-options{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-active-violations{
   $flags=(
      "--thing-name", 
      "--security-profile-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-attached-policies{
   $flags=(
      "--target", 
      "--recursive", 
      "--no-recursive", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-audit-findings{
   $flags=(
      "--task-id", 
      "--check-name", 
      "--resource-identifier", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-audit-mitigation-actions-executions{
   $flags=(
      "--task-id", 
      "--action-status", 
      "--finding-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-audit-mitigation-actions-tasks{
   $flags=(
      "--audit-task-id", 
      "--finding-id", 
      "--task-status", 
      "--max-results", 
      "--next-token", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-audit-tasks{
   $flags=(
      "--start-time", 
      "--end-time", 
      "--task-type", 
      "--task-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-authorizers{
   $flags=(
      "--page-size", 
      "--ascending-order", 
      "--no-ascending-order", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-billing-groups{
   $flags=(
      "--name-prefix-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-ca-certificates{
   $flags=(
      "--page-size", 
      "--ascending-order", 
      "--no-ascending-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-certificates{
   $flags=(
      "--page-size", 
      "--ascending-order", 
      "--no-ascending-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-certificates-by-ca{
   $flags=(
      "--ca-certificate-id", 
      "--page-size", 
      "--ascending-order", 
      "--no-ascending-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-dimensions{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-domain-configurations{
   $flags=(
      "--marker", 
      "--page-size", 
      "--service-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-indices{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-job-executions-for-job{
   $flags=(
      "--job-id", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-job-executions-for-thing{
   $flags=(
      "--thing-name", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-jobs{
   $flags=(
      "--status", 
      "--target-selection", 
      "--thing-group-name", 
      "--thing-group-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-mitigation-actions{
   $flags=(
      "--action-type", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-ota-updates{
   $flags=(
      "--ota-update-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-outgoing-certificates{
   $flags=(
      "--page-size", 
      "--ascending-order", 
      "--no-ascending-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-policies{
   $flags=(
      "--page-size", 
      "--ascending-order", 
      "--no-ascending-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-policy-versions{
   $flags=(
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-principal-things{
   $flags=(
      "--principal", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-provisioning-template-versions{
   $flags=(
      "--template-name", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-provisioning-templates{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-role-aliases{
   $flags=(
      "--page-size", 
      "--ascending-order", 
      "--no-ascending-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-scheduled-audits{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-security-profiles{
   $flags=(
      "--dimension-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-security-profiles-for-target{
   $flags=(
      "--recursive", 
      "--no-recursive", 
      "--security-profile-target-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-streams{
   $flags=(
      "--ascending-order", 
      "--no-ascending-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-targets-for-policy{
   $flags=(
      "--policy-name", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-targets-for-security-profile{
   $flags=(
      "--security-profile-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-thing-groups{
   $flags=(
      "--parent-group", 
      "--name-prefix-filter", 
      "--recursive", 
      "--no-recursive", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-thing-groups-for-thing{
   $flags=(
      "--thing-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-thing-principals{
   $flags=(
      "--thing-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-thing-registration-task-reports{
   $flags=(
      "--task-id", 
      "--report-type", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-thing-registration-tasks{
   $flags=(
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-thing-types{
   $flags=(
      "--thing-type-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-things{
   $flags=(
      "--attribute-name", 
      "--attribute-value", 
      "--thing-type-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-things-in-billing-group{
   $flags=(
      "--billing-group-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-things-in-thing-group{
   $flags=(
      "--thing-group-name", 
      "--recursive", 
      "--no-recursive", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-topic-rule-destinations{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-topic-rules{
   $flags=(
      "--topic", 
      "--rule-disabled", 
      "--no-rule-disabled", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-v2-logging-levels{
   $flags=(
      "--target-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-list-violation-events{
   $flags=(
      "--start-time", 
      "--end-time", 
      "--thing-name", 
      "--security-profile-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-register-ca-certificate{
   $flags=(
      "--ca-certificate", 
      "--verification-certificate", 
      "--set-as-active", 
      "--no-set-as-active", 
      "--allow-auto-registration", 
      "--no-allow-auto-registration", 
      "--registration-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-register-certificate{
   $flags=(
      "--certificate-pem", 
      "--ca-certificate-pem", 
      "--set-as-active", 
      "--no-set-as-active", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-register-certificate-without-ca{
   $flags=(
      "--certificate-pem", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-register-thing{
   $flags=(
      "--template-body", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-reject-certificate-transfer{
   $flags=(
      "--certificate-id", 
      "--reject-reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-remove-thing-from-billing-group{
   $flags=(
      "--billing-group-name", 
      "--billing-group-arn", 
      "--thing-name", 
      "--thing-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-remove-thing-from-thing-group{
   $flags=(
      "--thing-group-name", 
      "--thing-group-arn", 
      "--thing-name", 
      "--thing-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-replace-topic-rule{
   $flags=(
      "--rule-name", 
      "--topic-rule-payload", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-search-index{
   $flags=(
      "--index-name", 
      "--query-string", 
      "--next-token", 
      "--max-results", 
      "--query-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-set-default-authorizer{
   $flags=(
      "--authorizer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-set-default-policy-version{
   $flags=(
      "--policy-name", 
      "--policy-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-set-logging-options{
   $flags=(
      "--logging-options-payload", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-set-v2-logging-level{
   $flags=(
      "--log-target", 
      "--log-level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-set-v2-logging-options{
   $flags=(
      "--role-arn", 
      "--default-log-level", 
      "--disable-all-logs", 
      "--no-disable-all-logs", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-start-audit-mitigation-actions-task{
   $flags=(
      "--task-id", 
      "--target", 
      "--audit-check-to-actions-mapping", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-start-on-demand-audit-task{
   $flags=(
      "--target-check-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-start-thing-registration-task{
   $flags=(
      "--template-body", 
      "--input-file-bucket", 
      "--input-file-key", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-stop-thing-registration-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-test-authorization{
   $flags=(
      "--principal", 
      "--cognito-identity-pool-id", 
      "--auth-infos", 
      "--client-id", 
      "--policy-names-to-add", 
      "--policy-names-to-skip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-test-invoke-authorizer{
   $flags=(
      "--authorizer-name", 
      "--token", 
      "--token-signature", 
      "--http-context", 
      "--mqtt-context", 
      "--tls-context", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-transfer-certificate{
   $flags=(
      "--certificate-id", 
      "--target-aws-account", 
      "--transfer-message", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-account-audit-configuration{
   $flags=(
      "--role-arn", 
      "--audit-notification-target-configurations", 
      "--audit-check-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-authorizer{
   $flags=(
      "--authorizer-name", 
      "--authorizer-function-arn", 
      "--token-key-name", 
      "--token-signing-public-keys", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-billing-group{
   $flags=(
      "--billing-group-name", 
      "--billing-group-properties", 
      "--expected-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-ca-certificate{
   $flags=(
      "--certificate-id", 
      "--new-status", 
      "--new-auto-registration-status", 
      "--registration-config", 
      "--remove-auto-registration", 
      "--no-remove-auto-registration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-certificate{
   $flags=(
      "--certificate-id", 
      "--new-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-dimension{
   $flags=(
      "--name", 
      "--string-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-domain-configuration{
   $flags=(
      "--domain-configuration-name", 
      "--authorizer-config", 
      "--domain-configuration-status", 
      "--remove-authorizer-config", 
      "--no-remove-authorizer-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-dynamic-thing-group{
   $flags=(
      "--thing-group-name", 
      "--thing-group-properties", 
      "--expected-version", 
      "--index-name", 
      "--query-string", 
      "--query-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-event-configurations{
   $flags=(
      "--event-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-indexing-configuration{
   $flags=(
      "--thing-indexing-configuration", 
      "--thing-group-indexing-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-job{
   $flags=(
      "--job-id", 
      "--description", 
      "--presigned-url-config", 
      "--job-executions-rollout-config", 
      "--abort-config", 
      "--timeout-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-mitigation-action{
   $flags=(
      "--action-name", 
      "--role-arn", 
      "--action-params", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-provisioning-template{
   $flags=(
      "--template-name", 
      "--description", 
      "--enabled", 
      "--no-enabled", 
      "--default-version-id", 
      "--provisioning-role-arn", 
      "--pre-provisioning-hook", 
      "--remove-pre-provisioning-hook", 
      "--no-remove-pre-provisioning-hook", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-role-alias{
   $flags=(
      "--role-alias", 
      "--role-arn", 
      "--credential-duration-seconds", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-scheduled-audit{
   $flags=(
      "--frequency", 
      "--day-of-month", 
      "--day-of-week", 
      "--target-check-names", 
      "--scheduled-audit-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-security-profile{
   $flags=(
      "--security-profile-name", 
      "--security-profile-description", 
      "--behaviors", 
      "--alert-targets", 
      "--additional-metrics-to-retain", 
      "--additional-metrics-to-retain-v", 
      "--delete-behaviors", 
      "--no-delete-behaviors", 
      "--delete-alert-targets", 
      "--no-delete-alert-targets", 
      "--delete-additional-metrics-to-retain", 
      "--no-delete-additional-metrics-to-retain", 
      "--expected-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-stream{
   $flags=(
      "--stream-id", 
      "--description", 
      "--files", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-thing{
   $flags=(
      "--thing-name", 
      "--thing-type-name", 
      "--attribute-payload", 
      "--expected-version", 
      "--remove-thing-type", 
      "--no-remove-thing-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-thing-group{
   $flags=(
      "--thing-group-name", 
      "--thing-group-properties", 
      "--expected-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-thing-groups-for-thing{
   $flags=(
      "--thing-name", 
      "--thing-groups-to-add", 
      "--thing-groups-to-remove", 
      "--override-dynamic-groups", 
      "--no-override-dynamic-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-update-topic-rule-destination{
   $flags=(
      "--arn", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-validate-security-profile-behaviors{
   $flags=(
      "--behaviors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-data{
   $commands=(
      "delete-thing-shadow", 
      "get-thing-shadow", 
      "publish", 
      "update-thing-shadow"
    );
   return $commands;
}
function Get-iot-data-delete-thing-shadow{
   $flags=(
      "--thing-name"
    );
   return $flags;
}
function Get-iot-data-get-thing-shadow{
   $flags=(
      "--thing-name"
    );
   return $flags;
}
function Get-iot-data-publish{
   $flags=(
      "--topic", 
      "--qos", 
      "--payload", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-data-update-thing-shadow{
   $flags=(
      "--thing-name", 
      "--payload"
    );
   return $flags;
}
function Get-iot-jobs-data{
   $commands=(
      "describe-job-execution", 
      "get-pending-job-executions", 
      "start-next-pending-job-execution", 
      "update-job-execution"
    );
   return $commands;
}
function Get-iot-jobs-data-describe-job-execution{
   $flags=(
      "--job-id", 
      "--thing-name", 
      "--include-job-document", 
      "--no-include-job-document", 
      "--execution-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-jobs-data-get-pending-job-executions{
   $flags=(
      "--thing-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-jobs-data-start-next-pending-job-execution{
   $flags=(
      "--thing-name", 
      "--status-details", 
      "--step-timeout-in-minutes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot-jobs-data-update-job-execution{
   $flags=(
      "--job-id", 
      "--thing-name", 
      "--status", 
      "--status-details", 
      "--step-timeout-in-minutes", 
      "--expected-version", 
      "--include-job-execution-state", 
      "--no-include-job-execution-state", 
      "--include-job-document", 
      "--no-include-job-document", 
      "--execution-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices{
   $commands=(
      "claim-devices-by-claim-code", 
      "describe-device", 
      "finalize-device-claim", 
      "get-device-methods", 
      "initiate-device-claim", 
      "invoke-device-method", 
      "list-device-events", 
      "list-devices", 
      "list-tags-for-resource", 
      "tag-resource", 
      "unclaim-device", 
      "untag-resource", 
      "update-device-state"
    );
   return $commands;
}
function Get-iot1click-devices-claim-devices-by-claim-code{
   $flags=(
      "--claim-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-describe-device{
   $flags=(
      "--device-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-finalize-device-claim{
   $flags=(
      "--device-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-get-device-methods{
   $flags=(
      "--device-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-initiate-device-claim{
   $flags=(
      "--device-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-invoke-device-method{
   $flags=(
      "--device-id", 
      "--device-method", 
      "--device-method-parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-list-device-events{
   $flags=(
      "--device-id", 
      "--from-time-stamp", 
      "--to-time-stamp", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-list-devices{
   $flags=(
      "--device-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-unclaim-device{
   $flags=(
      "--device-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-devices-update-device-state{
   $flags=(
      "--device-id", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects{
   $commands=(
      "associate-device-with-placement", 
      "create-placement", 
      "create-project", 
      "delete-placement", 
      "delete-project", 
      "describe-placement", 
      "describe-project", 
      "disassociate-device-from-placement", 
      "get-devices-in-placement", 
      "list-placements", 
      "list-projects", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-placement", 
      "update-project"
    );
   return $commands;
}
function Get-iot1click-projects-associate-device-with-placement{
   $flags=(
      "--project-name", 
      "--placement-name", 
      "--device-id", 
      "--device-template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-create-placement{
   $flags=(
      "--placement-name", 
      "--project-name", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-create-project{
   $flags=(
      "--project-name", 
      "--description", 
      "--placement-template", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-delete-placement{
   $flags=(
      "--placement-name", 
      "--project-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-delete-project{
   $flags=(
      "--project-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-describe-placement{
   $flags=(
      "--placement-name", 
      "--project-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-describe-project{
   $flags=(
      "--project-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-disassociate-device-from-placement{
   $flags=(
      "--project-name", 
      "--placement-name", 
      "--device-template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-get-devices-in-placement{
   $flags=(
      "--project-name", 
      "--placement-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-list-placements{
   $flags=(
      "--project-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-list-projects{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-update-placement{
   $flags=(
      "--placement-name", 
      "--project-name", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iot1click-projects-update-project{
   $flags=(
      "--project-name", 
      "--description", 
      "--placement-template", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics{
   $commands=(
      "batch-put-message", 
      "cancel-pipeline-reprocessing", 
      "create-channel", 
      "create-dataset", 
      "create-dataset-content", 
      "create-datastore", 
      "create-pipeline", 
      "delete-channel", 
      "delete-dataset", 
      "delete-dataset-content", 
      "delete-datastore", 
      "delete-pipeline", 
      "describe-channel", 
      "describe-dataset", 
      "describe-datastore", 
      "describe-logging-options", 
      "describe-pipeline", 
      "get-dataset-content", 
      "list-channels", 
      "list-dataset-contents", 
      "list-datasets", 
      "list-datastores", 
      "list-pipelines", 
      "list-tags-for-resource", 
      "put-logging-options", 
      "run-pipeline-activity", 
      "sample-channel-data", 
      "start-pipeline-reprocessing", 
      "tag-resource", 
      "untag-resource", 
      "update-channel", 
      "update-dataset", 
      "update-datastore", 
      "update-pipeline"
    );
   return $commands;
}
function Get-iotanalytics-batch-put-message{
   $flags=(
      "--channel-name", 
      "--messages", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-cancel-pipeline-reprocessing{
   $flags=(
      "--pipeline-name", 
      "--reprocessing-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-create-channel{
   $flags=(
      "--channel-name", 
      "--channel-storage", 
      "--retention-period", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-create-dataset{
   $flags=(
      "--dataset-name", 
      "--actions", 
      "--triggers", 
      "--content-delivery-rules", 
      "--retention-period", 
      "--versioning-configuration", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-create-dataset-content{
   $flags=(
      "--dataset-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-create-datastore{
   $flags=(
      "--datastore-name", 
      "--datastore-storage", 
      "--retention-period", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-create-pipeline{
   $flags=(
      "--pipeline-name", 
      "--pipeline-activities", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-delete-channel{
   $flags=(
      "--channel-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-delete-dataset{
   $flags=(
      "--dataset-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-delete-dataset-content{
   $flags=(
      "--dataset-name", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-delete-datastore{
   $flags=(
      "--datastore-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-delete-pipeline{
   $flags=(
      "--pipeline-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-describe-channel{
   $flags=(
      "--channel-name", 
      "--include-statistics", 
      "--no-include-statistics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-describe-dataset{
   $flags=(
      "--dataset-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-describe-datastore{
   $flags=(
      "--datastore-name", 
      "--include-statistics", 
      "--no-include-statistics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-describe-logging-options{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-describe-pipeline{
   $flags=(
      "--pipeline-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-get-dataset-content{
   $flags=(
      "--dataset-name", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-list-channels{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-list-dataset-contents{
   $flags=(
      "--dataset-name", 
      "--scheduled-on-or-after", 
      "--scheduled-before", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-list-datasets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-list-datastores{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-list-pipelines{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-put-logging-options{
   $flags=(
      "--logging-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-run-pipeline-activity{
   $flags=(
      "--pipeline-activity", 
      "--payloads", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-sample-channel-data{
   $flags=(
      "--channel-name", 
      "--max-messages", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-start-pipeline-reprocessing{
   $flags=(
      "--pipeline-name", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-update-channel{
   $flags=(
      "--channel-name", 
      "--channel-storage", 
      "--retention-period", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-update-dataset{
   $flags=(
      "--dataset-name", 
      "--actions", 
      "--triggers", 
      "--content-delivery-rules", 
      "--retention-period", 
      "--versioning-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-update-datastore{
   $flags=(
      "--datastore-name", 
      "--retention-period", 
      "--datastore-storage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotanalytics-update-pipeline{
   $flags=(
      "--pipeline-name", 
      "--pipeline-activities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents{
   $commands=(
      "create-detector-model", 
      "create-input", 
      "delete-detector-model", 
      "delete-input", 
      "describe-detector-model", 
      "describe-input", 
      "describe-logging-options", 
      "list-detector-model-versions", 
      "list-detector-models", 
      "list-inputs", 
      "list-tags-for-resource", 
      "put-logging-options", 
      "tag-resource", 
      "untag-resource", 
      "update-detector-model", 
      "update-input"
    );
   return $commands;
}
function Get-iotevents-create-detector-model{
   $flags=(
      "--detector-model-name", 
      "--detector-model-definition", 
      "--detector-model-description", 
      "--key", 
      "--role-arn", 
      "--tags", 
      "--evaluation-method", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-create-input{
   $flags=(
      "--input-name", 
      "--input-description", 
      "--input-definition", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-delete-detector-model{
   $flags=(
      "--detector-model-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-delete-input{
   $flags=(
      "--input-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-describe-detector-model{
   $flags=(
      "--detector-model-name", 
      "--detector-model-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-describe-input{
   $flags=(
      "--input-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-describe-logging-options{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-list-detector-model-versions{
   $flags=(
      "--detector-model-name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-list-detector-models{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-list-inputs{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-put-logging-options{
   $flags=(
      "--logging-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-update-detector-model{
   $flags=(
      "--detector-model-name", 
      "--detector-model-definition", 
      "--detector-model-description", 
      "--role-arn", 
      "--evaluation-method", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-update-input{
   $flags=(
      "--input-name", 
      "--input-description", 
      "--input-definition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-data{
   $commands=(
      "batch-put-message", 
      "batch-update-detector", 
      "describe-detector", 
      "list-detectors"
    );
   return $commands;
}
function Get-iotevents-data-batch-put-message{
   $flags=(
      "--messages", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-data-batch-update-detector{
   $flags=(
      "--detectors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-data-describe-detector{
   $flags=(
      "--detector-model-name", 
      "--key-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotevents-data-list-detectors{
   $flags=(
      "--detector-model-name", 
      "--state-name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsecuretunneling{
   $commands=(
      "close-tunnel", 
      "describe-tunnel", 
      "list-tags-for-resource", 
      "list-tunnels", 
      "open-tunnel", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-iotsecuretunneling-close-tunnel{
   $flags=(
      "--tunnel-id", 
      "--delete", 
      "--no-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsecuretunneling-describe-tunnel{
   $flags=(
      "--tunnel-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsecuretunneling-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsecuretunneling-list-tunnels{
   $flags=(
      "--thing-name", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsecuretunneling-open-tunnel{
   $flags=(
      "--description", 
      "--tags", 
      "--destination-config", 
      "--timeout-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsecuretunneling-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsecuretunneling-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise{
   $commands=(
      "associate-assets", 
      "batch-associate-project-assets", 
      "batch-disassociate-project-assets", 
      "batch-put-asset-property-value", 
      "create-access-policy", 
      "create-asset", 
      "create-asset-model", 
      "create-dashboard", 
      "create-gateway", 
      "create-portal", 
      "create-project", 
      "delete-access-policy", 
      "delete-asset", 
      "delete-asset-model", 
      "delete-dashboard", 
      "delete-gateway", 
      "delete-portal", 
      "delete-project", 
      "describe-access-policy", 
      "describe-asset", 
      "describe-asset-model", 
      "describe-asset-property", 
      "describe-dashboard", 
      "describe-gateway", 
      "describe-gateway-capability-configuration", 
      "describe-logging-options", 
      "describe-portal", 
      "describe-project", 
      "disassociate-assets", 
      "get-asset-property-aggregates", 
      "get-asset-property-value", 
      "get-asset-property-value-history", 
      "list-access-policies", 
      "list-asset-models", 
      "list-assets", 
      "list-associated-assets", 
      "list-dashboards", 
      "list-gateways", 
      "list-portals", 
      "list-project-assets", 
      "list-projects", 
      "list-tags-for-resource", 
      "put-logging-options", 
      "tag-resource", 
      "untag-resource", 
      "update-access-policy", 
      "update-asset", 
      "update-asset-model", 
      "update-asset-property", 
      "update-dashboard", 
      "update-gateway", 
      "update-gateway-capability-configuration", 
      "update-portal", 
      "update-project", 
      "wait"
    );
   return $commands;
}
function Get-iotsitewise-associate-assets{
   $flags=(
      "--asset-id", 
      "--hierarchy-id", 
      "--child-asset-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-batch-associate-project-assets{
   $flags=(
      "--project-id", 
      "--asset-ids", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-batch-disassociate-project-assets{
   $flags=(
      "--project-id", 
      "--asset-ids", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-batch-put-asset-property-value{
   $flags=(
      "--entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-create-access-policy{
   $flags=(
      "--access-policy-identity", 
      "--access-policy-resource", 
      "--access-policy-permission", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-create-asset{
   $flags=(
      "--asset-name", 
      "--asset-model-id", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-create-asset-model{
   $flags=(
      "--asset-model-name", 
      "--asset-model-description", 
      "--asset-model-properties", 
      "--asset-model-hierarchies", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-create-dashboard{
   $flags=(
      "--project-id", 
      "--dashboard-name", 
      "--dashboard-description", 
      "--dashboard-definition", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-create-gateway{
   $flags=(
      "--gateway-name", 
      "--gateway-platform", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-create-portal{
   $flags=(
      "--portal-name", 
      "--portal-description", 
      "--portal-contact-email", 
      "--client-token", 
      "--portal-logo-image-file", 
      "--role-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-create-project{
   $flags=(
      "--portal-id", 
      "--project-name", 
      "--project-description", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-delete-access-policy{
   $flags=(
      "--access-policy-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-delete-asset{
   $flags=(
      "--asset-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-delete-asset-model{
   $flags=(
      "--asset-model-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-delete-dashboard{
   $flags=(
      "--dashboard-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-delete-gateway{
   $flags=(
      "--gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-delete-portal{
   $flags=(
      "--portal-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-delete-project{
   $flags=(
      "--project-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-access-policy{
   $flags=(
      "--access-policy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-asset{
   $flags=(
      "--asset-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-asset-model{
   $flags=(
      "--asset-model-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-asset-property{
   $flags=(
      "--asset-id", 
      "--property-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-dashboard{
   $flags=(
      "--dashboard-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-gateway{
   $flags=(
      "--gateway-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-gateway-capability-configuration{
   $flags=(
      "--gateway-id", 
      "--capability-namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-logging-options{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-portal{
   $flags=(
      "--portal-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-describe-project{
   $flags=(
      "--project-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-disassociate-assets{
   $flags=(
      "--asset-id", 
      "--hierarchy-id", 
      "--child-asset-id", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-get-asset-property-aggregates{
   $flags=(
      "--asset-id", 
      "--property-id", 
      "--property-alias", 
      "--aggregate-types", 
      "--resolution", 
      "--qualities", 
      "--start-date", 
      "--end-date", 
      "--time-ordering", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-get-asset-property-value{
   $flags=(
      "--asset-id", 
      "--property-id", 
      "--property-alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-get-asset-property-value-history{
   $flags=(
      "--asset-id", 
      "--property-id", 
      "--property-alias", 
      "--start-date", 
      "--end-date", 
      "--qualities", 
      "--time-ordering", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-access-policies{
   $flags=(
      "--identity-type", 
      "--identity-id", 
      "--resource-type", 
      "--resource-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-asset-models{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-assets{
   $flags=(
      "--asset-model-id", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-associated-assets{
   $flags=(
      "--asset-id", 
      "--hierarchy-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-dashboards{
   $flags=(
      "--project-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-gateways{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-portals{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-project-assets{
   $flags=(
      "--project-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-projects{
   $flags=(
      "--portal-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-put-logging-options{
   $flags=(
      "--logging-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-access-policy{
   $flags=(
      "--access-policy-id", 
      "--access-policy-identity", 
      "--access-policy-resource", 
      "--access-policy-permission", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-asset{
   $flags=(
      "--asset-id", 
      "--asset-name", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-asset-model{
   $flags=(
      "--asset-model-id", 
      "--asset-model-name", 
      "--asset-model-description", 
      "--asset-model-properties", 
      "--asset-model-hierarchies", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-asset-property{
   $flags=(
      "--asset-id", 
      "--property-id", 
      "--property-alias", 
      "--property-notification-state", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-dashboard{
   $flags=(
      "--dashboard-id", 
      "--dashboard-name", 
      "--dashboard-description", 
      "--dashboard-definition", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-gateway{
   $flags=(
      "--gateway-id", 
      "--gateway-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-gateway-capability-configuration{
   $flags=(
      "--gateway-id", 
      "--capability-namespace", 
      "--capability-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-portal{
   $flags=(
      "--portal-id", 
      "--portal-name", 
      "--portal-description", 
      "--portal-contact-email", 
      "--portal-logo-image-file", 
      "--role-arn", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-update-project{
   $flags=(
      "--project-id", 
      "--project-name", 
      "--project-description", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotsitewise-wait{
   $flags=("");
   return $flags;
}
function Get-iotthingsgraph{
   $commands=(
      "associate-entity-to-thing", 
      "create-flow-template", 
      "create-system-instance", 
      "create-system-template", 
      "delete-flow-template", 
      "delete-namespace", 
      "delete-system-instance", 
      "delete-system-template", 
      "deploy-system-instance", 
      "deprecate-flow-template", 
      "deprecate-system-template", 
      "describe-namespace", 
      "dissociate-entity-from-thing", 
      "get-entities", 
      "get-flow-template", 
      "get-flow-template-revisions", 
      "get-namespace-deletion-status", 
      "get-system-instance", 
      "get-system-template", 
      "get-system-template-revisions", 
      "get-upload-status", 
      "list-flow-execution-messages", 
      "list-tags-for-resource", 
      "search-entities", 
      "search-flow-executions", 
      "search-flow-templates", 
      "search-system-instances", 
      "search-system-templates", 
      "search-things", 
      "tag-resource", 
      "undeploy-system-instance", 
      "untag-resource", 
      "update-flow-template", 
      "update-system-template", 
      "upload-entity-definitions"
    );
   return $commands;
}
function Get-iotthingsgraph-associate-entity-to-thing{
   $flags=(
      "--thing-name", 
      "--entity-id", 
      "--namespace-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-create-flow-template{
   $flags=(
      "--definition", 
      "--compatible-namespace-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-create-system-instance{
   $flags=(
      "--tags", 
      "--definition", 
      "--target", 
      "--greengrass-group-name", 
      "--s3-bucket-name", 
      "--metrics-configuration", 
      "--flow-actions-role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-create-system-template{
   $flags=(
      "--definition", 
      "--compatible-namespace-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-delete-flow-template{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-delete-namespace{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-delete-system-instance{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-delete-system-template{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-deploy-system-instance{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-deprecate-flow-template{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-deprecate-system-template{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-describe-namespace{
   $flags=(
      "--namespace-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-dissociate-entity-from-thing{
   $flags=(
      "--thing-name", 
      "--entity-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-get-entities{
   $flags=(
      "--ids", 
      "--namespace-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-get-flow-template{
   $flags=(
      "--id", 
      "--revision-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-get-flow-template-revisions{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-get-namespace-deletion-status{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-get-system-instance{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-get-system-template{
   $flags=(
      "--id", 
      "--revision-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-get-system-template-revisions{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-get-upload-status{
   $flags=(
      "--upload-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-list-flow-execution-messages{
   $flags=(
      "--flow-execution-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-search-entities{
   $flags=(
      "--entity-types", 
      "--filters", 
      "--namespace-version", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-search-flow-executions{
   $flags=(
      "--system-instance-id", 
      "--flow-execution-id", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-search-flow-templates{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-search-system-instances{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-search-system-templates{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-search-things{
   $flags=(
      "--entity-id", 
      "--namespace-version", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-undeploy-system-instance{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-update-flow-template{
   $flags=(
      "--id", 
      "--definition", 
      "--compatible-namespace-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-update-system-template{
   $flags=(
      "--id", 
      "--definition", 
      "--compatible-namespace-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-iotthingsgraph-upload-entity-definitions{
   $flags=(
      "--document", 
      "--sync-with-public-namespace", 
      "--no-sync-with-public-namespace", 
      "--deprecate-existing-entities", 
      "--no-deprecate-existing-entities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka{
   $commands=(
      "create-cluster", 
      "create-configuration", 
      "delete-cluster", 
      "describe-cluster", 
      "describe-cluster-operation", 
      "describe-configuration", 
      "describe-configuration-revision", 
      "get-bootstrap-brokers", 
      "list-cluster-operations", 
      "list-clusters", 
      "list-configuration-revisions", 
      "list-configurations", 
      "list-kafka-versions", 
      "list-nodes", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-broker-count", 
      "update-broker-storage", 
      "update-cluster-configuration", 
      "update-monitoring"
    );
   return $commands;
}
function Get-kafka-create-cluster{
   $flags=(
      "--broker-node-group-info", 
      "--client-authentication", 
      "--cluster-name", 
      "--configuration-info", 
      "--encryption-info", 
      "--enhanced-monitoring", 
      "--open-monitoring", 
      "--kafka-version", 
      "--logging-info", 
      "--number-of-broker-nodes", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-create-configuration{
   $flags=(
      "--description", 
      "--kafka-versions", 
      "--name", 
      "--server-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-delete-cluster{
   $flags=(
      "--cluster-arn", 
      "--current-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-describe-cluster{
   $flags=(
      "--cluster-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-describe-cluster-operation{
   $flags=(
      "--cluster-operation-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-describe-configuration{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-describe-configuration-revision{
   $flags=(
      "--arn", 
      "--revision", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-get-bootstrap-brokers{
   $flags=(
      "--cluster-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-list-cluster-operations{
   $flags=(
      "--cluster-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-list-clusters{
   $flags=(
      "--cluster-name-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-list-configuration-revisions{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-list-configurations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-list-kafka-versions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-list-nodes{
   $flags=(
      "--cluster-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-update-broker-count{
   $flags=(
      "--cluster-arn", 
      "--current-version", 
      "--target-number-of-broker-nodes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-update-broker-storage{
   $flags=(
      "--cluster-arn", 
      "--current-version", 
      "--target-broker-ebs-volume-info", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-update-cluster-configuration{
   $flags=(
      "--cluster-arn", 
      "--configuration-info", 
      "--current-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kafka-update-monitoring{
   $flags=(
      "--cluster-arn", 
      "--current-version", 
      "--enhanced-monitoring", 
      "--open-monitoring", 
      "--logging-info", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra{
   $commands=(
      "batch-delete-document", 
      "batch-put-document", 
      "create-data-source", 
      "create-faq", 
      "create-index", 
      "delete-faq", 
      "delete-index", 
      "describe-data-source", 
      "describe-faq", 
      "describe-index", 
      "list-data-source-sync-jobs", 
      "list-data-sources", 
      "list-faqs", 
      "list-indices", 
      "query", 
      "start-data-source-sync-job", 
      "stop-data-source-sync-job", 
      "submit-feedback", 
      "update-data-source", 
      "update-index"
    );
   return $commands;
}
function Get-kendra-batch-delete-document{
   $flags=(
      "--index-id", 
      "--document-id-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-batch-put-document{
   $flags=(
      "--index-id", 
      "--role-arn", 
      "--documents", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-create-data-source{
   $flags=(
      "--name", 
      "--index-id", 
      "--type", 
      "--configuration", 
      "--description", 
      "--schedule", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-create-faq{
   $flags=(
      "--index-id", 
      "--name", 
      "--description", 
      "--s3-path", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-create-index{
   $flags=(
      "--name", 
      "--role-arn", 
      "--server-side-encryption-configuration", 
      "--description", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-delete-faq{
   $flags=(
      "--id", 
      "--index-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-delete-index{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-describe-data-source{
   $flags=(
      "--id", 
      "--index-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-describe-faq{
   $flags=(
      "--id", 
      "--index-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-describe-index{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-list-data-source-sync-jobs{
   $flags=(
      "--id", 
      "--index-id", 
      "--next-token", 
      "--max-results", 
      "--start-time-filter", 
      "--status-filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-list-data-sources{
   $flags=(
      "--index-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-list-faqs{
   $flags=(
      "--index-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-list-indices{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-query{
   $flags=(
      "--index-id", 
      "--query-text", 
      "--attribute-filter", 
      "--facets", 
      "--requested-document-attributes", 
      "--query-result-type-filter", 
      "--page-number", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-start-data-source-sync-job{
   $flags=(
      "--id", 
      "--index-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-stop-data-source-sync-job{
   $flags=(
      "--id", 
      "--index-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-submit-feedback{
   $flags=(
      "--index-id", 
      "--query-id", 
      "--click-feedback-items", 
      "--relevance-feedback-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-update-data-source{
   $flags=(
      "--id", 
      "--name", 
      "--index-id", 
      "--configuration", 
      "--description", 
      "--schedule", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kendra-update-index{
   $flags=(
      "--id", 
      "--name", 
      "--role-arn", 
      "--description", 
      "--document-metadata-configuration-updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis{
   $commands=(
      "add-tags-to-stream", 
      "create-stream", 
      "decrease-stream-retention-period", 
      "delete-stream", 
      "deregister-stream-consumer", 
      "describe-limits", 
      "describe-stream", 
      "describe-stream-consumer", 
      "describe-stream-summary", 
      "disable-enhanced-monitoring", 
      "enable-enhanced-monitoring", 
      "get-records", 
      "get-shard-iterator", 
      "increase-stream-retention-period", 
      "list-shards", 
      "list-stream-consumers", 
      "list-streams", 
      "list-tags-for-stream", 
      "merge-shards", 
      "put-record", 
      "put-records", 
      "register-stream-consumer", 
      "remove-tags-from-stream", 
      "split-shard", 
      "start-stream-encryption", 
      "stop-stream-encryption", 
      "update-shard-count", 
      "wait"
    );
   return $commands;
}
function Get-kinesis-add-tags-to-stream{
   $flags=(
      "--stream-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-create-stream{
   $flags=(
      "--stream-name", 
      "--shard-count", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-decrease-stream-retention-period{
   $flags=(
      "--stream-name", 
      "--retention-period-hours", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-delete-stream{
   $flags=(
      "--stream-name", 
      "--enforce-consumer-deletion", 
      "--no-enforce-consumer-deletion", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-deregister-stream-consumer{
   $flags=(
      "--stream-arn", 
      "--consumer-name", 
      "--consumer-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-describe-limits{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-describe-stream{
   $flags=(
      "--stream-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-describe-stream-consumer{
   $flags=(
      "--stream-arn", 
      "--consumer-name", 
      "--consumer-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-describe-stream-summary{
   $flags=(
      "--stream-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-disable-enhanced-monitoring{
   $flags=(
      "--stream-name", 
      "--shard-level-metrics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-enable-enhanced-monitoring{
   $flags=(
      "--stream-name", 
      "--shard-level-metrics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-get-records{
   $flags=(
      "--shard-iterator", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-get-shard-iterator{
   $flags=(
      "--stream-name", 
      "--shard-id", 
      "--shard-iterator-type", 
      "--starting-sequence-number", 
      "--timestamp", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-increase-stream-retention-period{
   $flags=(
      "--stream-name", 
      "--retention-period-hours", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-list-shards{
   $flags=(
      "--stream-name", 
      "--exclusive-start-shard-id", 
      "--stream-creation-timestamp", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-list-stream-consumers{
   $flags=(
      "--stream-arn", 
      "--stream-creation-timestamp", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-list-streams{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-list-tags-for-stream{
   $flags=(
      "--stream-name", 
      "--exclusive-start-tag-key", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-merge-shards{
   $flags=(
      "--stream-name", 
      "--shard-to-merge", 
      "--adjacent-shard-to-merge", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-put-record{
   $flags=(
      "--stream-name", 
      "--data", 
      "--partition-key", 
      "--explicit-hash-key", 
      "--sequence-number-for-ordering", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-put-records{
   $flags=(
      "--records", 
      "--stream-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-register-stream-consumer{
   $flags=(
      "--stream-arn", 
      "--consumer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-remove-tags-from-stream{
   $flags=(
      "--stream-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-split-shard{
   $flags=(
      "--stream-name", 
      "--shard-to-split", 
      "--new-starting-hash-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-start-stream-encryption{
   $flags=(
      "--stream-name", 
      "--encryption-type", 
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-stop-stream-encryption{
   $flags=(
      "--stream-name", 
      "--encryption-type", 
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-update-shard-count{
   $flags=(
      "--stream-name", 
      "--target-shard-count", 
      "--scaling-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-wait{
   $flags=("");
   return $flags;
}
function Get-kinesis-video-archived-media{
   $commands=(
      "get-clip", 
      "get-dash-streaming-session-url", 
      "get-hls-streaming-session-url", 
      "get-media-for-fragment-list", 
      "list-fragments"
    );
   return $commands;
}
function Get-kinesis-video-archived-media-get-clip{
   $flags=(
      "--stream-name", 
      "--stream-arn", 
      "--clip-fragment-selector"
    );
   return $flags;
}
function Get-kinesis-video-archived-media-get-dash-streaming-session-url{
   $flags=(
      "--stream-name", 
      "--stream-arn", 
      "--playback-mode", 
      "--display-fragment-timestamp", 
      "--display-fragment-number", 
      "--dash-fragment-selector", 
      "--expires", 
      "--max-manifest-fragment-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-video-archived-media-get-hls-streaming-session-url{
   $flags=(
      "--stream-name", 
      "--stream-arn", 
      "--playback-mode", 
      "--hls-fragment-selector", 
      "--container-format", 
      "--discontinuity-mode", 
      "--display-fragment-timestamp", 
      "--expires", 
      "--max-media-playlist-fragment-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-video-archived-media-get-media-for-fragment-list{
   $flags=(
      "--stream-name", 
      "--fragments"
    );
   return $flags;
}
function Get-kinesis-video-archived-media-list-fragments{
   $flags=(
      "--stream-name", 
      "--fragment-selector", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-video-media{
   $commands=(
      "get-media"
    );
   return $commands;
}
function Get-kinesis-video-media-get-media{
   $flags=(
      "--stream-name", 
      "--stream-arn", 
      "--start-selector"
    );
   return $flags;
}
function Get-kinesis-video-signaling{
   $commands=(
      "get-ice-server-config", 
      "send-alexa-offer-to-master"
    );
   return $commands;
}
function Get-kinesis-video-signaling-get-ice-server-config{
   $flags=(
      "--channel-arn", 
      "--client-id", 
      "--service", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesis-video-signaling-send-alexa-offer-to-master{
   $flags=(
      "--channel-arn", 
      "--sender-client-id", 
      "--message-payload", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics{
   $commands=(
      "add-application-cloud-watch-logging-option", 
      "add-application-input", 
      "add-application-input-processing-configuration", 
      "add-application-output", 
      "add-application-reference-data-source", 
      "create-application", 
      "delete-application", 
      "delete-application-cloud-watch-logging-option", 
      "delete-application-input-processing-configuration", 
      "delete-application-output", 
      "delete-application-reference-data-source", 
      "describe-application", 
      "discover-input-schema", 
      "list-applications", 
      "list-tags-for-resource", 
      "start-application", 
      "stop-application", 
      "tag-resource", 
      "untag-resource", 
      "update-application"
    );
   return $commands;
}
function Get-kinesisanalytics-add-application-cloud-watch-logging-option{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--cloud-watch-logging-option", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-add-application-input{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-add-application-input-processing-configuration{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--input-id", 
      "--input-processing-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-add-application-output{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--application-output", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-add-application-reference-data-source{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--reference-data-source", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-create-application{
   $flags=(
      "--application-name", 
      "--application-description", 
      "--inputs", 
      "--outputs", 
      "--cloud-watch-logging-options", 
      "--application-code", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-delete-application{
   $flags=(
      "--application-name", 
      "--create-timestamp", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-delete-application-cloud-watch-logging-option{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--cloud-watch-logging-option-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-delete-application-input-processing-configuration{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--input-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-delete-application-output{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--output-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-delete-application-reference-data-source{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--reference-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-describe-application{
   $flags=(
      "--application-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-discover-input-schema{
   $flags=(
      "--resource-arn", 
      "--role-arn", 
      "--input-starting-position-configuration", 
      "--s3-configuration", 
      "--input-processing-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-list-applications{
   $flags=(
      "--limit", 
      "--exclusive-start-application-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-start-application{
   $flags=(
      "--application-name", 
      "--input-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-stop-application{
   $flags=(
      "--application-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalytics-update-application{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--application-update", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2{
   $commands=(
      "add-application-cloud-watch-logging-option", 
      "add-application-input", 
      "add-application-input-processing-configuration", 
      "add-application-output", 
      "add-application-reference-data-source", 
      "add-application-vpc-configuration", 
      "create-application", 
      "create-application-snapshot", 
      "delete-application", 
      "delete-application-cloud-watch-logging-option", 
      "delete-application-input-processing-configuration", 
      "delete-application-output", 
      "delete-application-reference-data-source", 
      "delete-application-snapshot", 
      "delete-application-vpc-configuration", 
      "describe-application", 
      "describe-application-snapshot", 
      "discover-input-schema", 
      "list-application-snapshots", 
      "list-applications", 
      "list-tags-for-resource", 
      "start-application", 
      "stop-application", 
      "tag-resource", 
      "untag-resource", 
      "update-application"
    );
   return $commands;
}
function Get-kinesisanalyticsv2-add-application-cloud-watch-logging-option{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--cloud-watch-logging-option", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-add-application-input{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-add-application-input-processing-configuration{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--input-id", 
      "--input-processing-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-add-application-output{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--application-output", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-add-application-reference-data-source{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--reference-data-source", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-add-application-vpc-configuration{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--vpc-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-create-application{
   $flags=(
      "--application-name", 
      "--application-description", 
      "--runtime-environment", 
      "--service-execution-role", 
      "--application-configuration", 
      "--cloud-watch-logging-options", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-create-application-snapshot{
   $flags=(
      "--application-name", 
      "--snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-delete-application{
   $flags=(
      "--application-name", 
      "--create-timestamp", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-delete-application-cloud-watch-logging-option{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--cloud-watch-logging-option-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-delete-application-input-processing-configuration{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--input-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-delete-application-output{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--output-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-delete-application-reference-data-source{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--reference-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-delete-application-snapshot{
   $flags=(
      "--application-name", 
      "--snapshot-name", 
      "--snapshot-creation-timestamp", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-delete-application-vpc-configuration{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--vpc-configuration-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-describe-application{
   $flags=(
      "--application-name", 
      "--include-additional-details", 
      "--no-include-additional-details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-describe-application-snapshot{
   $flags=(
      "--application-name", 
      "--snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-discover-input-schema{
   $flags=(
      "--resource-arn", 
      "--service-execution-role", 
      "--input-starting-position-configuration", 
      "--s3-configuration", 
      "--input-processing-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-list-application-snapshots{
   $flags=(
      "--application-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-list-applications{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-start-application{
   $flags=(
      "--application-name", 
      "--run-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-stop-application{
   $flags=(
      "--application-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisanalyticsv2-update-application{
   $flags=(
      "--application-name", 
      "--current-application-version-id", 
      "--application-configuration-update", 
      "--service-execution-role-update", 
      "--run-configuration-update", 
      "--cloud-watch-logging-option-updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo{
   $commands=(
      "create-signaling-channel", 
      "create-stream", 
      "delete-signaling-channel", 
      "delete-stream", 
      "describe-signaling-channel", 
      "describe-stream", 
      "get-data-endpoint", 
      "get-signaling-channel-endpoint", 
      "list-signaling-channels", 
      "list-streams", 
      "list-tags-for-resource", 
      "list-tags-for-stream", 
      "tag-resource", 
      "tag-stream", 
      "untag-resource", 
      "untag-stream", 
      "update-data-retention", 
      "update-signaling-channel", 
      "update-stream"
    );
   return $commands;
}
function Get-kinesisvideo-create-signaling-channel{
   $flags=(
      "--channel-name", 
      "--channel-type", 
      "--single-master-configuration", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-create-stream{
   $flags=(
      "--device-name", 
      "--stream-name", 
      "--media-type", 
      "--kms-key-id", 
      "--data-retention-in-hours", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-delete-signaling-channel{
   $flags=(
      "--channel-arn", 
      "--current-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-delete-stream{
   $flags=(
      "--stream-arn", 
      "--current-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-describe-signaling-channel{
   $flags=(
      "--channel-name", 
      "--channel-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-describe-stream{
   $flags=(
      "--stream-name", 
      "--stream-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-get-data-endpoint{
   $flags=(
      "--stream-name", 
      "--stream-arn", 
      "--api-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-get-signaling-channel-endpoint{
   $flags=(
      "--channel-arn", 
      "--single-master-channel-endpoint-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-list-signaling-channels{
   $flags=(
      "--channel-name-condition", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-list-streams{
   $flags=(
      "--stream-name-condition", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-list-tags-for-resource{
   $flags=(
      "--next-token", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-list-tags-for-stream{
   $flags=(
      "--next-token", 
      "--stream-arn", 
      "--stream-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-tag-stream{
   $flags=(
      "--stream-arn", 
      "--stream-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-key-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-untag-stream{
   $flags=(
      "--stream-arn", 
      "--stream-name", 
      "--tag-key-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-update-data-retention{
   $flags=(
      "--stream-name", 
      "--stream-arn", 
      "--current-version", 
      "--operation", 
      "--data-retention-change-in-hours", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-update-signaling-channel{
   $flags=(
      "--channel-arn", 
      "--current-version", 
      "--single-master-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kinesisvideo-update-stream{
   $flags=(
      "--stream-name", 
      "--stream-arn", 
      "--current-version", 
      "--device-name", 
      "--media-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms{
   $commands=(
      "cancel-key-deletion", 
      "connect-custom-key-store", 
      "create-alias", 
      "create-custom-key-store", 
      "create-grant", 
      "create-key", 
      "decrypt", 
      "delete-alias", 
      "delete-custom-key-store", 
      "delete-imported-key-material", 
      "describe-custom-key-stores", 
      "describe-key", 
      "disable-key", 
      "disable-key-rotation", 
      "disconnect-custom-key-store", 
      "enable-key", 
      "enable-key-rotation", 
      "encrypt", 
      "generate-data-key", 
      "generate-data-key-pair", 
      "generate-data-key-pair-without-plaintext", 
      "generate-data-key-without-plaintext", 
      "generate-random", 
      "get-key-policy", 
      "get-key-rotation-status", 
      "get-parameters-for-import", 
      "get-public-key", 
      "import-key-material", 
      "list-aliases", 
      "list-grants", 
      "list-key-policies", 
      "list-keys", 
      "list-resource-tags", 
      "list-retirable-grants", 
      "put-key-policy", 
      "re-encrypt", 
      "retire-grant", 
      "revoke-grant", 
      "schedule-key-deletion", 
      "sign", 
      "tag-resource", 
      "untag-resource", 
      "update-alias", 
      "update-custom-key-store", 
      "update-key-description", 
      "verify"
    );
   return $commands;
}
function Get-kms-cancel-key-deletion{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-connect-custom-key-store{
   $flags=(
      "--custom-key-store-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-create-alias{
   $flags=(
      "--alias-name", 
      "--target-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-create-custom-key-store{
   $flags=(
      "--custom-key-store-name", 
      "--cloud-hsm-cluster-id", 
      "--trust-anchor-certificate", 
      "--key-store-password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-create-grant{
   $flags=(
      "--key-id", 
      "--grantee-principal", 
      "--retiring-principal", 
      "--operations", 
      "--constraints", 
      "--grant-tokens", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-create-key{
   $flags=(
      "--policy", 
      "--description", 
      "--key-usage", 
      "--customer-master-key-spec", 
      "--origin", 
      "--custom-key-store-id", 
      "--bypass-policy-lockout-safety-check", 
      "--no-bypass-policy-lockout-safety-check", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-decrypt{
   $flags=(
      "--ciphertext-blob", 
      "--encryption-context", 
      "--grant-tokens", 
      "--key-id", 
      "--encryption-algorithm", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-delete-alias{
   $flags=(
      "--alias-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-delete-custom-key-store{
   $flags=(
      "--custom-key-store-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-delete-imported-key-material{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-describe-custom-key-stores{
   $flags=(
      "--custom-key-store-id", 
      "--custom-key-store-name", 
      "--limit", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-describe-key{
   $flags=(
      "--key-id", 
      "--grant-tokens", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-disable-key{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-disable-key-rotation{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-disconnect-custom-key-store{
   $flags=(
      "--custom-key-store-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-enable-key{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-enable-key-rotation{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-encrypt{
   $flags=(
      "--key-id", 
      "--plaintext", 
      "--encryption-context", 
      "--grant-tokens", 
      "--encryption-algorithm", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-generate-data-key{
   $flags=(
      "--key-id", 
      "--encryption-context", 
      "--number-of-bytes", 
      "--key-spec", 
      "--grant-tokens", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-generate-data-key-pair{
   $flags=(
      "--encryption-context", 
      "--key-id", 
      "--key-pair-spec", 
      "--grant-tokens", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-generate-data-key-pair-without-plaintext{
   $flags=(
      "--encryption-context", 
      "--key-id", 
      "--key-pair-spec", 
      "--grant-tokens", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-generate-data-key-without-plaintext{
   $flags=(
      "--key-id", 
      "--encryption-context", 
      "--key-spec", 
      "--number-of-bytes", 
      "--grant-tokens", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-generate-random{
   $flags=(
      "--number-of-bytes", 
      "--custom-key-store-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-get-key-policy{
   $flags=(
      "--key-id", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-get-key-rotation-status{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-get-parameters-for-import{
   $flags=(
      "--key-id", 
      "--wrapping-algorithm", 
      "--wrapping-key-spec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-get-public-key{
   $flags=(
      "--key-id", 
      "--grant-tokens", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-import-key-material{
   $flags=(
      "--key-id", 
      "--import-token", 
      "--encrypted-key-material", 
      "--valid-to", 
      "--expiration-model", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-list-aliases{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-list-grants{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-list-key-policies{
   $flags=(
      "--key-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-list-keys{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-list-resource-tags{
   $flags=(
      "--key-id", 
      "--limit", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-list-retirable-grants{
   $flags=(
      "--limit", 
      "--marker", 
      "--retiring-principal", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-put-key-policy{
   $flags=(
      "--key-id", 
      "--policy-name", 
      "--policy", 
      "--bypass-policy-lockout-safety-check", 
      "--no-bypass-policy-lockout-safety-check", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-re-encrypt{
   $flags=(
      "--ciphertext-blob", 
      "--source-encryption-context", 
      "--source-key-id", 
      "--destination-key-id", 
      "--destination-encryption-context", 
      "--source-encryption-algorithm", 
      "--destination-encryption-algorithm", 
      "--grant-tokens", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-retire-grant{
   $flags=(
      "--grant-token", 
      "--key-id", 
      "--grant-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-revoke-grant{
   $flags=(
      "--key-id", 
      "--grant-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-schedule-key-deletion{
   $flags=(
      "--key-id", 
      "--pending-window-in-days", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-sign{
   $flags=(
      "--key-id", 
      "--message", 
      "--message-type", 
      "--grant-tokens", 
      "--signing-algorithm", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-tag-resource{
   $flags=(
      "--key-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-untag-resource{
   $flags=(
      "--key-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-update-alias{
   $flags=(
      "--alias-name", 
      "--target-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-update-custom-key-store{
   $flags=(
      "--custom-key-store-id", 
      "--new-custom-key-store-name", 
      "--key-store-password", 
      "--cloud-hsm-cluster-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-update-key-description{
   $flags=(
      "--key-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-kms-verify{
   $flags=(
      "--key-id", 
      "--message", 
      "--message-type", 
      "--signature", 
      "--signing-algorithm", 
      "--grant-tokens", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation{
   $commands=(
      "batch-grant-permissions", 
      "batch-revoke-permissions", 
      "deregister-resource", 
      "describe-resource", 
      "get-data-lake-settings", 
      "get-effective-permissions-for-path", 
      "grant-permissions", 
      "list-permissions", 
      "list-resources", 
      "put-data-lake-settings", 
      "register-resource", 
      "revoke-permissions", 
      "update-resource"
    );
   return $commands;
}
function Get-lakeformation-batch-grant-permissions{
   $flags=(
      "--catalog-id", 
      "--entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-batch-revoke-permissions{
   $flags=(
      "--catalog-id", 
      "--entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-deregister-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-describe-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-get-data-lake-settings{
   $flags=(
      "--catalog-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-get-effective-permissions-for-path{
   $flags=(
      "--catalog-id", 
      "--resource-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-grant-permissions{
   $flags=(
      "--catalog-id", 
      "--principal", 
      "--resource", 
      "--permissions", 
      "--permissions-with-grant-option", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-list-permissions{
   $flags=(
      "--catalog-id", 
      "--principal", 
      "--resource-type", 
      "--resource", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-list-resources{
   $flags=(
      "--filter-condition-list", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-put-data-lake-settings{
   $flags=(
      "--catalog-id", 
      "--data-lake-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-register-resource{
   $flags=(
      "--resource-arn", 
      "--use-service-linked-role", 
      "--no-use-service-linked-role", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-revoke-permissions{
   $flags=(
      "--catalog-id", 
      "--principal", 
      "--resource", 
      "--permissions", 
      "--permissions-with-grant-option", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lakeformation-update-resource{
   $flags=(
      "--role-arn", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda{
   $commands=(
      "add-layer-version-permission", 
      "add-permission", 
      "create-alias", 
      "create-event-source-mapping", 
      "create-function", 
      "delete-alias", 
      "delete-event-source-mapping", 
      "delete-function", 
      "delete-function-concurrency", 
      "delete-function-event-invoke-config", 
      "delete-layer-version", 
      "delete-provisioned-concurrency-config", 
      "get-account-settings", 
      "get-alias", 
      "get-event-source-mapping", 
      "get-function", 
      "get-function-concurrency", 
      "get-function-configuration", 
      "get-function-event-invoke-config", 
      "get-layer-version", 
      "get-layer-version-by-arn", 
      "get-layer-version-policy", 
      "get-policy", 
      "get-provisioned-concurrency-config", 
      "invoke", 
      "list-aliases", 
      "list-event-source-mappings", 
      "list-function-event-invoke-configs", 
      "list-functions", 
      "list-layer-versions", 
      "list-layers", 
      "list-provisioned-concurrency-configs", 
      "list-tags", 
      "list-versions-by-function", 
      "publish-layer-version", 
      "publish-version", 
      "put-function-concurrency", 
      "put-function-event-invoke-config", 
      "put-provisioned-concurrency-config", 
      "remove-layer-version-permission", 
      "remove-permission", 
      "tag-resource", 
      "untag-resource", 
      "update-alias", 
      "update-event-source-mapping", 
      "update-function-code", 
      "update-function-configuration", 
      "update-function-event-invoke-config", 
      "wait"
    );
   return $commands;
}
function Get-lambda-add-layer-version-permission{
   $flags=(
      "--layer-name", 
      "--version-number", 
      "--statement-id", 
      "--action", 
      "--principal", 
      "--organization-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-add-permission{
   $flags=(
      "---name", 
      "--statement-id", 
      "--action", 
      "--principal", 
      "--source-arn", 
      "--source-account", 
      "--event-source-token", 
      "--qualifier", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-create-alias{
   $flags=(
      "---name", 
      "--name", 
      "---version", 
      "--description", 
      "--routing-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-create-event-source-mapping{
   $flags=(
      "--event-source-arn", 
      "---name", 
      "--enabled", 
      "--no-enabled", 
      "--batch-size", 
      "--maximum-batching-window-in-seconds", 
      "--parallelization-factor", 
      "--starting-position", 
      "--starting-position-timestamp", 
      "--destination-config", 
      "--maximum-record-age-in-seconds", 
      "--bisect-batch-on-function-error", 
      "--no-bisect-batch-on-function-error", 
      "--maximum-retry-attempts", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-create-{
   $flags=(
      "---name", 
      "--runtime", 
      "--role", 
      "--handler", 
      "--code", 
      "--description", 
      "--timeout", 
      "--memory-size", 
      "--publish", 
      "--no-publish", 
      "--vpc-config", 
      "--dead-letter-config", 
      "--environment", 
      "--kms-key-arn", 
      "--tracing-config", 
      "--tags", 
      "--layers", 
      "--zip-file", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-delete-alias{
   $flags=(
      "---name", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-delete-event-source-mapping{
   $flags=(
      "--uuid", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-delete-function{
   $flags=(
      "---name", 
      "--qualifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-delete-function-concurrency{
   $flags=(
      "---name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-delete-function-event-invoke-config{
   $flags=(
      "---name", 
      "--qualifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-delete-layer-version{
   $flags=(
      "--layer-name", 
      "--version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-delete-provisioned-concurrency-config{
   $flags=(
      "---name", 
      "--qualifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-account-settings{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-alias{
   $flags=(
      "---name", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-event-source-mapping{
   $flags=(
      "--uuid", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-function{
   $flags=(
      "---name", 
      "--qualifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-function-concurrency{
   $flags=(
      "---name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-function-configuration{
   $flags=(
      "---name", 
      "--qualifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-function-event-invoke-config{
   $flags=(
      "---name", 
      "--qualifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-layer-version{
   $flags=(
      "--layer-name", 
      "--version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-layer-version-by-arn{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-layer-version-policy{
   $flags=(
      "--layer-name", 
      "--version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-policy{
   $flags=(
      "---name", 
      "--qualifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-get-provisioned-concurrency-config{
   $flags=(
      "---name", 
      "--qualifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-invoke{
   $flags=(
      "---name", 
      "--invocation-type", 
      "--log-type", 
      "--client-context", 
      "--payload", 
      "--qualifier"
    );
   return $flags;
}
function Get-lambda-list-aliases{
   $flags=(
      "---name", 
      "---version", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-list-event-source-mappings{
   $flags=(
      "--event-source-arn", 
      "---name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-list-function-event-invoke-configs{
   $flags=(
      "---name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-list-s{
   $flags=(
      "--master-region", 
      "---version", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-list-layer-versions{
   $flags=(
      "--compatible-runtime", 
      "--layer-name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-list-layers{
   $flags=(
      "--compatible-runtime", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-list-provisioned-concurrency-configs{
   $flags=(
      "---name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-list-tags{
   $flags=(
      "--resource", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-list-versions-by-{
   $flags=(
      "---name", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-publish-layer-version{
   $flags=(
      "--layer-name", 
      "--description", 
      "--content", 
      "--compatible-runtimes", 
      "--license-info", 
      "--zip-file", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-publish-version{
   $flags=(
      "---name", 
      "--code-sha", 
      "--description", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-put-function-concurrency{
   $flags=(
      "---name", 
      "--reserved-concurrent-executions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-put-function-event-invoke-config{
   $flags=(
      "---name", 
      "--qualifier", 
      "--maximum-retry-attempts", 
      "--maximum-event-age-in-seconds", 
      "--destination-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-put-provisioned-concurrency-config{
   $flags=(
      "---name", 
      "--qualifier", 
      "--provisioned-concurrent-executions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-remove-layer-version-permission{
   $flags=(
      "--layer-name", 
      "--version-number", 
      "--statement-id", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-remove-permission{
   $flags=(
      "---name", 
      "--statement-id", 
      "--qualifier", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-tag-resource{
   $flags=(
      "--resource", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-untag-resource{
   $flags=(
      "--resource", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-update-alias{
   $flags=(
      "---name", 
      "--name", 
      "---version", 
      "--description", 
      "--routing-config", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-update-event-source-mapping{
   $flags=(
      "--uuid", 
      "---name", 
      "--enabled", 
      "--no-enabled", 
      "--batch-size", 
      "--maximum-batching-window-in-seconds", 
      "--destination-config", 
      "--maximum-record-age-in-seconds", 
      "--bisect-batch-on-function-error", 
      "--no-bisect-batch-on-function-error", 
      "--maximum-retry-attempts", 
      "--parallelization-factor", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-update-function-code{
   $flags=(
      "---name", 
      "--zip-file", 
      "--s3-bucket", 
      "--s3-key", 
      "--s3-object-version", 
      "--publish", 
      "--no-publish", 
      "--dry-run", 
      "--no-dry-run", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-update-function-configuration{
   $flags=(
      "---name", 
      "--role", 
      "--handler", 
      "--description", 
      "--timeout", 
      "--memory-size", 
      "--vpc-config", 
      "--environment", 
      "--runtime", 
      "--dead-letter-config", 
      "--kms-key-arn", 
      "--tracing-config", 
      "--revision-id", 
      "--layers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-update-function-event-invoke-config{
   $flags=(
      "---name", 
      "--qualifier", 
      "--maximum-retry-attempts", 
      "--maximum-event-age-in-seconds", 
      "--destination-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lambda-wait{
   $flags=("");
   return $flags;
}
function Get-lex-models{
   $commands=(
      "create-bot-version", 
      "create-intent-version", 
      "create-slot-type-version", 
      "delete-bot", 
      "delete-bot-alias", 
      "delete-bot-channel-association", 
      "delete-bot-version", 
      "delete-intent", 
      "delete-intent-version", 
      "delete-slot-type", 
      "delete-slot-type-version", 
      "delete-utterances", 
      "get-bot", 
      "get-bot-alias", 
      "get-bot-aliases", 
      "get-bot-channel-association", 
      "get-bot-channel-associations", 
      "get-bot-versions", 
      "get-bots", 
      "get-builtin-intent", 
      "get-builtin-intents", 
      "get-builtin-slot-types", 
      "get-export", 
      "get-import", 
      "get-intent", 
      "get-intent-versions", 
      "get-intents", 
      "get-slot-type", 
      "get-slot-type-versions", 
      "get-slot-types", 
      "get-utterances-view", 
      "list-tags-for-resource", 
      "put-bot", 
      "put-bot-alias", 
      "put-intent", 
      "put-slot-type", 
      "start-import", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-lex-models-create-bot-version{
   $flags=(
      "--name", 
      "--checksum", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-create-intent-version{
   $flags=(
      "--name", 
      "--checksum", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-create-slot-type-version{
   $flags=(
      "--name", 
      "--checksum", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-bot{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-bot-alias{
   $flags=(
      "--name", 
      "--bot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-bot-channel-association{
   $flags=(
      "--name", 
      "--bot-name", 
      "--bot-alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-bot-version{
   $flags=(
      "--name", 
      "--bot-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-intent{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-intent-version{
   $flags=(
      "--name", 
      "--intent-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-slot-type{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-slot-type-version{
   $flags=(
      "--name", 
      "--slot-type-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-delete-utterances{
   $flags=(
      "--bot-name", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-bot{
   $flags=(
      "--name", 
      "--version-or-alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-bot-alias{
   $flags=(
      "--name", 
      "--bot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-bot-aliases{
   $flags=(
      "--bot-name", 
      "--name-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-bot-channel-association{
   $flags=(
      "--name", 
      "--bot-name", 
      "--bot-alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-bot-channel-associations{
   $flags=(
      "--bot-name", 
      "--bot-alias", 
      "--name-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-bot-versions{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-bots{
   $flags=(
      "--name-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-builtin-intent{
   $flags=(
      "--signature", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-builtin-intents{
   $flags=(
      "--locale", 
      "--signature-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-builtin-slot-types{
   $flags=(
      "--locale", 
      "--signature-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-export{
   $flags=(
      "--name", 
      "--resource-type", 
      "--export-type", 
      "--resource-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-import{
   $flags=(
      "--import-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-intent{
   $flags=(
      "--name", 
      "--intent-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-intent-versions{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-intents{
   $flags=(
      "--name-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-slot-type{
   $flags=(
      "--name", 
      "--slot-type-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-slot-type-versions{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-slot-types{
   $flags=(
      "--name-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-get-utterances-view{
   $flags=(
      "--bot-name", 
      "--bot-versions", 
      "--status-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-put-bot{
   $flags=(
      "--name", 
      "--description", 
      "--intents", 
      "--clarification-prompt", 
      "--abort-statement", 
      "--idle-session-ttl-in-seconds", 
      "--voice-id", 
      "--checksum", 
      "--process-behavior", 
      "--locale", 
      "--child-directed", 
      "--no-child-directed", 
      "--detect-sentiment", 
      "--no-detect-sentiment", 
      "--create-version", 
      "--no-create-version", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-put-bot-alias{
   $flags=(
      "--name", 
      "--description", 
      "--bot-version", 
      "--bot-name", 
      "--checksum", 
      "--conversation-logs", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-put-intent{
   $flags=(
      "--name", 
      "--description", 
      "--slots", 
      "--sample-utterances", 
      "--confirmation-prompt", 
      "--rejection-statement", 
      "--follow-up-prompt", 
      "--conclusion-statement", 
      "--dialog-code-hook", 
      "--fulfillment-activity", 
      "--parent-intent-signature", 
      "--checksum", 
      "--create-version", 
      "--no-create-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-put-slot-type{
   $flags=(
      "--name", 
      "--description", 
      "--enumeration-values", 
      "--checksum", 
      "--value-selection-strategy", 
      "--create-version", 
      "--no-create-version", 
      "--parent-slot-type-signature", 
      "--slot-type-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-start-import{
   $flags=(
      "--payload", 
      "--resource-type", 
      "--merge-strategy", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-models-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-runtime{
   $commands=(
      "delete-session", 
      "get-session", 
      "post-content", 
      "post-text", 
      "put-session"
    );
   return $commands;
}
function Get-lex-runtime-delete-session{
   $flags=(
      "--bot-name", 
      "--bot-alias", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-runtime-get-session{
   $flags=(
      "--bot-name", 
      "--bot-alias", 
      "--user-id", 
      "--checkpoint-label-filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-runtime-post-content{
   $flags=(
      "--bot-name", 
      "--bot-alias", 
      "--user-id", 
      "--session-attributes", 
      "--request-attributes", 
      "--content-type", 
      "--accept", 
      "--input-stream"
    );
   return $flags;
}
function Get-lex-runtime-post-text{
   $flags=(
      "--bot-name", 
      "--bot-alias", 
      "--user-id", 
      "--session-attributes", 
      "--request-attributes", 
      "--input-text", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lex-runtime-put-session{
   $flags=(
      "--bot-name", 
      "--bot-alias", 
      "--user-id", 
      "--session-attributes", 
      "--dialog-action", 
      "--recent-intent-summary-view", 
      "--accept"
    );
   return $flags;
}
function Get-license-manager{
   $commands=(
      "create-license-configuration", 
      "delete-license-configuration", 
      "get-license-configuration", 
      "get-service-settings", 
      "list-associations-for-license-configuration", 
      "list-failures-for-license-configuration-operations", 
      "list-license-configurations", 
      "list-license-specifications-for-resource", 
      "list-resource-inventory", 
      "list-tags-for-resource", 
      "list-usage-for-license-configuration", 
      "tag-resource", 
      "untag-resource", 
      "update-license-configuration", 
      "update-license-specifications-for-resource", 
      "update-service-settings"
    );
   return $commands;
}
function Get-license-manager-create-license-configuration{
   $flags=(
      "--name", 
      "--description", 
      "--license-counting-type", 
      "--license-count", 
      "--license-count-hard-limit", 
      "--no-license-count-hard-limit", 
      "--license-rules", 
      "--tags", 
      "--product-information-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-delete-license-configuration{
   $flags=(
      "--license-configuration-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-get-license-configuration{
   $flags=(
      "--license-configuration-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-get-service-settings{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-list-associations-for-license-configuration{
   $flags=(
      "--license-configuration-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-list-failures-for-license-configuration-operations{
   $flags=(
      "--license-configuration-arn", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-list-license-configurations{
   $flags=(
      "--license-configuration-arns", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-list-license-specifications-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-list-resource-inventory{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-list-usage-for-license-configuration{
   $flags=(
      "--license-configuration-arn", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-update-license-configuration{
   $flags=(
      "--license-configuration-arn", 
      "--license-configuration-status", 
      "--license-rules", 
      "--license-count", 
      "--license-count-hard-limit", 
      "--no-license-count-hard-limit", 
      "--name", 
      "--description", 
      "--product-information-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-update-license-specifications-for-resource{
   $flags=(
      "--resource-arn", 
      "--add-license-specifications", 
      "--remove-license-specifications", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-license-manager-update-service-settings{
   $flags=(
      "--s3-bucket-arn", 
      "--sns-topic-arn", 
      "--organization-configuration", 
      "--enable-cross-accounts-discovery", 
      "--no-enable-cross-accounts-discovery", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail{
   $commands=(
      "allocate-static-ip", 
      "attach-disk", 
      "attach-instances-to-load-balancer", 
      "attach-load-balancer-tls-certificate", 
      "attach-static-ip", 
      "close-instance-public-ports", 
      "copy-snapshot", 
      "create-cloud-formation-stack", 
      "create-contact-method", 
      "create-disk", 
      "create-disk-from-snapshot", 
      "create-disk-snapshot", 
      "create-domain", 
      "create-domain-entry", 
      "create-instance-snapshot", 
      "create-instances", 
      "create-instances-from-snapshot", 
      "create-key-pair", 
      "create-load-balancer", 
      "create-load-balancer-tls-certificate", 
      "create-relational-database", 
      "create-relational-database-from-snapshot", 
      "create-relational-database-snapshot", 
      "delete-alarm", 
      "delete-auto-snapshot", 
      "delete-contact-method", 
      "delete-disk", 
      "delete-disk-snapshot", 
      "delete-domain", 
      "delete-domain-entry", 
      "delete-instance", 
      "delete-instance-snapshot", 
      "delete-key-pair", 
      "delete-known-host-keys", 
      "delete-load-balancer", 
      "delete-load-balancer-tls-certificate", 
      "delete-relational-database", 
      "delete-relational-database-snapshot", 
      "detach-disk", 
      "detach-instances-from-load-balancer", 
      "detach-static-ip", 
      "disable-add-on", 
      "download-default-key-pair", 
      "enable-add-on", 
      "export-snapshot", 
      "get-active-names", 
      "get-alarms", 
      "get-auto-snapshots", 
      "get-blueprints", 
      "get-bundles", 
      "get-cloud-formation-stack-records", 
      "get-contact-methods", 
      "get-disk", 
      "get-disk-snapshot", 
      "get-disk-snapshots", 
      "get-disks", 
      "get-domain", 
      "get-domains", 
      "get-export-snapshot-records", 
      "get-instance", 
      "get-instance-access-details", 
      "get-instance-metric-data", 
      "get-instance-port-states", 
      "get-instance-snapshot", 
      "get-instance-snapshots", 
      "get-instance-state", 
      "get-instances", 
      "get-key-pair", 
      "get-key-pairs", 
      "get-load-balancer", 
      "get-load-balancer-metric-data", 
      "get-load-balancer-tls-certificates", 
      "get-load-balancers", 
      "get-operation", 
      "get-operations", 
      "get-operations-for-resource", 
      "get-regions", 
      "get-relational-database", 
      "get-relational-database-blueprints", 
      "get-relational-database-bundles", 
      "get-relational-database-events", 
      "get-relational-database-log-events", 
      "get-relational-database-log-streams", 
      "get-relational-database-master-user-password", 
      "get-relational-database-metric-data", 
      "get-relational-database-parameters", 
      "get-relational-database-snapshot", 
      "get-relational-database-snapshots", 
      "get-relational-databases", 
      "get-static-ip", 
      "get-static-ips", 
      "import-key-pair", 
      "is-vpc-peered", 
      "open-instance-public-ports", 
      "peer-vpc", 
      "put-alarm", 
      "put-instance-public-ports", 
      "reboot-instance", 
      "reboot-relational-database", 
      "release-static-ip", 
      "send-contact-method-verification", 
      "start-instance", 
      "start-relational-database", 
      "stop-instance", 
      "stop-relational-database", 
      "tag-resource", 
      "test-alarm", 
      "unpeer-vpc", 
      "untag-resource", 
      "update-domain-entry", 
      "update-load-balancer-attribute", 
      "update-relational-database", 
      "update-relational-database-parameters"
    );
   return $commands;
}
function Get-lightsail-allocate-static-ip{
   $flags=(
      "--static-ip-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-attach-disk{
   $flags=(
      "--disk-name", 
      "--instance-name", 
      "--disk-path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-attach-instances-to-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--instance-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-attach-load-balancer-tls-certificate{
   $flags=(
      "--load-balancer-name", 
      "--certificate-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-attach-static-ip{
   $flags=(
      "--static-ip-name", 
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-close-instance-public-ports{
   $flags=(
      "--port-info", 
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-copy-snapshot{
   $flags=(
      "--source-snapshot-name", 
      "--source-resource-name", 
      "--restore-date", 
      "--use-latest-restorable-auto-snapshot", 
      "--no-use-latest-restorable-auto-snapshot", 
      "--target-snapshot-name", 
      "--source-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-cloud-formation-stack{
   $flags=(
      "--instances", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-contact-method{
   $flags=(
      "--protocol", 
      "--contact-endpoint", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-disk{
   $flags=(
      "--disk-name", 
      "--availability-zone", 
      "--size-in-gb", 
      "--tags", 
      "--add-ons", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-disk-from-snapshot{
   $flags=(
      "--disk-name", 
      "--disk-snapshot-name", 
      "--availability-zone", 
      "--size-in-gb", 
      "--tags", 
      "--add-ons", 
      "--source-disk-name", 
      "--restore-date", 
      "--use-latest-restorable-auto-snapshot", 
      "--no-use-latest-restorable-auto-snapshot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-disk-snapshot{
   $flags=(
      "--disk-name", 
      "--disk-snapshot-name", 
      "--instance-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-domain{
   $flags=(
      "--domain-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-domain-entry{
   $flags=(
      "--domain-name", 
      "--domain-entry", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-instance-snapshot{
   $flags=(
      "--instance-snapshot-name", 
      "--instance-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-instances{
   $flags=(
      "--instance-names", 
      "--availability-zone", 
      "--custom-image-name", 
      "--blueprint-id", 
      "--bundle-id", 
      "--user-data", 
      "--key-pair-name", 
      "--tags", 
      "--add-ons", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-instances-from-snapshot{
   $flags=(
      "--instance-names", 
      "--attached-disk-mapping", 
      "--availability-zone", 
      "--instance-snapshot-name", 
      "--bundle-id", 
      "--user-data", 
      "--key-pair-name", 
      "--tags", 
      "--add-ons", 
      "--source-instance-name", 
      "--restore-date", 
      "--use-latest-restorable-auto-snapshot", 
      "--no-use-latest-restorable-auto-snapshot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-key-pair{
   $flags=(
      "--key-pair-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--instance-port", 
      "--health-check-path", 
      "--certificate-name", 
      "--certificate-domain-name", 
      "--certificate-alternative-names", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-load-balancer-tls-certificate{
   $flags=(
      "--load-balancer-name", 
      "--certificate-name", 
      "--certificate-domain-name", 
      "--certificate-alternative-names", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-relational-database{
   $flags=(
      "--relational-database-name", 
      "--availability-zone", 
      "--relational-database-blueprint-id", 
      "--relational-database-bundle-id", 
      "--master-database-name", 
      "--master-username", 
      "--master-user-password", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-relational-database-from-snapshot{
   $flags=(
      "--relational-database-name", 
      "--availability-zone", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--relational-database-snapshot-name", 
      "--relational-database-bundle-id", 
      "--source-relational-database-name", 
      "--restore-time", 
      "--use-latest-restorable-time", 
      "--no-use-latest-restorable-time", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-create-relational-database-snapshot{
   $flags=(
      "--relational-database-name", 
      "--relational-database-snapshot-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-alarm{
   $flags=(
      "--alarm-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-auto-snapshot{
   $flags=(
      "--resource-name", 
      "--date", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-contact-method{
   $flags=(
      "--protocol", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-disk{
   $flags=(
      "--disk-name", 
      "--force-delete-add-ons", 
      "--no-force-delete-add-ons", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-disk-snapshot{
   $flags=(
      "--disk-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-domain-entry{
   $flags=(
      "--domain-name", 
      "--domain-entry", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-instance{
   $flags=(
      "--instance-name", 
      "--force-delete-add-ons", 
      "--no-force-delete-add-ons", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-instance-snapshot{
   $flags=(
      "--instance-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-key-pair{
   $flags=(
      "--key-pair-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-known-host-keys{
   $flags=(
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-load-balancer-tls-certificate{
   $flags=(
      "--load-balancer-name", 
      "--certificate-name", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-relational-database{
   $flags=(
      "--relational-database-name", 
      "--skip-final-snapshot", 
      "--no-skip-final-snapshot", 
      "--final-relational-database-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-delete-relational-database-snapshot{
   $flags=(
      "--relational-database-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-detach-disk{
   $flags=(
      "--disk-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-detach-instances-from-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--instance-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-detach-static-ip{
   $flags=(
      "--static-ip-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-disable-add-on{
   $flags=(
      "--add-on-type", 
      "--resource-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-download-default-key-pair{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-enable-add-on{
   $flags=(
      "--resource-name", 
      "--add-on-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-export-snapshot{
   $flags=(
      "--source-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-active-names{
   $flags=(
      "--source-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-alarms{
   $flags=(
      "--alarm-name", 
      "--page-token", 
      "--monitored-resource-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-auto-snapshots{
   $flags=(
      "--resource-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-blueprints{
   $flags=(
      "--include-inactive", 
      "--no-include-inactive", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-bundles{
   $flags=(
      "--include-inactive", 
      "--no-include-inactive", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-cloud-formation-stack-records{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-contact-methods{
   $flags=(
      "--protocols", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-disk{
   $flags=(
      "--disk-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-disk-snapshot{
   $flags=(
      "--disk-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-disk-snapshots{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-disks{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-domains{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-export-snapshot-records{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-instance{
   $flags=(
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-instance-access-details{
   $flags=(
      "--instance-name", 
      "--protocol", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-instance-metric-data{
   $flags=(
      "--instance-name", 
      "--metric-name", 
      "--period", 
      "--start-time", 
      "--end-time", 
      "--unit", 
      "--statistics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-instance-port-states{
   $flags=(
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-instance-snapshot{
   $flags=(
      "--instance-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-instance-snapshots{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-instance-state{
   $flags=(
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-instances{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-key-pair{
   $flags=(
      "--key-pair-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-key-pairs{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-load-balancer{
   $flags=(
      "--load-balancer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-load-balancer-metric-data{
   $flags=(
      "--load-balancer-name", 
      "--metric-name", 
      "--period", 
      "--start-time", 
      "--end-time", 
      "--unit", 
      "--statistics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-load-balancer-tls-certificates{
   $flags=(
      "--load-balancer-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-load-balancers{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-operation{
   $flags=(
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-operations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-operations-for-resource{
   $flags=(
      "--resource-name", 
      "--page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-regions{
   $flags=(
      "--include-availability-zones", 
      "--no-include-availability-zones", 
      "--include-relational-database-availability-zones", 
      "--no-include-relational-database-availability-zones", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database{
   $flags=(
      "--relational-database-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-blueprints{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-bundles{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-events{
   $flags=(
      "--relational-database-name", 
      "--duration-in-minutes", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-log-events{
   $flags=(
      "--relational-database-name", 
      "--log-stream-name", 
      "--start-time", 
      "--end-time", 
      "--start-from-head", 
      "--no-start-from-head", 
      "--page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-log-streams{
   $flags=(
      "--relational-database-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-master-user-password{
   $flags=(
      "--relational-database-name", 
      "--password-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-metric-data{
   $flags=(
      "--relational-database-name", 
      "--metric-name", 
      "--period", 
      "--start-time", 
      "--end-time", 
      "--unit", 
      "--statistics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-parameters{
   $flags=(
      "--relational-database-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-snapshot{
   $flags=(
      "--relational-database-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-database-snapshots{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-relational-databases{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-static-ip{
   $flags=(
      "--static-ip-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-get-static-ips{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-import-key-pair{
   $flags=(
      "--key-pair-name", 
      "--public-key-base", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-is-vpc-peered{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-open-instance-public-ports{
   $flags=(
      "--port-info", 
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-peer-vpc{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-put-alarm{
   $flags=(
      "--alarm-name", 
      "--metric-name", 
      "--monitored-resource-name", 
      "--comparison-operator", 
      "--threshold", 
      "--evaluation-periods", 
      "--datapoints-to-alarm", 
      "--treat-missing-data", 
      "--contact-protocols", 
      "--notification-triggers", 
      "--notification-enabled", 
      "--no-notification-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-put-instance-public-ports{
   $flags=(
      "--port-infos", 
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-reboot-instance{
   $flags=(
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-reboot-relational-database{
   $flags=(
      "--relational-database-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-release-static-ip{
   $flags=(
      "--static-ip-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-send-contact-method-verification{
   $flags=(
      "--protocol", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-start-instance{
   $flags=(
      "--instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-start-relational-database{
   $flags=(
      "--relational-database-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-stop-instance{
   $flags=(
      "--instance-name", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-stop-relational-database{
   $flags=(
      "--relational-database-name", 
      "--relational-database-snapshot-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-tag-resource{
   $flags=(
      "--resource-name", 
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-test-alarm{
   $flags=(
      "--alarm-name", 
      "--state", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-unpeer-vpc{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-untag-resource{
   $flags=(
      "--resource-name", 
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-update-domain-entry{
   $flags=(
      "--domain-name", 
      "--domain-entry", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-update-load-balancer-attribute{
   $flags=(
      "--load-balancer-name", 
      "--attribute-name", 
      "--attribute-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-update-relational-database{
   $flags=(
      "--relational-database-name", 
      "--master-user-password", 
      "--rotate-master-user-password", 
      "--no-rotate-master-user-password", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--enable-backup-retention", 
      "--no-enable-backup-retention", 
      "--disable-backup-retention", 
      "--no-disable-backup-retention", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--ca-certificate-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-lightsail-update-relational-database-parameters{
   $flags=(
      "--relational-database-name", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs{
   $commands=(
      "associate-kms-key", 
      "cancel-export-task", 
      "create-export-task", 
      "create-log-group", 
      "create-log-stream", 
      "delete-destination", 
      "delete-log-group", 
      "delete-log-stream", 
      "delete-metric-filter", 
      "delete-resource-policy", 
      "delete-retention-policy", 
      "delete-subscription-filter", 
      "describe-destinations", 
      "describe-export-tasks", 
      "describe-log-groups", 
      "describe-log-streams", 
      "describe-metric-filters", 
      "describe-queries", 
      "describe-resource-policies", 
      "describe-subscription-filters", 
      "disassociate-kms-key", 
      "filter-log-events", 
      "get-log-events", 
      "get-log-group-fields", 
      "get-log-record", 
      "get-query-results", 
      "list-tags-log-group", 
      "put-destination", 
      "put-destination-policy", 
      "put-log-events", 
      "put-metric-filter", 
      "put-resource-policy", 
      "put-retention-policy", 
      "put-subscription-filter", 
      "start-query", 
      "stop-query", 
      "tag-log-group", 
      "test-metric-filter", 
      "untag-log-group"
    );
   return $commands;
}
function Get-logs-associate-kms-key{
   $flags=(
      "--log-group-name", 
      "--kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-cancel-export-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-create-export-task{
   $flags=(
      "--task-name", 
      "--log-group-name", 
      "--log-stream-name-prefix", 
      "--from", 
      "--to", 
      "--destination", 
      "--destination-prefix", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-create-log-group{
   $flags=(
      "--log-group-name", 
      "--kms-key-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-create-log-stream{
   $flags=(
      "--log-group-name", 
      "--log-stream-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-delete-destination{
   $flags=(
      "--destination-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-delete-log-group{
   $flags=(
      "--log-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-delete-log-stream{
   $flags=(
      "--log-group-name", 
      "--log-stream-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-delete-metric-filter{
   $flags=(
      "--log-group-name", 
      "--filter-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-delete-resource-policy{
   $flags=(
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-delete-retention-policy{
   $flags=(
      "--log-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-delete-subscription-filter{
   $flags=(
      "--log-group-name", 
      "--filter-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-describe-destinations{
   $flags=(
      "--destination-name-prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-describe-export-tasks{
   $flags=(
      "--task-id", 
      "--status-code", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-describe-log-groups{
   $flags=(
      "--log-group-name-prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-describe-log-streams{
   $flags=(
      "--log-group-name", 
      "--log-stream-name-prefix", 
      "--order-by", 
      "--descending", 
      "--no-descending", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-describe-metric-filters{
   $flags=(
      "--log-group-name", 
      "--filter-name-prefix", 
      "--metric-name", 
      "--metric-namespace", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-describe-queries{
   $flags=(
      "--log-group-name", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-describe-resource-policies{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-describe-subscription-filters{
   $flags=(
      "--log-group-name", 
      "--filter-name-prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-disassociate-kms-key{
   $flags=(
      "--log-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-filter-log-events{
   $flags=(
      "--log-group-name", 
      "--log-stream-names", 
      "--log-stream-name-prefix", 
      "--start-time", 
      "--end-time", 
      "--filter-pattern", 
      "--interleaved", 
      "--no-interleaved", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-get-log-events{
   $flags=(
      "--log-group-name", 
      "--log-stream-name", 
      "--start-time", 
      "--end-time", 
      "--next-token", 
      "--limit", 
      "--start-from-head", 
      "--no-start-from-head", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-get-log-group-fields{
   $flags=(
      "--log-group-name", 
      "--time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-get-log-record{
   $flags=(
      "--log-record-pointer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-get-query-results{
   $flags=(
      "--query-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-list-tags-log-group{
   $flags=(
      "--log-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-put-destination{
   $flags=(
      "--destination-name", 
      "--target-arn", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-put-destination-policy{
   $flags=(
      "--destination-name", 
      "--access-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-put-log-events{
   $flags=(
      "--log-group-name", 
      "--log-stream-name", 
      "--log-events", 
      "--sequence-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-put-metric-filter{
   $flags=(
      "--log-group-name", 
      "--filter-name", 
      "--filter-pattern", 
      "--metric-transformations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-put-resource-policy{
   $flags=(
      "--policy-name", 
      "--policy-document", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-put-retention-policy{
   $flags=(
      "--log-group-name", 
      "--retention-in-days", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-put-subscription-filter{
   $flags=(
      "--log-group-name", 
      "--filter-name", 
      "--filter-pattern", 
      "--destination-arn", 
      "--role-arn", 
      "--distribution", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-start-query{
   $flags=(
      "--log-group-name", 
      "--log-group-names", 
      "--start-time", 
      "--end-time", 
      "--query-string", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-stop-query{
   $flags=(
      "--query-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-tag-log-group{
   $flags=(
      "--log-group-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-test-metric-filter{
   $flags=(
      "--filter-pattern", 
      "--log-event-messages", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-logs-untag-log-group{
   $flags=(
      "--log-group-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning{
   $commands=(
      "add-tags", 
      "create-batch-prediction", 
      "create-data-source-from-rds", 
      "create-data-source-from-redshift", 
      "create-data-source-from-s3", 
      "create-evaluation", 
      "create-ml-model", 
      "create-realtime-endpoint", 
      "delete-batch-prediction", 
      "delete-data-source", 
      "delete-evaluation", 
      "delete-ml-model", 
      "delete-realtime-endpoint", 
      "delete-tags", 
      "describe-batch-predictions", 
      "describe-data-sources", 
      "describe-evaluations", 
      "describe-ml-models", 
      "describe-tags", 
      "get-batch-prediction", 
      "get-data-source", 
      "get-evaluation", 
      "get-ml-model", 
      "predict", 
      "update-batch-prediction", 
      "update-data-source", 
      "update-evaluation", 
      "update-ml-model", 
      "wait"
    );
   return $commands;
}
function Get-machinelearning-add-tags{
   $flags=(
      "--tags", 
      "--resource-id", 
      "--resource-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-create-batch-prediction{
   $flags=(
      "--batch-prediction-id", 
      "--batch-prediction-name", 
      "--ml-model-id", 
      "--batch-prediction-data-source-id", 
      "--output-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-create-data-source-from-rds{
   $flags=(
      "--data-source-id", 
      "--data-source-name", 
      "--rds-data", 
      "--role-arn", 
      "--compute-statistics", 
      "--no-compute-statistics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-create-data-source-from-redshift{
   $flags=(
      "--data-source-id", 
      "--data-source-name", 
      "--data-spec", 
      "--role-arn", 
      "--compute-statistics", 
      "--no-compute-statistics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-create-data-source-from-s3{
   $flags=(
      "--data-source-id", 
      "--data-source-name", 
      "--data-spec", 
      "--compute-statistics", 
      "--no-compute-statistics", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-create-evaluation{
   $flags=(
      "--evaluation-id", 
      "--evaluation-name", 
      "--ml-model-id", 
      "--evaluation-data-source-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-create-ml-model{
   $flags=(
      "--ml-model-id", 
      "--ml-model-name", 
      "--ml-model-type", 
      "--parameters", 
      "--training-data-source-id", 
      "--recipe", 
      "--recipe-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-create-realtime-endpoint{
   $flags=(
      "--ml-model-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-delete-batch-prediction{
   $flags=(
      "--batch-prediction-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-delete-data-source{
   $flags=(
      "--data-source-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-delete-evaluation{
   $flags=(
      "--evaluation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-delete-ml-model{
   $flags=(
      "--ml-model-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-delete-realtime-endpoint{
   $flags=(
      "--ml-model-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-delete-tags{
   $flags=(
      "--tag-keys", 
      "--resource-id", 
      "--resource-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-describe-batch-predictions{
   $flags=(
      "--filter-variable", 
      "--eq", 
      "--gt", 
      "--lt", 
      "--ge", 
      "--le", 
      "--ne", 
      "--prefix", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-describe-data-sources{
   $flags=(
      "--filter-variable", 
      "--eq", 
      "--gt", 
      "--lt", 
      "--ge", 
      "--le", 
      "--ne", 
      "--prefix", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-describe-evaluations{
   $flags=(
      "--filter-variable", 
      "--eq", 
      "--gt", 
      "--lt", 
      "--ge", 
      "--le", 
      "--ne", 
      "--prefix", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-describe-ml-models{
   $flags=(
      "--filter-variable", 
      "--eq", 
      "--gt", 
      "--lt", 
      "--ge", 
      "--le", 
      "--ne", 
      "--prefix", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-describe-tags{
   $flags=(
      "--resource-id", 
      "--resource-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-get-batch-prediction{
   $flags=(
      "--batch-prediction-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-get-data-source{
   $flags=(
      "--data-source-id", 
      "--verbose", 
      "--no-verbose", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-get-evaluation{
   $flags=(
      "--evaluation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-get-ml-model{
   $flags=(
      "--ml-model-id", 
      "--verbose", 
      "--no-verbose", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-predict{
   $flags=(
      "--ml-model-id", 
      "--record", 
      "--predict-endpoint", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-update-batch-prediction{
   $flags=(
      "--batch-prediction-id", 
      "--batch-prediction-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-update-data-source{
   $flags=(
      "--data-source-id", 
      "--data-source-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-update-evaluation{
   $flags=(
      "--evaluation-id", 
      "--evaluation-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-update-ml-model{
   $flags=(
      "--ml-model-id", 
      "--ml-model-name", 
      "--score-threshold", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-machinelearning-wait{
   $flags=("");
   return $flags;
}
function Get-macie{
   $commands=(
      "associate-member-account", 
      "associate-s3-resources", 
      "disassociate-member-account", 
      "disassociate-s3-resources", 
      "list-member-accounts", 
      "list-s3-resources", 
      "update-s3-resources"
    );
   return $commands;
}
function Get-macie-associate-member-account{
   $flags=(
      "--member-account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-macie-associate-s3-resources{
   $flags=(
      "--member-account-id", 
      "--s3-resources", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-macie-disassociate-member-account{
   $flags=(
      "--member-account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-macie-disassociate-s3-resources{
   $flags=(
      "--member-account-id", 
      "--associated-s3-resources", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-macie-list-member-accounts{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-macie-list-s3-resources{
   $flags=(
      "--member-account-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-macie-update-s3-resources{
   $flags=(
      "--member-account-id", 
      "--s3-resources-update", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain{
   $commands=(
      "create-member", 
      "create-network", 
      "create-node", 
      "create-proposal", 
      "delete-member", 
      "delete-node", 
      "get-member", 
      "get-network", 
      "get-node", 
      "get-proposal", 
      "list-invitations", 
      "list-members", 
      "list-networks", 
      "list-nodes", 
      "list-proposal-votes", 
      "list-proposals", 
      "reject-invitation", 
      "update-member", 
      "update-node", 
      "vote-on-proposal"
    );
   return $commands;
}
function Get-managedblockchain-create-member{
   $flags=(
      "--client-request-token", 
      "--invitation-id", 
      "--network-id", 
      "--member-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-create-network{
   $flags=(
      "--client-request-token", 
      "--name", 
      "--description", 
      "--framework", 
      "--framework-version", 
      "--framework-configuration", 
      "--voting-policy", 
      "--member-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-create-node{
   $flags=(
      "--client-request-token", 
      "--network-id", 
      "--member-id", 
      "--node-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-create-proposal{
   $flags=(
      "--client-request-token", 
      "--network-id", 
      "--member-id", 
      "--actions", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-delete-member{
   $flags=(
      "--network-id", 
      "--member-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-delete-node{
   $flags=(
      "--network-id", 
      "--member-id", 
      "--node-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-get-member{
   $flags=(
      "--network-id", 
      "--member-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-get-network{
   $flags=(
      "--network-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-get-node{
   $flags=(
      "--network-id", 
      "--member-id", 
      "--node-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-get-proposal{
   $flags=(
      "--network-id", 
      "--proposal-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-list-invitations{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-list-members{
   $flags=(
      "--network-id", 
      "--name", 
      "--status", 
      "--is-owned", 
      "--no-is-owned", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-list-networks{
   $flags=(
      "--name", 
      "--framework", 
      "--status", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-list-nodes{
   $flags=(
      "--network-id", 
      "--member-id", 
      "--status", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-list-proposal-votes{
   $flags=(
      "--network-id", 
      "--proposal-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-list-proposals{
   $flags=(
      "--network-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-reject-invitation{
   $flags=(
      "--invitation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-update-member{
   $flags=(
      "--network-id", 
      "--member-id", 
      "--log-publishing-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-update-node{
   $flags=(
      "--network-id", 
      "--member-id", 
      "--node-id", 
      "--log-publishing-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-managedblockchain-vote-on-proposal{
   $flags=(
      "--network-id", 
      "--proposal-id", 
      "--voter-member-id", 
      "--vote", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplace-catalog{
   $commands=(
      "cancel-change-set", 
      "describe-change-set", 
      "describe-entity", 
      "list-change-sets", 
      "list-entities", 
      "start-change-set"
    );
   return $commands;
}
function Get-marketplace-catalog-cancel-change-set{
   $flags=(
      "--catalog", 
      "--change-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplace-catalog-describe-change-set{
   $flags=(
      "--catalog", 
      "--change-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplace-catalog-describe-entity{
   $flags=(
      "--catalog", 
      "--entity-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplace-catalog-list-change-sets{
   $flags=(
      "--catalog", 
      "--filter-list", 
      "--sort", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplace-catalog-list-entities{
   $flags=(
      "--catalog", 
      "--entity-type", 
      "--filter-list", 
      "--sort", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplace-catalog-start-change-set{
   $flags=(
      "--catalog", 
      "--change-set", 
      "--change-set-name", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplace-entitlement{
   $commands=(
      "get-entitlements"
    );
   return $commands;
}
function Get-marketplace-entitlement-get-entitlements{
   $flags=(
      "--product-code", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplacecommerceanalytics{
   $commands=(
      "generate-data-set", 
      "start-support-data-export"
    );
   return $commands;
}
function Get-marketplacecommerceanalytics-generate-data-set{
   $flags=(
      "--data-set-type", 
      "--data-set-publication-date", 
      "--role-name-arn", 
      "--destination-s3-bucket-name", 
      "--destination-s3-prefix", 
      "--sns-topic-arn", 
      "--customer-defined-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-marketplacecommerceanalytics-start-support-data-export{
   $flags=(
      "--data-set-type", 
      "--from-date", 
      "--role-name-arn", 
      "--destination-s3-bucket-name", 
      "--destination-s3-prefix", 
      "--sns-topic-arn", 
      "--customer-defined-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect{
   $commands=(
      "add-flow-outputs", 
      "add-flow-sources", 
      "add-flow-vpc-interfaces", 
      "create-flow", 
      "delete-flow", 
      "describe-flow", 
      "grant-flow-entitlements", 
      "list-entitlements", 
      "list-flows", 
      "list-tags-for-resource", 
      "remove-flow-output", 
      "remove-flow-source", 
      "remove-flow-vpc-interface", 
      "revoke-flow-entitlement", 
      "start-flow", 
      "stop-flow", 
      "tag-resource", 
      "untag-resource", 
      "update-flow", 
      "update-flow-entitlement", 
      "update-flow-output", 
      "update-flow-source"
    );
   return $commands;
}
function Get-mediaconnect-add-flow-outputs{
   $flags=(
      "--flow-arn", 
      "--outputs", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-add-flow-sources{
   $flags=(
      "--flow-arn", 
      "--sources", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-add-flow-vpc-interfaces{
   $flags=(
      "--flow-arn", 
      "--vpc-interfaces", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-create-flow{
   $flags=(
      "--availability-zone", 
      "--entitlements", 
      "--name", 
      "--outputs", 
      "--source", 
      "--source-failover-config", 
      "--sources", 
      "--vpc-interfaces", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-delete-flow{
   $flags=(
      "--flow-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-describe-flow{
   $flags=(
      "--flow-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-grant-flow-entitlements{
   $flags=(
      "--entitlements", 
      "--flow-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-list-entitlements{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-list-flows{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-remove-flow-output{
   $flags=(
      "--flow-arn", 
      "--output-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-remove-flow-source{
   $flags=(
      "--flow-arn", 
      "--source-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-remove-flow-vpc-interface{
   $flags=(
      "--flow-arn", 
      "--vpc-interface-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-revoke-flow-entitlement{
   $flags=(
      "--entitlement-arn", 
      "--flow-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-start-flow{
   $flags=(
      "--flow-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-stop-flow{
   $flags=(
      "--flow-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-update-flow{
   $flags=(
      "--flow-arn", 
      "--source-failover-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-update-flow-entitlement{
   $flags=(
      "--description", 
      "--encryption", 
      "--entitlement-arn", 
      "--flow-arn", 
      "--subscribers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-update-flow-output{
   $flags=(
      "--cidr-allow-list", 
      "--description", 
      "--destination", 
      "--encryption", 
      "--flow-arn", 
      "--max-latency", 
      "--output-arn", 
      "--port", 
      "--protocol", 
      "--remote-id", 
      "--smoothing-latency", 
      "--stream-id", 
      "--vpc-interface-attachment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconnect-update-flow-source{
   $flags=(
      "--decryption", 
      "--description", 
      "--entitlement-arn", 
      "--flow-arn", 
      "--ingest-port", 
      "--max-bitrate", 
      "--max-latency", 
      "--protocol", 
      "--source-arn", 
      "--stream-id", 
      "--vpc-interface-name", 
      "--whitelist-cidr", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert{
   $commands=(
      "associate-certificate", 
      "cancel-job", 
      "create-job", 
      "create-job-template", 
      "create-preset", 
      "create-queue", 
      "delete-job-template", 
      "delete-preset", 
      "delete-queue", 
      "describe-endpoints", 
      "disassociate-certificate", 
      "get-job", 
      "get-job-template", 
      "get-preset", 
      "get-queue", 
      "list-job-templates", 
      "list-jobs", 
      "list-presets", 
      "list-queues", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-job-template", 
      "update-preset", 
      "update-queue"
    );
   return $commands;
}
function Get-mediaconvert-associate-certificate{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-cancel-job{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-create-job{
   $flags=(
      "--acceleration-settings", 
      "--billing-tags-source", 
      "--client-request-token", 
      "--hop-destinations", 
      "--job-template", 
      "--priority", 
      "--queue", 
      "--role", 
      "--settings", 
      "--simulate-reserved-queue", 
      "--status-update-interval", 
      "--tags", 
      "--user-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-create-job-template{
   $flags=(
      "--acceleration-settings", 
      "--category", 
      "--description", 
      "--hop-destinations", 
      "--name", 
      "--priority", 
      "--queue", 
      "--settings", 
      "--status-update-interval", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-create-preset{
   $flags=(
      "--category", 
      "--description", 
      "--name", 
      "--settings", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-create-queue{
   $flags=(
      "--description", 
      "--name", 
      "--pricing-plan", 
      "--reservation-plan-settings", 
      "--status", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-delete-job-template{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-delete-preset{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-delete-queue{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-describe-endpoints{
   $flags=(
      "--mode", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-disassociate-certificate{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-get-job{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-get-job-template{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-get-preset{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-get-queue{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-list-job-templates{
   $flags=(
      "--category", 
      "--list-by", 
      "--order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-list-jobs{
   $flags=(
      "--order", 
      "--queue", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-list-presets{
   $flags=(
      "--category", 
      "--list-by", 
      "--order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-list-queues{
   $flags=(
      "--list-by", 
      "--order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-list-tags-for-resource{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-tag-resource{
   $flags=(
      "--arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-untag-resource{
   $flags=(
      "--arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-update-job-template{
   $flags=(
      "--acceleration-settings", 
      "--category", 
      "--description", 
      "--hop-destinations", 
      "--name", 
      "--priority", 
      "--queue", 
      "--settings", 
      "--status-update-interval", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-update-preset{
   $flags=(
      "--category", 
      "--description", 
      "--name", 
      "--settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediaconvert-update-queue{
   $flags=(
      "--description", 
      "--name", 
      "--reservation-plan-settings", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive{
   $commands=(
      "batch-update-schedule", 
      "create-channel", 
      "create-input", 
      "create-input-security-group", 
      "create-multiplex", 
      "create-multiplex-program", 
      "create-tags", 
      "delete-channel", 
      "delete-input", 
      "delete-input-security-group", 
      "delete-multiplex", 
      "delete-multiplex-program", 
      "delete-reservation", 
      "delete-schedule", 
      "delete-tags", 
      "describe-channel", 
      "describe-input", 
      "describe-input-security-group", 
      "describe-multiplex", 
      "describe-multiplex-program", 
      "describe-offering", 
      "describe-reservation", 
      "describe-schedule", 
      "list-channels", 
      "list-input-security-groups", 
      "list-inputs", 
      "list-multiplex-programs", 
      "list-multiplexes", 
      "list-offerings", 
      "list-reservations", 
      "list-tags-for-resource", 
      "purchase-offering", 
      "start-channel", 
      "start-multiplex", 
      "stop-channel", 
      "stop-multiplex", 
      "update-channel", 
      "update-channel-class", 
      "update-input", 
      "update-input-security-group", 
      "update-multiplex", 
      "update-multiplex-program", 
      "update-reservation", 
      "wait"
    );
   return $commands;
}
function Get-medialive-batch-update-schedule{
   $flags=(
      "--channel-id", 
      "--creates", 
      "--deletes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-create-channel{
   $flags=(
      "--channel-class", 
      "--destinations", 
      "--encoder-settings", 
      "--input-attachments", 
      "--input-specification", 
      "--log-level", 
      "--name", 
      "--request-id", 
      "--reserved", 
      "--role-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-create-input{
   $flags=(
      "--destinations", 
      "--input-security-groups", 
      "--media-connect-flows", 
      "--name", 
      "--request-id", 
      "--role-arn", 
      "--sources", 
      "--tags", 
      "--type", 
      "--vpc", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-create-input-security-group{
   $flags=(
      "--tags", 
      "--whitelist-rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-create-multiplex{
   $flags=(
      "--availability-zones", 
      "--multiplex-settings", 
      "--name", 
      "--request-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-create-multiplex-program{
   $flags=(
      "--multiplex-id", 
      "--multiplex-program-settings", 
      "--program-name", 
      "--request-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-create-tags{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-delete-channel{
   $flags=(
      "--channel-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-delete-input{
   $flags=(
      "--input-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-delete-input-security-group{
   $flags=(
      "--input-security-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-delete-multiplex{
   $flags=(
      "--multiplex-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-delete-multiplex-program{
   $flags=(
      "--multiplex-id", 
      "--program-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-delete-reservation{
   $flags=(
      "--reservation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-delete-schedule{
   $flags=(
      "--channel-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-delete-tags{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-describe-channel{
   $flags=(
      "--channel-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-describe-input{
   $flags=(
      "--input-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-describe-input-security-group{
   $flags=(
      "--input-security-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-describe-multiplex{
   $flags=(
      "--multiplex-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-describe-multiplex-program{
   $flags=(
      "--multiplex-id", 
      "--program-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-describe-offering{
   $flags=(
      "--offering-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-describe-reservation{
   $flags=(
      "--reservation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-describe-schedule{
   $flags=(
      "--channel-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-list-channels{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-list-input-security-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-list-inputs{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-list-multiplex-programs{
   $flags=(
      "--multiplex-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-list-multiplexes{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-list-offerings{
   $flags=(
      "--channel-class", 
      "--channel-configuration", 
      "--codec", 
      "--duration", 
      "--maximum-bitrate", 
      "--maximum-framerate", 
      "--resolution", 
      "--resource-type", 
      "--special-feature", 
      "--video-quality", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-list-reservations{
   $flags=(
      "--channel-class", 
      "--codec", 
      "--maximum-bitrate", 
      "--maximum-framerate", 
      "--resolution", 
      "--resource-type", 
      "--special-feature", 
      "--video-quality", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-purchase-offering{
   $flags=(
      "--count", 
      "--name", 
      "--offering-id", 
      "--request-id", 
      "--start", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-start-channel{
   $flags=(
      "--channel-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-start-multiplex{
   $flags=(
      "--multiplex-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-stop-channel{
   $flags=(
      "--channel-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-stop-multiplex{
   $flags=(
      "--multiplex-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-update-channel{
   $flags=(
      "--channel-id", 
      "--destinations", 
      "--encoder-settings", 
      "--input-attachments", 
      "--input-specification", 
      "--log-level", 
      "--name", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-update-channel-class{
   $flags=(
      "--channel-class", 
      "--channel-id", 
      "--destinations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-update-input{
   $flags=(
      "--destinations", 
      "--input-id", 
      "--input-security-groups", 
      "--media-connect-flows", 
      "--name", 
      "--role-arn", 
      "--sources", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-update-input-security-group{
   $flags=(
      "--input-security-group-id", 
      "--tags", 
      "--whitelist-rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-update-multiplex{
   $flags=(
      "--multiplex-id", 
      "--multiplex-settings", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-update-multiplex-program{
   $flags=(
      "--multiplex-id", 
      "--multiplex-program-settings", 
      "--program-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-update-reservation{
   $flags=(
      "--name", 
      "--reservation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-medialive-wait{
   $flags=("");
   return $flags;
}
function Get-mediapackage{
   $commands=(
      "create-channel", 
      "create-harvest-job", 
      "create-origin-endpoint", 
      "delete-channel", 
      "delete-origin-endpoint", 
      "describe-channel", 
      "describe-harvest-job", 
      "describe-origin-endpoint", 
      "list-channels", 
      "list-harvest-jobs", 
      "list-origin-endpoints", 
      "list-tags-for-resource", 
      "rotate-ingest-endpoint-credentials", 
      "tag-resource", 
      "untag-resource", 
      "update-channel", 
      "update-origin-endpoint"
    );
   return $commands;
}
function Get-mediapackage-create-channel{
   $flags=(
      "--description", 
      "--id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-create-harvest-job{
   $flags=(
      "--end-time", 
      "--id", 
      "--origin-endpoint-id", 
      "--s3-destination", 
      "--start-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-create-origin-endpoint{
   $flags=(
      "--authorization", 
      "--channel-id", 
      "--cmaf-package", 
      "--dash-package", 
      "--description", 
      "--hls-package", 
      "--id", 
      "--manifest-name", 
      "--mss-package", 
      "--origination", 
      "--startover-window-seconds", 
      "--tags", 
      "--time-delay-seconds", 
      "--whitelist", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-delete-channel{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-delete-origin-endpoint{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-describe-channel{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-describe-harvest-job{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-describe-origin-endpoint{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-list-channels{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-list-harvest-jobs{
   $flags=(
      "--include-channel-id", 
      "--include-status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-list-origin-endpoints{
   $flags=(
      "--channel-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-rotate-ingest-endpoint-credentials{
   $flags=(
      "--id", 
      "--ingest-endpoint-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-update-channel{
   $flags=(
      "--description", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-update-origin-endpoint{
   $flags=(
      "--authorization", 
      "--cmaf-package", 
      "--dash-package", 
      "--description", 
      "--hls-package", 
      "--id", 
      "--manifest-name", 
      "--mss-package", 
      "--origination", 
      "--startover-window-seconds", 
      "--time-delay-seconds", 
      "--whitelist", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod{
   $commands=(
      "create-asset", 
      "create-packaging-configuration", 
      "create-packaging-group", 
      "delete-asset", 
      "delete-packaging-configuration", 
      "delete-packaging-group", 
      "describe-asset", 
      "describe-packaging-configuration", 
      "describe-packaging-group", 
      "list-assets", 
      "list-packaging-configurations", 
      "list-packaging-groups", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-mediapackage-vod-create-asset{
   $flags=(
      "--id", 
      "--packaging-group-id", 
      "--resource-id", 
      "--source-arn", 
      "--source-role-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-create-packaging-configuration{
   $flags=(
      "--cmaf-package", 
      "--dash-package", 
      "--hls-package", 
      "--id", 
      "--mss-package", 
      "--packaging-group-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-create-packaging-group{
   $flags=(
      "--id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-delete-asset{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-delete-packaging-configuration{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-delete-packaging-group{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-describe-asset{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-describe-packaging-configuration{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-describe-packaging-group{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-list-assets{
   $flags=(
      "--packaging-group-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-list-packaging-configurations{
   $flags=(
      "--packaging-group-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-list-packaging-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediapackage-vod-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore{
   $commands=(
      "create-container", 
      "delete-container", 
      "delete-container-policy", 
      "delete-cors-policy", 
      "delete-lifecycle-policy", 
      "delete-metric-policy", 
      "describe-container", 
      "get-container-policy", 
      "get-cors-policy", 
      "get-lifecycle-policy", 
      "get-metric-policy", 
      "list-containers", 
      "list-tags-for-resource", 
      "put-container-policy", 
      "put-cors-policy", 
      "put-lifecycle-policy", 
      "put-metric-policy", 
      "start-access-logging", 
      "stop-access-logging", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-mediastore-create-container{
   $flags=(
      "--container-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-delete-container{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-delete-container-policy{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-delete-cors-policy{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-delete-lifecycle-policy{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-delete-metric-policy{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-describe-container{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-get-container-policy{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-get-cors-policy{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-get-lifecycle-policy{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-get-metric-policy{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-list-containers{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-list-tags-for-resource{
   $flags=(
      "--resource", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-put-container-policy{
   $flags=(
      "--container-name", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-put-cors-policy{
   $flags=(
      "--container-name", 
      "--cors-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-put-lifecycle-policy{
   $flags=(
      "--container-name", 
      "--lifecycle-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-put-metric-policy{
   $flags=(
      "--container-name", 
      "--metric-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-start-access-logging{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-stop-access-logging{
   $flags=(
      "--container-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-tag-resource{
   $flags=(
      "--resource", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-untag-resource{
   $flags=(
      "--resource", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-data{
   $commands=(
      "delete-object", 
      "describe-object", 
      "get-object", 
      "list-items", 
      "put-object"
    );
   return $commands;
}
function Get-mediastore-data-delete-object{
   $flags=(
      "--path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-data-describe-object{
   $flags=(
      "--path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-data-get-object{
   $flags=(
      "--path", 
      "--range"
    );
   return $flags;
}
function Get-mediastore-data-list-items{
   $flags=(
      "--path", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediastore-data-put-object{
   $flags=(
      "--body", 
      "--path", 
      "--content-type", 
      "--cache-control", 
      "--storage-class", 
      "--upload-availability", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediatailor{
   $commands=(
      "delete-playback-configuration", 
      "get-playback-configuration", 
      "list-playback-configurations", 
      "list-tags-for-resource", 
      "put-playback-configuration", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-mediatailor-delete-playback-configuration{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediatailor-get-playback-configuration{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediatailor-list-playback-configurations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediatailor-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediatailor-put-playback-configuration{
   $flags=(
      "--ad-decision-server-url", 
      "--avail-suppression", 
      "--cdn-configuration", 
      "--dash-configuration", 
      "--live-pre-roll-configuration", 
      "--name", 
      "--personalization-threshold-seconds", 
      "--slate-ad-url", 
      "--tags", 
      "--transcode-profile-name", 
      "--video-content-source-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediatailor-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mediatailor-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-meteringmarketplace{
   $commands=(
      "batch-meter-usage", 
      "meter-usage", 
      "register-usage", 
      "resolve-customer"
    );
   return $commands;
}
function Get-meteringmarketplace-batch-meter-usage{
   $flags=(
      "--usage-records", 
      "--product-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-meteringmarketplace-meter-usage{
   $flags=(
      "--product-code", 
      "--timestamp", 
      "--usage-dimension", 
      "--usage-quantity", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-meteringmarketplace-register-usage{
   $flags=(
      "--product-code", 
      "--public-key-version", 
      "--nonce", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-meteringmarketplace-resolve-customer{
   $flags=(
      "--registration-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh{
   $commands=(
      "associate-created-artifact", 
      "associate-discovered-resource", 
      "create-progress-update-stream", 
      "delete-progress-update-stream", 
      "describe-application-state", 
      "describe-migration-task", 
      "disassociate-created-artifact", 
      "disassociate-discovered-resource", 
      "import-migration-task", 
      "list-application-states", 
      "list-created-artifacts", 
      "list-discovered-resources", 
      "list-migration-tasks", 
      "list-progress-update-streams", 
      "notify-application-state", 
      "notify-migration-task-state", 
      "put-resource-attributes"
    );
   return $commands;
}
function Get-mgh-associate-created-artifact{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--created-artifact", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-associate-discovered-resource{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--discovered-resource", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-create-progress-update-stream{
   $flags=(
      "--progress-update-stream-name", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-delete-progress-update-stream{
   $flags=(
      "--progress-update-stream-name", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-describe-application-state{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-describe-migration-task{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-disassociate-created-artifact{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--created-artifact-name", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-disassociate-discovered-resource{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--configuration-id", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-import-migration-task{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-list-application-states{
   $flags=(
      "--application-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-list-created-artifacts{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-list-discovered-resources{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-list-migration-tasks{
   $flags=(
      "--resource-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-list-progress-update-streams{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-notify-application-state{
   $flags=(
      "--application-id", 
      "--status", 
      "--update-date-time", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-notify-migration-task-state{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--task", 
      "--update-date-time", 
      "--next-update-seconds", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mgh-put-resource-attributes{
   $flags=(
      "--progress-update-stream", 
      "--migration-task-name", 
      "--resource-attribute-list", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-migrationhub-config{
   $commands=(
      "create-home-region-control", 
      "describe-home-region-controls", 
      "get-home-region"
    );
   return $commands;
}
function Get-migrationhub-config-create-home-region-control{
   $flags=(
      "--home-region", 
      "--target", 
      "--dry-run", 
      "--no-dry-run", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-migrationhub-config-describe-home-region-controls{
   $flags=(
      "--control-id", 
      "--home-region", 
      "--target", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-migrationhub-config-get-home-region{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile{
   $commands=(
      "create-project", 
      "delete-project", 
      "describe-bundle", 
      "describe-project", 
      "export-bundle", 
      "export-project", 
      "list-bundles", 
      "list-projects", 
      "update-project"
    );
   return $commands;
}
function Get-mobile-create-project{
   $flags=(
      "--name", 
      "--contents", 
      "--snapshot-id", 
      "--project-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile-delete-project{
   $flags=(
      "--project-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile-describe-bundle{
   $flags=(
      "--bundle-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile-describe-project{
   $flags=(
      "--project-id", 
      "--sync-from-resources", 
      "--no-sync-from-resources", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile-export-bundle{
   $flags=(
      "--bundle-id", 
      "--project-id", 
      "--platform", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile-export-project{
   $flags=(
      "--project-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile-list-bundles{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile-list-projects{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mobile-update-project{
   $flags=(
      "--contents", 
      "--project-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq{
   $commands=(
      "create-broker", 
      "create-configuration", 
      "create-tags", 
      "create-user", 
      "delete-broker", 
      "delete-tags", 
      "delete-user", 
      "describe-broker", 
      "describe-broker-engine-types", 
      "describe-broker-instance-options", 
      "describe-configuration", 
      "describe-configuration-revision", 
      "describe-user", 
      "list-brokers", 
      "list-configuration-revisions", 
      "list-configurations", 
      "list-tags", 
      "list-users", 
      "reboot-broker", 
      "update-broker", 
      "update-configuration", 
      "update-user"
    );
   return $commands;
}
function Get-mq-create-broker{
   $flags=(
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--broker-name", 
      "--configuration", 
      "--creator-request-id", 
      "--deployment-mode", 
      "--encryption-options", 
      "--engine-type", 
      "--engine-version", 
      "--host-instance-type", 
      "--logs", 
      "--maintenance-window-start-time", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--security-groups", 
      "--storage-type", 
      "--subnet-ids", 
      "--tags", 
      "--users", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-create-configuration{
   $flags=(
      "--engine-type", 
      "--engine-version", 
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-create-tags{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-create-user{
   $flags=(
      "--broker-id", 
      "--console-access", 
      "--no-console-access", 
      "--groups", 
      "--password", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-delete-broker{
   $flags=(
      "--broker-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-delete-tags{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-delete-user{
   $flags=(
      "--broker-id", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-describe-broker{
   $flags=(
      "--broker-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-describe-broker-engine-types{
   $flags=(
      "--engine-type", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-describe-broker-instance-options{
   $flags=(
      "--engine-type", 
      "--host-instance-type", 
      "--max-results", 
      "--next-token", 
      "--storage-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-describe-configuration{
   $flags=(
      "--configuration-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-describe-configuration-revision{
   $flags=(
      "--configuration-id", 
      "--configuration-revision", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-describe-user{
   $flags=(
      "--broker-id", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-list-brokers{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-list-configuration-revisions{
   $flags=(
      "--configuration-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-list-configurations{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-list-tags{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-list-users{
   $flags=(
      "--broker-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-reboot-broker{
   $flags=(
      "--broker-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-update-broker{
   $flags=(
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--broker-id", 
      "--configuration", 
      "--engine-version", 
      "--host-instance-type", 
      "--logs", 
      "--security-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-update-configuration{
   $flags=(
      "--configuration-id", 
      "--data", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mq-update-user{
   $flags=(
      "--broker-id", 
      "--console-access", 
      "--no-console-access", 
      "--groups", 
      "--password", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk{
   $commands=(
      "accept-qualification-request", 
      "approve-assignment", 
      "associate-qualification-with-worker", 
      "create-additional-assignments-for-hit", 
      "create-hit", 
      "create-hit-type", 
      "create-hit-with-hit-type", 
      "create-qualification-type", 
      "create-worker-block", 
      "delete-hit", 
      "delete-qualification-type", 
      "delete-worker-block", 
      "disassociate-qualification-from-worker", 
      "get-account-balance", 
      "get-assignment", 
      "get-file-upload-url", 
      "get-hit", 
      "get-qualification-score", 
      "get-qualification-type", 
      "list-assignments-for-hit", 
      "list-bonus-payments", 
      "list-hits", 
      "list-hits-for-qualification-type", 
      "list-qualification-requests", 
      "list-qualification-types", 
      "list-review-policy-results-for-hit", 
      "list-reviewable-hits", 
      "list-worker-blocks", 
      "list-workers-with-qualification-type", 
      "notify-workers", 
      "reject-assignment", 
      "reject-qualification-request", 
      "send-bonus", 
      "send-test-event-notification", 
      "update-expiration-for-hit", 
      "update-hit-review-status", 
      "update-hit-type-of-hit", 
      "update-notification-settings", 
      "update-qualification-type"
    );
   return $commands;
}
function Get-mturk-accept-qualification-request{
   $flags=(
      "--qualification-request-id", 
      "--integer-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-approve-assignment{
   $flags=(
      "--assignment-id", 
      "--requester-feedback", 
      "--override-rejection", 
      "--no-override-rejection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-associate-qualification-with-worker{
   $flags=(
      "--qualification-type-id", 
      "--worker-id", 
      "--integer-value", 
      "--send-notification", 
      "--no-send-notification", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-create-additional-assignments-for-hit{
   $flags=(
      "--hit-id", 
      "--number-of-additional-assignments", 
      "--unique-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-create-hit{
   $flags=(
      "--max-assignments", 
      "--auto-approval-delay-in-seconds", 
      "--lifetime-in-seconds", 
      "--assignment-duration-in-seconds", 
      "--reward", 
      "--title", 
      "--keywords", 
      "--description", 
      "--question", 
      "--requester-annotation", 
      "--qualification-requirements", 
      "--unique-request-token", 
      "--assignment-review-policy", 
      "--hit-review-policy", 
      "--hit-layout-id", 
      "--hit-layout-parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-create-hit-type{
   $flags=(
      "--auto-approval-delay-in-seconds", 
      "--assignment-duration-in-seconds", 
      "--reward", 
      "--title", 
      "--keywords", 
      "--description", 
      "--qualification-requirements", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-create-hit-with-hit-type{
   $flags=(
      "--hit-type-id", 
      "--max-assignments", 
      "--lifetime-in-seconds", 
      "--question", 
      "--requester-annotation", 
      "--unique-request-token", 
      "--assignment-review-policy", 
      "--hit-review-policy", 
      "--hit-layout-id", 
      "--hit-layout-parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-create-qualification-type{
   $flags=(
      "--name", 
      "--keywords", 
      "--description", 
      "--qualification-type-status", 
      "--retry-delay-in-seconds", 
      "--test", 
      "--answer-key", 
      "--test-duration-in-seconds", 
      "--auto-granted", 
      "--no-auto-granted", 
      "--auto-granted-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-create-worker-block{
   $flags=(
      "--worker-id", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-delete-hit{
   $flags=(
      "--hit-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-delete-qualification-type{
   $flags=(
      "--qualification-type-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-delete-worker-block{
   $flags=(
      "--worker-id", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-disassociate-qualification-from-worker{
   $flags=(
      "--worker-id", 
      "--qualification-type-id", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-get-account-balance{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-get-assignment{
   $flags=(
      "--assignment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-get-file-upload-url{
   $flags=(
      "--assignment-id", 
      "--question-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-get-hit{
   $flags=(
      "--hit-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-get-qualification-score{
   $flags=(
      "--qualification-type-id", 
      "--worker-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-get-qualification-type{
   $flags=(
      "--qualification-type-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-assignments-for-hit{
   $flags=(
      "--hit-id", 
      "--assignment-statuses", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-bonus-payments{
   $flags=(
      "--hit-id", 
      "--assignment-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-hits{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-hits-for-qualification-type{
   $flags=(
      "--qualification-type-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-qualification-requests{
   $flags=(
      "--qualification-type-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-qualification-types{
   $flags=(
      "--must-be-requestable", 
      "--no-must-be-requestable", 
      "--must-be-owned-by-caller", 
      "--no-must-be-owned-by-caller", 
      "--types-query", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-review-policy-results-for-hit{
   $flags=(
      "--hit-id", 
      "--policy-levels", 
      "--retrieve-actions", 
      "--no-retrieve-actions", 
      "--retrieve-results", 
      "--no-retrieve-results", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-reviewable-hits{
   $flags=(
      "--hit-type-id", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-worker-blocks{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-list-workers-with-qualification-type{
   $flags=(
      "--qualification-type-id", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-notify-workers{
   $flags=(
      "--subject", 
      "--message-text", 
      "--worker-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-reject-assignment{
   $flags=(
      "--assignment-id", 
      "--requester-feedback", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-reject-qualification-request{
   $flags=(
      "--qualification-request-id", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-send-bonus{
   $flags=(
      "--worker-id", 
      "--bonus-amount", 
      "--assignment-id", 
      "--reason", 
      "--unique-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-send-test-event-notification{
   $flags=(
      "--notification", 
      "--test-event-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-update-expiration-for-hit{
   $flags=(
      "--hit-id", 
      "--expire-at", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-update-hit-review-status{
   $flags=(
      "--hit-id", 
      "--revert", 
      "--no-revert", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-update-hit-type-of-hit{
   $flags=(
      "--hit-id", 
      "--hit-type-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-update-notification-settings{
   $flags=(
      "--hit-type-id", 
      "--notification", 
      "--active", 
      "--no-active", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-mturk-update-qualification-type{
   $flags=(
      "--qualification-type-id", 
      "--description", 
      "--qualification-type-status", 
      "--test", 
      "--answer-key", 
      "--test-duration-in-seconds", 
      "--retry-delay-in-seconds", 
      "--auto-granted", 
      "--no-auto-granted", 
      "--auto-granted-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune{
   $commands=(
      "add-role-to-db-cluster", 
      "add-source-identifier-to-subscription", 
      "add-tags-to-resource", 
      "apply-pending-maintenance-action", 
      "copy-db-cluster-parameter-group", 
      "copy-db-cluster-snapshot", 
      "copy-db-parameter-group", 
      "create-db-cluster", 
      "create-db-cluster-parameter-group", 
      "create-db-cluster-snapshot", 
      "create-db-instance", 
      "create-db-parameter-group", 
      "create-db-subnet-group", 
      "create-event-subscription", 
      "delete-db-cluster", 
      "delete-db-cluster-parameter-group", 
      "delete-db-cluster-snapshot", 
      "delete-db-instance", 
      "delete-db-parameter-group", 
      "delete-db-subnet-group", 
      "delete-event-subscription", 
      "describe-db-cluster-parameter-groups", 
      "describe-db-cluster-parameters", 
      "describe-db-cluster-snapshot-attributes", 
      "describe-db-cluster-snapshots", 
      "describe-db-clusters", 
      "describe-db-engine-versions", 
      "describe-db-instances", 
      "describe-db-parameter-groups", 
      "describe-db-parameters", 
      "describe-db-subnet-groups", 
      "describe-engine-default-cluster-parameters", 
      "describe-engine-default-parameters", 
      "describe-event-categories", 
      "describe-event-subscriptions", 
      "describe-events", 
      "describe-orderable-db-instance-options", 
      "describe-pending-maintenance-actions", 
      "describe-valid-db-instance-modifications", 
      "failover-db-cluster", 
      "list-tags-for-resource", 
      "modify-db-cluster", 
      "modify-db-cluster-parameter-group", 
      "modify-db-cluster-snapshot-attribute", 
      "modify-db-instance", 
      "modify-db-parameter-group", 
      "modify-db-subnet-group", 
      "modify-event-subscription", 
      "promote-read-replica-db-cluster", 
      "reboot-db-instance", 
      "remove-role-from-db-cluster", 
      "remove-source-identifier-from-subscription", 
      "remove-tags-from-resource", 
      "reset-db-cluster-parameter-group", 
      "reset-db-parameter-group", 
      "restore-db-cluster-from-snapshot", 
      "restore-db-cluster-to-point-in-time", 
      "start-db-cluster", 
      "stop-db-cluster", 
      "wait"
    );
   return $commands;
}
function Get-neptune-add-role-to-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-add-source-identifier-to-subscription{
   $flags=(
      "--subscription-name", 
      "--source-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-add-tags-to-resource{
   $flags=(
      "--resource-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-apply-pending-maintenance-action{
   $flags=(
      "--resource-identifier", 
      "--apply-action", 
      "--opt-in-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-copy-db-cluster-parameter-group{
   $flags=(
      "--source-db-cluster-parameter-group-identifier", 
      "--target-db-cluster-parameter-group-identifier", 
      "--target-db-cluster-parameter-group-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-copy-db-cluster-snapshot{
   $flags=(
      "--source-db-cluster-snapshot-identifier", 
      "--target-db-cluster-snapshot-identifier", 
      "--kms-key-id", 
      "--pre-signed-url", 
      "--copy-tags", 
      "--no-copy-tags", 
      "--tags", 
      "--source-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-copy-db-parameter-group{
   $flags=(
      "--source-db-parameter-group-identifier", 
      "--target-db-parameter-group-identifier", 
      "--target-db-parameter-group-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-create-db-cluster{
   $flags=(
      "--availability-zones", 
      "--backup-retention-period", 
      "--character-set-name", 
      "--database-name", 
      "--db-cluster-identifier", 
      "--db-cluster-parameter-group-name", 
      "--vpc-security-group-ids", 
      "--db-subnet-group-name", 
      "--engine", 
      "--engine-version", 
      "--port", 
      "--master-username", 
      "--master-user-password", 
      "--option-group-name", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--replication-source-identifier", 
      "--tags", 
      "--storage-encrypted", 
      "--no-storage-encrypted", 
      "--kms-key-id", 
      "--pre-signed-url", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-cloudwatch-logs-exports", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--source-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-create-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--db-parameter-group-family", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-create-db-cluster-snapshot{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--db-cluster-identifier", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-create-db-instance{
   $flags=(
      "--db-name", 
      "--db-instance-identifier", 
      "--allocated-storage", 
      "--db-instance-class", 
      "--engine", 
      "--master-username", 
      "--master-user-password", 
      "--db-security-groups", 
      "--vpc-security-group-ids", 
      "--availability-zone", 
      "--db-subnet-group-name", 
      "--preferred-maintenance-window", 
      "--db-parameter-group-name", 
      "--backup-retention-period", 
      "--preferred-backup-window", 
      "--port", 
      "--multi-az", 
      "--no-multi-az", 
      "--engine-version", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--license-model", 
      "--iops", 
      "--option-group-name", 
      "--character-set-name", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--tags", 
      "--db-cluster-identifier", 
      "--storage-type", 
      "--tde-credential-arn", 
      "--tde-credential-password", 
      "--storage-encrypted", 
      "--no-storage-encrypted", 
      "--kms-key-id", 
      "--domain", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--monitoring-interval", 
      "--monitoring-role-arn", 
      "--domain-iam-role-name", 
      "--promotion-tier", 
      "--timezone", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-performance-insights", 
      "--no-enable-performance-insights", 
      "--performance-insights-kms-key-id", 
      "--enable-cloudwatch-logs-exports", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-create-db-parameter-group{
   $flags=(
      "--db-parameter-group-name", 
      "--db-parameter-group-family", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-create-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--db-subnet-group-description", 
      "--subnet-ids", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-create-event-subscription{
   $flags=(
      "--subscription-name", 
      "--sns-topic-arn", 
      "--source-type", 
      "--event-categories", 
      "--source-ids", 
      "--enabled", 
      "--no-enabled", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-delete-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--skip-final-snapshot", 
      "--no-skip-final-snapshot", 
      "--final-db-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-delete-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-delete-db-cluster-snapshot{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-delete-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--skip-final-snapshot", 
      "--no-skip-final-snapshot", 
      "--final-db-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-delete-db-parameter-group{
   $flags=(
      "--db-parameter-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-delete-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-delete-event-subscription{
   $flags=(
      "--subscription-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-cluster-parameter-groups{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-cluster-parameters{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--source", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-cluster-snapshot-attributes{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-cluster-snapshots{
   $flags=(
      "--db-cluster-identifier", 
      "--db-cluster-snapshot-identifier", 
      "--snapshot-type", 
      "--filters", 
      "--include-shared", 
      "--no-include-shared", 
      "--include-public", 
      "--no-include-public", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-clusters{
   $flags=(
      "--db-cluster-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-engine-versions{
   $flags=(
      "--engine", 
      "--engine-version", 
      "--db-parameter-group-family", 
      "--filters", 
      "--default-only", 
      "--no-default-only", 
      "--list-supported-character-sets", 
      "--no-list-supported-character-sets", 
      "--list-supported-timezones", 
      "--no-list-supported-timezones", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-instances{
   $flags=(
      "--db-instance-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-parameter-groups{
   $flags=(
      "--db-parameter-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-parameters{
   $flags=(
      "--db-parameter-group-name", 
      "--source", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-db-subnet-groups{
   $flags=(
      "--db-subnet-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-engine-default-cluster-parameters{
   $flags=(
      "--db-parameter-group-family", 
      "--filters", 
      "--max-records", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-engine-default-parameters{
   $flags=(
      "--db-parameter-group-family", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-event-categories{
   $flags=(
      "--source-type", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-event-subscriptions{
   $flags=(
      "--subscription-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-events{
   $flags=(
      "--source-identifier", 
      "--source-type", 
      "--start-time", 
      "--end-time", 
      "--duration", 
      "--event-categories", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-orderable-db-instance-options{
   $flags=(
      "--engine", 
      "--engine-version", 
      "--db-instance-class", 
      "--license-model", 
      "--vpc", 
      "--no-vpc", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-pending-maintenance-actions{
   $flags=(
      "--resource-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-describe-valid-db-instance-modifications{
   $flags=(
      "--db-instance-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-failover-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--target-db-instance-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-list-tags-for-resource{
   $flags=(
      "--resource-name", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-modify-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--new-db-cluster-identifier", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--backup-retention-period", 
      "--db-cluster-parameter-group-name", 
      "--vpc-security-group-ids", 
      "--port", 
      "--master-user-password", 
      "--option-group-name", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--cloudwatch-logs-export-configuration", 
      "--engine-version", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-modify-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-modify-db-cluster-snapshot-attribute{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--attribute-name", 
      "--values-to-add", 
      "--values-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-modify-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--allocated-storage", 
      "--db-instance-class", 
      "--db-subnet-group-name", 
      "--db-security-groups", 
      "--vpc-security-group-ids", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--master-user-password", 
      "--db-parameter-group-name", 
      "--backup-retention-period", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--multi-az", 
      "--no-multi-az", 
      "--engine-version", 
      "--allow-major-version-upgrade", 
      "--no-allow-major-version-upgrade", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--license-model", 
      "--iops", 
      "--option-group-name", 
      "--new-db-instance-identifier", 
      "--storage-type", 
      "--tde-credential-arn", 
      "--tde-credential-password", 
      "--ca-certificate-identifier", 
      "--domain", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--monitoring-interval", 
      "--db-port-number", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--monitoring-role-arn", 
      "--domain-iam-role-name", 
      "--promotion-tier", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-performance-insights", 
      "--no-enable-performance-insights", 
      "--performance-insights-kms-key-id", 
      "--cloudwatch-logs-export-configuration", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-modify-db-parameter-group{
   $flags=(
      "--db-parameter-group-name", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-modify-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--db-subnet-group-description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-modify-event-subscription{
   $flags=(
      "--subscription-name", 
      "--sns-topic-arn", 
      "--source-type", 
      "--event-categories", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-promote-read-replica-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-reboot-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--force-failover", 
      "--no-force-failover", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-remove-role-from-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-remove-source-identifier-from-subscription{
   $flags=(
      "--subscription-name", 
      "--source-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-remove-tags-from-resource{
   $flags=(
      "--resource-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-reset-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--reset-all-parameters", 
      "--no-reset-all-parameters", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-reset-db-parameter-group{
   $flags=(
      "--db-parameter-group-name", 
      "--reset-all-parameters", 
      "--no-reset-all-parameters", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-restore-db-cluster-from-snapshot{
   $flags=(
      "--availability-zones", 
      "--db-cluster-identifier", 
      "--snapshot-identifier", 
      "--engine", 
      "--engine-version", 
      "--port", 
      "--db-subnet-group-name", 
      "--database-name", 
      "--option-group-name", 
      "--vpc-security-group-ids", 
      "--tags", 
      "--kms-key-id", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-cloudwatch-logs-exports", 
      "--db-cluster-parameter-group-name", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-restore-db-cluster-to-point-in-time{
   $flags=(
      "--db-cluster-identifier", 
      "--restore-type", 
      "--source-db-cluster-identifier", 
      "--restore-to-time", 
      "--use-latest-restorable-time", 
      "--no-use-latest-restorable-time", 
      "--port", 
      "--db-subnet-group-name", 
      "--option-group-name", 
      "--vpc-security-group-ids", 
      "--tags", 
      "--kms-key-id", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-cloudwatch-logs-exports", 
      "--db-cluster-parameter-group-name", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-start-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-stop-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-neptune-wait{
   $flags=("");
   return $flags;
}
function Get-networkmanager{
   $commands=(
      "associate-customer-gateway", 
      "associate-link", 
      "create-device", 
      "create-global-network", 
      "create-link", 
      "create-site", 
      "delete-device", 
      "delete-global-network", 
      "delete-link", 
      "delete-site", 
      "deregister-transit-gateway", 
      "describe-global-networks", 
      "disassociate-customer-gateway", 
      "disassociate-link", 
      "get-customer-gateway-associations", 
      "get-devices", 
      "get-link-associations", 
      "get-links", 
      "get-sites", 
      "get-transit-gateway-registrations", 
      "list-tags-for-resource", 
      "register-transit-gateway", 
      "tag-resource", 
      "untag-resource", 
      "update-device", 
      "update-global-network", 
      "update-link", 
      "update-site"
    );
   return $commands;
}
function Get-networkmanager-associate-customer-gateway{
   $flags=(
      "--customer-gateway-arn", 
      "--global-network-id", 
      "--device-id", 
      "--link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-associate-link{
   $flags=(
      "--global-network-id", 
      "--device-id", 
      "--link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-create-device{
   $flags=(
      "--global-network-id", 
      "--description", 
      "--type", 
      "--vendor", 
      "--model", 
      "--serial-number", 
      "--location", 
      "--site-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-create-global-network{
   $flags=(
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-create-link{
   $flags=(
      "--global-network-id", 
      "--description", 
      "--type", 
      "--bandwidth", 
      "--provider", 
      "--site-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-create-site{
   $flags=(
      "--global-network-id", 
      "--description", 
      "--location", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-delete-device{
   $flags=(
      "--global-network-id", 
      "--device-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-delete-global-network{
   $flags=(
      "--global-network-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-delete-link{
   $flags=(
      "--global-network-id", 
      "--link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-delete-site{
   $flags=(
      "--global-network-id", 
      "--site-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-deregister-transit-gateway{
   $flags=(
      "--global-network-id", 
      "--transit-gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-describe-global-networks{
   $flags=(
      "--global-network-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-disassociate-customer-gateway{
   $flags=(
      "--global-network-id", 
      "--customer-gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-disassociate-link{
   $flags=(
      "--global-network-id", 
      "--device-id", 
      "--link-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-get-customer-gateway-associations{
   $flags=(
      "--global-network-id", 
      "--customer-gateway-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-get-devices{
   $flags=(
      "--global-network-id", 
      "--device-ids", 
      "--site-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-get-link-associations{
   $flags=(
      "--global-network-id", 
      "--device-id", 
      "--link-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-get-links{
   $flags=(
      "--global-network-id", 
      "--link-ids", 
      "--site-id", 
      "--type", 
      "--provider", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-get-sites{
   $flags=(
      "--global-network-id", 
      "--site-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-get-transit-gateway-registrations{
   $flags=(
      "--global-network-id", 
      "--transit-gateway-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-register-transit-gateway{
   $flags=(
      "--global-network-id", 
      "--transit-gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-update-device{
   $flags=(
      "--global-network-id", 
      "--device-id", 
      "--description", 
      "--type", 
      "--vendor", 
      "--model", 
      "--serial-number", 
      "--location", 
      "--site-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-update-global-network{
   $flags=(
      "--global-network-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-update-link{
   $flags=(
      "--global-network-id", 
      "--link-id", 
      "--description", 
      "--type", 
      "--bandwidth", 
      "--provider", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-networkmanager-update-site{
   $flags=(
      "--global-network-id", 
      "--site-id", 
      "--description", 
      "--location", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks{
   $commands=(
      "assign-instance", 
      "assign-volume", 
      "associate-elastic-ip", 
      "attach-elastic-load-balancer", 
      "clone-stack", 
      "create-app", 
      "create-deployment", 
      "create-instance", 
      "create-layer", 
      "create-stack", 
      "create-user-profile", 
      "delete-app", 
      "delete-instance", 
      "delete-layer", 
      "delete-stack", 
      "delete-user-profile", 
      "deregister-ecs-cluster", 
      "deregister-elastic-ip", 
      "deregister-instance", 
      "deregister-rds-db-instance", 
      "deregister-volume", 
      "describe-agent-versions", 
      "describe-apps", 
      "describe-commands", 
      "describe-deployments", 
      "describe-ecs-clusters", 
      "describe-elastic-ips", 
      "describe-elastic-load-balancers", 
      "describe-instances", 
      "describe-layers", 
      "describe-load-based-auto-scaling", 
      "describe-my-user-profile", 
      "describe-operating-systems", 
      "describe-permissions", 
      "describe-raid-arrays", 
      "describe-rds-db-instances", 
      "describe-service-errors", 
      "describe-stack-provisioning-parameters", 
      "describe-stack-summary", 
      "describe-stacks", 
      "describe-time-based-auto-scaling", 
      "describe-user-profiles", 
      "describe-volumes", 
      "detach-elastic-load-balancer", 
      "disassociate-elastic-ip", 
      "get-hostname-suggestion", 
      "grant-access", 
      "list-tags", 
      "reboot-instance", 
      "register", 
      "register-ecs-cluster", 
      "register-elastic-ip", 
      "register-instance", 
      "register-rds-db-instance", 
      "register-volume", 
      "set-load-based-auto-scaling", 
      "set-permission", 
      "set-time-based-auto-scaling", 
      "start-instance", 
      "start-stack", 
      "stop-instance", 
      "stop-stack", 
      "tag-resource", 
      "unassign-instance", 
      "unassign-volume", 
      "untag-resource", 
      "update-app", 
      "update-elastic-ip", 
      "update-instance", 
      "update-layer", 
      "update-my-user-profile", 
      "update-rds-db-instance", 
      "update-stack", 
      "update-user-profile", 
      "update-volume", 
      "wait"
    );
   return $commands;
}
function Get-opsworks-assign-instance{
   $flags=(
      "--instance-id", 
      "--layer-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-assign-volume{
   $flags=(
      "--volume-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-associate-elastic-ip{
   $flags=(
      "--elastic-ip", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-attach-elastic-load-balancer{
   $flags=(
      "--elastic-load-balancer-name", 
      "--layer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-clone-stack{
   $flags=(
      "--source-stack-id", 
      "--name", 
      "--vpc-id", 
      "--attributes", 
      "--service-role-arn", 
      "--default-instance-profile-arn", 
      "--default-os", 
      "--hostname-theme", 
      "--default-availability-zone", 
      "--default-subnet-id", 
      "--custom-json", 
      "--configuration-manager", 
      "--chef-configuration", 
      "--use-custom-cookbooks", 
      "--no-use-custom-cookbooks", 
      "--use-opsworks-security-groups", 
      "--no-use-opsworks-security-groups", 
      "--custom-cookbooks-source", 
      "--default-ssh-key-name", 
      "--clone-permissions", 
      "--no-clone-permissions", 
      "--clone-app-ids", 
      "--default-root-device-type", 
      "--agent-version", 
      "--stack-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-create-app{
   $flags=(
      "--stack-id", 
      "--shortname", 
      "--name", 
      "--description", 
      "--data-sources", 
      "--type", 
      "--app-source", 
      "--domains", 
      "--enable-ssl", 
      "--no-enable-ssl", 
      "--ssl-configuration", 
      "--attributes", 
      "--environment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-create-deployment{
   $flags=(
      "--stack-id", 
      "--app-id", 
      "--instance-ids", 
      "--layer-ids", 
      "--command", 
      "--comment", 
      "--custom-json", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-create-instance{
   $flags=(
      "--stack-id", 
      "--layer-ids", 
      "--instance-type", 
      "--auto-scaling-type", 
      "--hostname", 
      "--os", 
      "--ami-id", 
      "--ssh-key-name", 
      "--availability-zone", 
      "--virtualization-type", 
      "--subnet-id", 
      "--architecture", 
      "--root-device-type", 
      "--block-device-mappings", 
      "--install-updates-on-boot", 
      "--no-install-updates-on-boot", 
      "--ebs-optimized", 
      "--no-ebs-optimized", 
      "--agent-version", 
      "--tenancy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-create-layer{
   $flags=(
      "--stack-id", 
      "--type", 
      "--name", 
      "--shortname", 
      "--attributes", 
      "--cloud-watch-logs-configuration", 
      "--custom-instance-profile-arn", 
      "--custom-json", 
      "--custom-security-group-ids", 
      "--packages", 
      "--volume-configurations", 
      "--enable-auto-healing", 
      "--no-enable-auto-healing", 
      "--auto-assign-elastic-ips", 
      "--no-auto-assign-elastic-ips", 
      "--auto-assign-public-ips", 
      "--no-auto-assign-public-ips", 
      "--custom-recipes", 
      "--install-updates-on-boot", 
      "--no-install-updates-on-boot", 
      "--use-ebs-optimized-instances", 
      "--no-use-ebs-optimized-instances", 
      "--lifecycle-event-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-create-stack{
   $flags=(
      "--name", 
      "--vpc-id", 
      "--attributes", 
      "--service-role-arn", 
      "--default-instance-profile-arn", 
      "--default-os", 
      "--hostname-theme", 
      "--default-availability-zone", 
      "--default-subnet-id", 
      "--custom-json", 
      "--configuration-manager", 
      "--chef-configuration", 
      "--use-custom-cookbooks", 
      "--no-use-custom-cookbooks", 
      "--use-opsworks-security-groups", 
      "--no-use-opsworks-security-groups", 
      "--custom-cookbooks-source", 
      "--default-ssh-key-name", 
      "--default-root-device-type", 
      "--agent-version", 
      "--stack-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-create-user-profile{
   $flags=(
      "--iam-user-arn", 
      "--ssh-username", 
      "--ssh-public-key", 
      "--allow-self-management", 
      "--no-allow-self-management", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-delete-app{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-delete-instance{
   $flags=(
      "--instance-id", 
      "--delete-elastic-ip", 
      "--no-delete-elastic-ip", 
      "--delete-volumes", 
      "--no-delete-volumes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-delete-layer{
   $flags=(
      "--layer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-delete-stack{
   $flags=(
      "--stack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-delete-user-profile{
   $flags=(
      "--iam-user-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-deregister-ecs-cluster{
   $flags=(
      "--ecs-cluster-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-deregister-elastic-ip{
   $flags=(
      "--elastic-ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-deregister-instance{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-deregister-rds-db-instance{
   $flags=(
      "--rds-db-instance-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-deregister-volume{
   $flags=(
      "--volume-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-agent-versions{
   $flags=(
      "--stack-id", 
      "--configuration-manager", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-apps{
   $flags=(
      "--stack-id", 
      "--app-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-commands{
   $flags=(
      "--deployment-id", 
      "--instance-id", 
      "--command-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-deployments{
   $flags=(
      "--stack-id", 
      "--app-id", 
      "--deployment-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-ecs-clusters{
   $flags=(
      "--ecs-cluster-arns", 
      "--stack-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-elastic-ips{
   $flags=(
      "--instance-id", 
      "--stack-id", 
      "--ips", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-elastic-load-balancers{
   $flags=(
      "--stack-id", 
      "--layer-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-instances{
   $flags=(
      "--stack-id", 
      "--layer-id", 
      "--instance-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-layers{
   $flags=(
      "--stack-id", 
      "--layer-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-load-based-auto-scaling{
   $flags=(
      "--layer-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-my-user-profile{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-operating-systems{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-permissions{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-raid-arrays{
   $flags=(
      "--instance-id", 
      "--stack-id", 
      "--raid-array-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-rds-db-instances{
   $flags=(
      "--stack-id", 
      "--rds-db-instance-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-service-errors{
   $flags=(
      "--stack-id", 
      "--instance-id", 
      "--service-error-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-stack-provisioning-parameters{
   $flags=(
      "--stack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-stack-summary{
   $flags=(
      "--stack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-stacks{
   $flags=(
      "--stack-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-time-based-auto-scaling{
   $flags=(
      "--instance-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-user-profiles{
   $flags=(
      "--iam-user-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-describe-volumes{
   $flags=(
      "--instance-id", 
      "--stack-id", 
      "--raid-array-id", 
      "--volume-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-detach-elastic-load-balancer{
   $flags=(
      "--elastic-load-balancer-name", 
      "--layer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-disassociate-elastic-ip{
   $flags=(
      "--elastic-ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-get-hostname-suggestion{
   $flags=(
      "--layer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-grant-access{
   $flags=(
      "--instance-id", 
      "--valid-for-in-minutes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-list-tags{
   $flags=(
      "--resource-arn", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-reboot-instance{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-register{
   $flags=(
      "--stack-id", 
      "--infrastructure-class", 
      "--override-hostname", 
      "--override-private-ip", 
      "--override-public-ip", 
      "--override-ssh", 
      "--ssh-username", 
      "--ssh-private-key", 
      "--local", 
      "--use-instance-profile"
    );
   return $flags;
}
function Get-opsworks-register-ecs-cluster{
   $flags=(
      "--ecs-cluster-arn", 
      "--stack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-register-elastic-ip{
   $flags=(
      "--elastic-ip", 
      "--stack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-register-instance{
   $flags=(
      "--stack-id", 
      "--hostname", 
      "--public-ip", 
      "--private-ip", 
      "--rsa-public-key", 
      "--rsa-public-key-fingerprint", 
      "--instance-identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-register-rds-db-instance{
   $flags=(
      "--stack-id", 
      "--rds-db-instance-arn", 
      "--db-user", 
      "--db-password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-register-volume{
   $flags=(
      "--ec", 
      "--stack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-set-load-based-auto-scaling{
   $flags=(
      "--layer-id", 
      "--enable", 
      "--no-enable", 
      "--up-scaling", 
      "--down-scaling", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-set-permission{
   $flags=(
      "--stack-id", 
      "--iam-user-arn", 
      "--allow-ssh", 
      "--no-allow-ssh", 
      "--allow-sudo", 
      "--no-allow-sudo", 
      "--level", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-set-time-based-auto-scaling{
   $flags=(
      "--instance-id", 
      "--auto-scaling-schedule", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-start-instance{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-start-stack{
   $flags=(
      "--stack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-stop-instance{
   $flags=(
      "--instance-id", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-stop-stack{
   $flags=(
      "--stack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-unassign-instance{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-unassign-volume{
   $flags=(
      "--volume-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-app{
   $flags=(
      "--app-id", 
      "--name", 
      "--description", 
      "--data-sources", 
      "--type", 
      "--app-source", 
      "--domains", 
      "--enable-ssl", 
      "--no-enable-ssl", 
      "--ssl-configuration", 
      "--attributes", 
      "--environment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-elastic-ip{
   $flags=(
      "--elastic-ip", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-instance{
   $flags=(
      "--instance-id", 
      "--layer-ids", 
      "--instance-type", 
      "--auto-scaling-type", 
      "--hostname", 
      "--os", 
      "--ami-id", 
      "--ssh-key-name", 
      "--architecture", 
      "--install-updates-on-boot", 
      "--no-install-updates-on-boot", 
      "--ebs-optimized", 
      "--no-ebs-optimized", 
      "--agent-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-layer{
   $flags=(
      "--layer-id", 
      "--name", 
      "--shortname", 
      "--attributes", 
      "--cloud-watch-logs-configuration", 
      "--custom-instance-profile-arn", 
      "--custom-json", 
      "--custom-security-group-ids", 
      "--packages", 
      "--volume-configurations", 
      "--enable-auto-healing", 
      "--no-enable-auto-healing", 
      "--auto-assign-elastic-ips", 
      "--no-auto-assign-elastic-ips", 
      "--auto-assign-public-ips", 
      "--no-auto-assign-public-ips", 
      "--custom-recipes", 
      "--install-updates-on-boot", 
      "--no-install-updates-on-boot", 
      "--use-ebs-optimized-instances", 
      "--no-use-ebs-optimized-instances", 
      "--lifecycle-event-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-my-user-profile{
   $flags=(
      "--ssh-public-key", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-rds-db-instance{
   $flags=(
      "--rds-db-instance-arn", 
      "--db-user", 
      "--db-password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-stack{
   $flags=(
      "--stack-id", 
      "--name", 
      "--attributes", 
      "--service-role-arn", 
      "--default-instance-profile-arn", 
      "--default-os", 
      "--hostname-theme", 
      "--default-availability-zone", 
      "--default-subnet-id", 
      "--custom-json", 
      "--configuration-manager", 
      "--chef-configuration", 
      "--use-custom-cookbooks", 
      "--no-use-custom-cookbooks", 
      "--custom-cookbooks-source", 
      "--default-ssh-key-name", 
      "--default-root-device-type", 
      "--use-opsworks-security-groups", 
      "--no-use-opsworks-security-groups", 
      "--agent-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-user-profile{
   $flags=(
      "--iam-user-arn", 
      "--ssh-username", 
      "--ssh-public-key", 
      "--allow-self-management", 
      "--no-allow-self-management", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-update-volume{
   $flags=(
      "--volume-id", 
      "--name", 
      "--mount-point", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-wait{
   $flags=("");
   return $flags;
}
function Get-opsworks-cm{
   $commands=(
      "associate-node", 
      "create-backup", 
      "create-server", 
      "delete-backup", 
      "delete-server", 
      "describe-account-attributes", 
      "describe-backups", 
      "describe-events", 
      "describe-node-association-status", 
      "describe-servers", 
      "disassociate-node", 
      "export-server-engine-attribute", 
      "list-tags-for-resource", 
      "restore-server", 
      "start-maintenance", 
      "tag-resource", 
      "untag-resource", 
      "update-server", 
      "update-server-engine-attributes", 
      "wait"
    );
   return $commands;
}
function Get-opsworks-cm-associate-node{
   $flags=(
      "--server-name", 
      "--node-name", 
      "--engine-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-create-backup{
   $flags=(
      "--server-name", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-create-server{
   $flags=(
      "--associate-public-ip-address", 
      "--no-associate-public-ip-address", 
      "--custom-domain", 
      "--custom-certificate", 
      "--custom-private-key", 
      "--disable-automated-backup", 
      "--no-disable-automated-backup", 
      "--engine", 
      "--engine-model", 
      "--engine-version", 
      "--engine-attributes", 
      "--backup-retention-count", 
      "--server-name", 
      "--instance-profile-arn", 
      "--instance-type", 
      "--key-pair", 
      "--preferred-maintenance-window", 
      "--preferred-backup-window", 
      "--security-group-ids", 
      "--service-role-arn", 
      "--subnet-ids", 
      "--tags", 
      "--backup-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-delete-backup{
   $flags=(
      "--backup-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-delete-server{
   $flags=(
      "--server-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-describe-account-attributes{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-describe-backups{
   $flags=(
      "--backup-id", 
      "--server-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-describe-events{
   $flags=(
      "--server-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-describe-node-association-status{
   $flags=(
      "--node-association-status-token", 
      "--server-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-describe-servers{
   $flags=(
      "--server-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-disassociate-node{
   $flags=(
      "--server-name", 
      "--node-name", 
      "--engine-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-export-server-engine-attribute{
   $flags=(
      "--export-attribute-name", 
      "--server-name", 
      "--input-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-restore-server{
   $flags=(
      "--backup-id", 
      "--server-name", 
      "--instance-type", 
      "--key-pair", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-start-maintenance{
   $flags=(
      "--server-name", 
      "--engine-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-update-server{
   $flags=(
      "--disable-automated-backup", 
      "--no-disable-automated-backup", 
      "--backup-retention-count", 
      "--server-name", 
      "--preferred-maintenance-window", 
      "--preferred-backup-window", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-update-server-engine-attributes{
   $flags=(
      "--server-name", 
      "--attribute-name", 
      "--attribute-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-opsworks-cm-wait{
   $flags=("");
   return $flags;
}
function Get-organizations{
   $commands=(
      "accept-handshake", 
      "attach-policy", 
      "cancel-handshake", 
      "create-account", 
      "create-gov-cloud-account", 
      "create-organization", 
      "create-organizational-unit", 
      "create-policy", 
      "decline-handshake", 
      "delete-organization", 
      "delete-organizational-unit", 
      "delete-policy", 
      "deregister-delegated-administrator", 
      "describe-account", 
      "describe-create-account-status", 
      "describe-effective-policy", 
      "describe-handshake", 
      "describe-organization", 
      "describe-organizational-unit", 
      "describe-policy", 
      "detach-policy", 
      "disable-aws-service-access", 
      "disable-policy-type", 
      "enable-all-features", 
      "enable-aws-service-access", 
      "enable-policy-type", 
      "invite-account-to-organization", 
      "leave-organization", 
      "list-accounts", 
      "list-accounts-for-parent", 
      "list-aws-service-access-for-organization", 
      "list-children", 
      "list-create-account-status", 
      "list-delegated-administrators", 
      "list-delegated-services-for-account", 
      "list-handshakes-for-account", 
      "list-handshakes-for-organization", 
      "list-organizational-units-for-parent", 
      "list-parents", 
      "list-policies", 
      "list-policies-for-target", 
      "list-roots", 
      "list-tags-for-resource", 
      "list-targets-for-policy", 
      "move-account", 
      "register-delegated-administrator", 
      "remove-account-from-organization", 
      "tag-resource", 
      "untag-resource", 
      "update-organizational-unit", 
      "update-policy"
    );
   return $commands;
}
function Get-organizations-accept-handshake{
   $flags=(
      "--handshake-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-attach-policy{
   $flags=(
      "--policy-id", 
      "--target-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-cancel-handshake{
   $flags=(
      "--handshake-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-create-account{
   $flags=(
      "--email", 
      "--account-name", 
      "--role-name", 
      "--iam-user-access-to-billing", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-create-gov-cloud-account{
   $flags=(
      "--email", 
      "--account-name", 
      "--role-name", 
      "--iam-user-access-to-billing", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-create-organization{
   $flags=(
      "--feature-set", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-create-organizational-unit{
   $flags=(
      "--parent-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-create-policy{
   $flags=(
      "--content", 
      "--description", 
      "--name", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-decline-handshake{
   $flags=(
      "--handshake-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-delete-organization{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-delete-organizational-unit{
   $flags=(
      "--organizational-unit-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-delete-policy{
   $flags=(
      "--policy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-deregister-delegated-administrator{
   $flags=(
      "--account-id", 
      "--service-principal", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-describe-account{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-describe-create-account-status{
   $flags=(
      "--create-account-request-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-describe-effective-policy{
   $flags=(
      "--policy-type", 
      "--target-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-describe-handshake{
   $flags=(
      "--handshake-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-describe-organization{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-describe-organizational-unit{
   $flags=(
      "--organizational-unit-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-describe-policy{
   $flags=(
      "--policy-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-detach-policy{
   $flags=(
      "--policy-id", 
      "--target-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-disable-aws-service-access{
   $flags=(
      "--service-principal", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-disable-policy-type{
   $flags=(
      "--root-id", 
      "--policy-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-enable-all-features{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-enable-aws-service-access{
   $flags=(
      "--service-principal", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-enable-policy-type{
   $flags=(
      "--root-id", 
      "--policy-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-invite-account-to-organization{
   $flags=(
      "--target", 
      "--notes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-leave-organization{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-accounts{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-accounts-for-parent{
   $flags=(
      "--parent-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-aws-service-access-for-organization{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-children{
   $flags=(
      "--parent-id", 
      "--child-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-create-account-status{
   $flags=(
      "--states", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-delegated-administrators{
   $flags=(
      "--service-principal", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-delegated-services-for-account{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-handshakes-for-account{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-handshakes-for-organization{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-organizational-units-for-parent{
   $flags=(
      "--parent-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-parents{
   $flags=(
      "--child-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-policies{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-policies-for-target{
   $flags=(
      "--target-id", 
      "--filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-roots{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-tags-for-resource{
   $flags=(
      "--resource-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-list-targets-for-policy{
   $flags=(
      "--policy-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-move-account{
   $flags=(
      "--account-id", 
      "--source-parent-id", 
      "--destination-parent-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-register-delegated-administrator{
   $flags=(
      "--account-id", 
      "--service-principal", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-remove-account-from-organization{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-tag-resource{
   $flags=(
      "--resource-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-untag-resource{
   $flags=(
      "--resource-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-update-organizational-unit{
   $flags=(
      "--organizational-unit-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-organizations-update-policy{
   $flags=(
      "--policy-id", 
      "--name", 
      "--description", 
      "--content", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-outposts{
   $commands=(
      "create-outpost", 
      "delete-outpost", 
      "delete-site", 
      "get-outpost", 
      "get-outpost-instance-types", 
      "list-outposts", 
      "list-sites"
    );
   return $commands;
}
function Get-outposts-create-outpost{
   $flags=(
      "--name", 
      "--description", 
      "--site-id", 
      "--availability-zone", 
      "--availability-zone-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-outposts-delete-outpost{
   $flags=(
      "--outpost-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-outposts-delete-site{
   $flags=(
      "--site-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-outposts-get-outpost{
   $flags=(
      "--outpost-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-outposts-get-outpost-instance-types{
   $flags=(
      "--outpost-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-outposts-list-outposts{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-outposts-list-sites{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize{
   $commands=(
      "create-batch-inference-job", 
      "create-campaign", 
      "create-dataset", 
      "create-dataset-group", 
      "create-dataset-import-job", 
      "create-event-tracker", 
      "create-schema", 
      "create-solution", 
      "create-solution-version", 
      "delete-campaign", 
      "delete-dataset", 
      "delete-dataset-group", 
      "delete-event-tracker", 
      "delete-schema", 
      "delete-solution", 
      "describe-algorithm", 
      "describe-batch-inference-job", 
      "describe-campaign", 
      "describe-dataset", 
      "describe-dataset-group", 
      "describe-dataset-import-job", 
      "describe-event-tracker", 
      "describe-feature-transformation", 
      "describe-recipe", 
      "describe-schema", 
      "describe-solution", 
      "describe-solution-version", 
      "get-solution-metrics", 
      "list-batch-inference-jobs", 
      "list-campaigns", 
      "list-dataset-groups", 
      "list-dataset-import-jobs", 
      "list-datasets", 
      "list-event-trackers", 
      "list-recipes", 
      "list-schemas", 
      "list-solution-versions", 
      "list-solutions", 
      "update-campaign"
    );
   return $commands;
}
function Get-personalize-create-batch-inference-job{
   $flags=(
      "--job-name", 
      "--solution-version-arn", 
      "--num-results", 
      "--job-input", 
      "--job-output", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-create-campaign{
   $flags=(
      "--name", 
      "--solution-version-arn", 
      "--min-provisioned-tps", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-create-dataset{
   $flags=(
      "--name", 
      "--schema-arn", 
      "--dataset-group-arn", 
      "--dataset-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-create-dataset-group{
   $flags=(
      "--name", 
      "--role-arn", 
      "--kms-key-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-create-dataset-import-job{
   $flags=(
      "--job-name", 
      "--dataset-arn", 
      "--data-source", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-create-event-tracker{
   $flags=(
      "--name", 
      "--dataset-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-create-schema{
   $flags=(
      "--name", 
      "--schema", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-create-solution{
   $flags=(
      "--name", 
      "--perform-hpo", 
      "--no-perform-hpo", 
      "--perform-auto-ml", 
      "--no-perform-auto-ml", 
      "--recipe-arn", 
      "--dataset-group-arn", 
      "--event-type", 
      "--solution-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-create-solution-version{
   $flags=(
      "--solution-arn", 
      "--training-mode", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-delete-campaign{
   $flags=(
      "--campaign-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-delete-dataset{
   $flags=(
      "--dataset-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-delete-dataset-group{
   $flags=(
      "--dataset-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-delete-event-tracker{
   $flags=(
      "--event-tracker-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-delete-schema{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-delete-solution{
   $flags=(
      "--solution-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-algorithm{
   $flags=(
      "--algorithm-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-batch-inference-job{
   $flags=(
      "--batch-inference-job-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-campaign{
   $flags=(
      "--campaign-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-dataset{
   $flags=(
      "--dataset-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-dataset-group{
   $flags=(
      "--dataset-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-dataset-import-job{
   $flags=(
      "--dataset-import-job-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-event-tracker{
   $flags=(
      "--event-tracker-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-feature-transformation{
   $flags=(
      "--feature-transformation-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-recipe{
   $flags=(
      "--recipe-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-schema{
   $flags=(
      "--schema-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-solution{
   $flags=(
      "--solution-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-describe-solution-version{
   $flags=(
      "--solution-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-get-solution-metrics{
   $flags=(
      "--solution-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-batch-inference-jobs{
   $flags=(
      "--solution-version-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-campaigns{
   $flags=(
      "--solution-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-dataset-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-dataset-import-jobs{
   $flags=(
      "--dataset-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-datasets{
   $flags=(
      "--dataset-group-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-event-trackers{
   $flags=(
      "--dataset-group-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-recipes{
   $flags=(
      "--recipe-provider", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-schemas{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-solution-versions{
   $flags=(
      "--solution-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-list-solutions{
   $flags=(
      "--dataset-group-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-update-campaign{
   $flags=(
      "--campaign-arn", 
      "--solution-version-arn", 
      "--min-provisioned-tps", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-events{
   $commands=(
      "put-events"
    );
   return $commands;
}
function Get-personalize-events-put-events{
   $flags=(
      "--tracking-id", 
      "--user-id", 
      "--session-id", 
      "--event-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-runtime{
   $commands=(
      "get-personalized-ranking", 
      "get-recommendations"
    );
   return $commands;
}
function Get-personalize-runtime-get-personalized-ranking{
   $flags=(
      "--campaign-arn", 
      "--input-list", 
      "--user-id", 
      "--context", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-personalize-runtime-get-recommendations{
   $flags=(
      "--campaign-arn", 
      "--item-id", 
      "--user-id", 
      "--num-results", 
      "--context", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pi{
   $commands=(
      "describe-dimension-keys", 
      "get-resource-metrics"
    );
   return $commands;
}
function Get-pi-describe-dimension-keys{
   $flags=(
      "--service-type", 
      "--identifier", 
      "--start-time", 
      "--end-time", 
      "--metric", 
      "--period-in-seconds", 
      "--group-by", 
      "--partition-by", 
      "--filter", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pi-get-resource-metrics{
   $flags=(
      "--service-type", 
      "--identifier", 
      "--metric-queries", 
      "--start-time", 
      "--end-time", 
      "--period-in-seconds", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint{
   $commands=(
      "create-app", 
      "create-campaign", 
      "create-email-template", 
      "create-export-job", 
      "create-import-job", 
      "create-journey", 
      "create-push-template", 
      "create-recommender-configuration", 
      "create-segment", 
      "create-sms-template", 
      "create-voice-template", 
      "delete-adm-channel", 
      "delete-apns-channel", 
      "delete-apns-sandbox-channel", 
      "delete-apns-voip-channel", 
      "delete-apns-voip-sandbox-channel", 
      "delete-app", 
      "delete-baidu-channel", 
      "delete-campaign", 
      "delete-email-channel", 
      "delete-email-template", 
      "delete-endpoint", 
      "delete-event-stream", 
      "delete-gcm-channel", 
      "delete-journey", 
      "delete-push-template", 
      "delete-recommender-configuration", 
      "delete-segment", 
      "delete-sms-channel", 
      "delete-sms-template", 
      "delete-user-endpoints", 
      "delete-voice-channel", 
      "delete-voice-template", 
      "get-adm-channel", 
      "get-apns-channel", 
      "get-apns-sandbox-channel", 
      "get-apns-voip-channel", 
      "get-apns-voip-sandbox-channel", 
      "get-app", 
      "get-application-date-range-kpi", 
      "get-application-settings", 
      "get-apps", 
      "get-baidu-channel", 
      "get-campaign", 
      "get-campaign-activities", 
      "get-campaign-date-range-kpi", 
      "get-campaign-version", 
      "get-campaign-versions", 
      "get-campaigns", 
      "get-channels", 
      "get-email-channel", 
      "get-email-template", 
      "get-endpoint", 
      "get-event-stream", 
      "get-export-job", 
      "get-export-jobs", 
      "get-gcm-channel", 
      "get-import-job", 
      "get-import-jobs", 
      "get-journey", 
      "get-journey-date-range-kpi", 
      "get-journey-execution-activity-metrics", 
      "get-journey-execution-metrics", 
      "get-push-template", 
      "get-recommender-configuration", 
      "get-recommender-configurations", 
      "get-segment", 
      "get-segment-export-jobs", 
      "get-segment-import-jobs", 
      "get-segment-version", 
      "get-segment-versions", 
      "get-segments", 
      "get-sms-channel", 
      "get-sms-template", 
      "get-user-endpoints", 
      "get-voice-channel", 
      "get-voice-template", 
      "list-journeys", 
      "list-tags-for-resource", 
      "list-template-versions", 
      "list-templates", 
      "phone-number-validate", 
      "put-event-stream", 
      "put-events", 
      "remove-attributes", 
      "send-messages", 
      "send-users-messages", 
      "tag-resource", 
      "untag-resource", 
      "update-adm-channel", 
      "update-apns-channel", 
      "update-apns-sandbox-channel", 
      "update-apns-voip-channel", 
      "update-apns-voip-sandbox-channel", 
      "update-application-settings", 
      "update-baidu-channel", 
      "update-campaign", 
      "update-email-channel", 
      "update-email-template", 
      "update-endpoint", 
      "update-endpoints-batch", 
      "update-gcm-channel", 
      "update-journey", 
      "update-journey-state", 
      "update-push-template", 
      "update-recommender-configuration", 
      "update-segment", 
      "update-sms-channel", 
      "update-sms-template", 
      "update-template-active-version", 
      "update-voice-channel", 
      "update-voice-template"
    );
   return $commands;
}
function Get-pinpoint-create-app{
   $flags=(
      "--create-application-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-campaign{
   $flags=(
      "--application-id", 
      "--write-campaign-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-email-template{
   $flags=(
      "--email-template-request", 
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-export-job{
   $flags=(
      "--application-id", 
      "--export-job-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-import-job{
   $flags=(
      "--application-id", 
      "--import-job-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-journey{
   $flags=(
      "--application-id", 
      "--write-journey-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-push-template{
   $flags=(
      "--push-notification-template-request", 
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-recommender-configuration{
   $flags=(
      "--create-recommender-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-segment{
   $flags=(
      "--application-id", 
      "--write-segment-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-sms-template{
   $flags=(
      "--sms-template-request", 
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-create-voice-template{
   $flags=(
      "--template-name", 
      "--voice-template-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-adm-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-apns-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-apns-sandbox-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-apns-voip-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-apns-voip-sandbox-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-app{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-baidu-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-campaign{
   $flags=(
      "--application-id", 
      "--campaign-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-email-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-email-template{
   $flags=(
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-endpoint{
   $flags=(
      "--application-id", 
      "--endpoint-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-event-stream{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-gcm-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-journey{
   $flags=(
      "--application-id", 
      "--journey-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-push-template{
   $flags=(
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-recommender-configuration{
   $flags=(
      "--recommender-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-segment{
   $flags=(
      "--application-id", 
      "--segment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-sms-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-sms-template{
   $flags=(
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-user-endpoints{
   $flags=(
      "--application-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-voice-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-delete-voice-template{
   $flags=(
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-adm-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-apns-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-apns-sandbox-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-apns-voip-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-apns-voip-sandbox-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-app{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-application-date-range-kpi{
   $flags=(
      "--application-id", 
      "--end-time", 
      "--kpi-name", 
      "--next-token", 
      "--page-size", 
      "--start-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-application-settings{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-apps{
   $flags=(
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-baidu-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-campaign{
   $flags=(
      "--application-id", 
      "--campaign-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-campaign-activities{
   $flags=(
      "--application-id", 
      "--campaign-id", 
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-campaign-date-range-kpi{
   $flags=(
      "--application-id", 
      "--campaign-id", 
      "--end-time", 
      "--kpi-name", 
      "--next-token", 
      "--page-size", 
      "--start-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-campaign-version{
   $flags=(
      "--application-id", 
      "--campaign-id", 
      "--campaign-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-campaign-versions{
   $flags=(
      "--application-id", 
      "--campaign-id", 
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-campaigns{
   $flags=(
      "--application-id", 
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-channels{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-email-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-email-template{
   $flags=(
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-endpoint{
   $flags=(
      "--application-id", 
      "--endpoint-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-event-stream{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-export-job{
   $flags=(
      "--application-id", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-export-jobs{
   $flags=(
      "--application-id", 
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-gcm-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-import-job{
   $flags=(
      "--application-id", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-import-jobs{
   $flags=(
      "--application-id", 
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-journey{
   $flags=(
      "--application-id", 
      "--journey-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-journey-date-range-kpi{
   $flags=(
      "--application-id", 
      "--end-time", 
      "--journey-id", 
      "--kpi-name", 
      "--next-token", 
      "--page-size", 
      "--start-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-journey-execution-activity-metrics{
   $flags=(
      "--application-id", 
      "--journey-activity-id", 
      "--journey-id", 
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-journey-execution-metrics{
   $flags=(
      "--application-id", 
      "--journey-id", 
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-push-template{
   $flags=(
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-recommender-configuration{
   $flags=(
      "--recommender-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-recommender-configurations{
   $flags=(
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-segment{
   $flags=(
      "--application-id", 
      "--segment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-segment-export-jobs{
   $flags=(
      "--application-id", 
      "--page-size", 
      "--segment-id", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-segment-import-jobs{
   $flags=(
      "--application-id", 
      "--page-size", 
      "--segment-id", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-segment-version{
   $flags=(
      "--application-id", 
      "--segment-id", 
      "--segment-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-segment-versions{
   $flags=(
      "--application-id", 
      "--page-size", 
      "--segment-id", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-segments{
   $flags=(
      "--application-id", 
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-sms-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-sms-template{
   $flags=(
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-user-endpoints{
   $flags=(
      "--application-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-voice-channel{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-get-voice-template{
   $flags=(
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-list-journeys{
   $flags=(
      "--application-id", 
      "--page-size", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-list-template-versions{
   $flags=(
      "--next-token", 
      "--page-size", 
      "--template-name", 
      "--template-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-list-templates{
   $flags=(
      "--next-token", 
      "--page-size", 
      "--prefix", 
      "--template-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-phone-number-validate{
   $flags=(
      "--number-validate-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-put-event-stream{
   $flags=(
      "--application-id", 
      "--write-event-stream", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-put-events{
   $flags=(
      "--application-id", 
      "--events-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-remove-attributes{
   $flags=(
      "--application-id", 
      "--attribute-type", 
      "--update-attributes-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-send-messages{
   $flags=(
      "--application-id", 
      "--message-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-send-users-messages{
   $flags=(
      "--application-id", 
      "--send-users-message-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags-model", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-adm-channel{
   $flags=(
      "--adm-channel-request", 
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-apns-channel{
   $flags=(
      "--apns-channel-request", 
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-apns-sandbox-channel{
   $flags=(
      "--apns-sandbox-channel-request", 
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-apns-voip-channel{
   $flags=(
      "--apns-voip-channel-request", 
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-apns-voip-sandbox-channel{
   $flags=(
      "--apns-voip-sandbox-channel-request", 
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-application-settings{
   $flags=(
      "--application-id", 
      "--write-application-settings-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-baidu-channel{
   $flags=(
      "--application-id", 
      "--baidu-channel-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-campaign{
   $flags=(
      "--application-id", 
      "--campaign-id", 
      "--write-campaign-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-email-channel{
   $flags=(
      "--application-id", 
      "--email-channel-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-email-template{
   $flags=(
      "--create-new-version", 
      "--no-create-new-version", 
      "--email-template-request", 
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-endpoint{
   $flags=(
      "--application-id", 
      "--endpoint-id", 
      "--endpoint-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-endpoints-batch{
   $flags=(
      "--application-id", 
      "--endpoint-batch-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-gcm-channel{
   $flags=(
      "--application-id", 
      "--gcm-channel-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-journey{
   $flags=(
      "--application-id", 
      "--journey-id", 
      "--write-journey-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-journey-state{
   $flags=(
      "--application-id", 
      "--journey-id", 
      "--journey-state-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-push-template{
   $flags=(
      "--create-new-version", 
      "--no-create-new-version", 
      "--push-notification-template-request", 
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-recommender-configuration{
   $flags=(
      "--recommender-id", 
      "--update-recommender-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-segment{
   $flags=(
      "--application-id", 
      "--segment-id", 
      "--write-segment-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-sms-channel{
   $flags=(
      "--application-id", 
      "--sms-channel-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-sms-template{
   $flags=(
      "--create-new-version", 
      "--no-create-new-version", 
      "--sms-template-request", 
      "--template-name", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-template-active-version{
   $flags=(
      "--template-active-version-request", 
      "--template-name", 
      "--template-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-voice-channel{
   $flags=(
      "--application-id", 
      "--voice-channel-request", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-update-voice-template{
   $flags=(
      "--create-new-version", 
      "--no-create-new-version", 
      "--template-name", 
      "--voice-template-request", 
      "--template-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email{
   $commands=(
      "create-configuration-set", 
      "create-configuration-set-event-destination", 
      "create-dedicated-ip-pool", 
      "create-deliverability-test-report", 
      "create-email-identity", 
      "delete-configuration-set", 
      "delete-configuration-set-event-destination", 
      "delete-dedicated-ip-pool", 
      "delete-email-identity", 
      "get-account", 
      "get-blacklist-reports", 
      "get-configuration-set", 
      "get-configuration-set-event-destinations", 
      "get-dedicated-ip", 
      "get-dedicated-ips", 
      "get-deliverability-dashboard-options", 
      "get-deliverability-test-report", 
      "get-domain-deliverability-campaign", 
      "get-domain-statistics-report", 
      "get-email-identity", 
      "list-configuration-sets", 
      "list-dedicated-ip-pools", 
      "list-deliverability-test-reports", 
      "list-domain-deliverability-campaigns", 
      "list-email-identities", 
      "list-tags-for-resource", 
      "put-account-dedicated-ip-warmup-attributes", 
      "put-account-sending-attributes", 
      "put-configuration-set-delivery-options", 
      "put-configuration-set-reputation-options", 
      "put-configuration-set-sending-options", 
      "put-configuration-set-tracking-options", 
      "put-dedicated-ip-in-pool", 
      "put-dedicated-ip-warmup-attributes", 
      "put-deliverability-dashboard-option", 
      "put-email-identity-dkim-attributes", 
      "put-email-identity-feedback-attributes", 
      "put-email-identity-mail-from-attributes", 
      "send-email", 
      "tag-resource", 
      "untag-resource", 
      "update-configuration-set-event-destination"
    );
   return $commands;
}
function Get-pinpoint-email-create-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--tracking-options", 
      "--delivery-options", 
      "--reputation-options", 
      "--sending-options", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-create-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination-name", 
      "--event-destination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-create-dedicated-ip-pool{
   $flags=(
      "--pool-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-create-deliverability-test-report{
   $flags=(
      "--report-name", 
      "--from-email-address", 
      "--content", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-create-email-identity{
   $flags=(
      "--email-identity", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-delete-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-delete-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-delete-dedicated-ip-pool{
   $flags=(
      "--pool-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-delete-email-identity{
   $flags=(
      "--email-identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-blacklist-reports{
   $flags=(
      "--blacklist-item-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-configuration-set-event-destinations{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-dedicated-ip{
   $flags=(
      "--ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-dedicated-ips{
   $flags=(
      "--pool-name", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-deliverability-dashboard-options{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-deliverability-test-report{
   $flags=(
      "--report-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-domain-deliverability-campaign{
   $flags=(
      "--campaign-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-domain-statistics-report{
   $flags=(
      "--domain", 
      "--start-date", 
      "--end-date", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-get-email-identity{
   $flags=(
      "--email-identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-list-configuration-sets{
   $flags=(
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-list-dedicated-ip-pools{
   $flags=(
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-list-deliverability-test-reports{
   $flags=(
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-list-domain-deliverability-campaigns{
   $flags=(
      "--start-date", 
      "--end-date", 
      "--subscribed-domain", 
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-list-email-identities{
   $flags=(
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-account-dedicated-ip-warmup-attributes{
   $flags=(
      "--auto-warmup-enabled", 
      "--no-auto-warmup-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-account-sending-attributes{
   $flags=(
      "--sending-enabled", 
      "--no-sending-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-configuration-set-delivery-options{
   $flags=(
      "--configuration-set-name", 
      "--tls-policy", 
      "--sending-pool-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-configuration-set-reputation-options{
   $flags=(
      "--configuration-set-name", 
      "--reputation-metrics-enabled", 
      "--no-reputation-metrics-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-configuration-set-sending-options{
   $flags=(
      "--configuration-set-name", 
      "--sending-enabled", 
      "--no-sending-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-configuration-set-tracking-options{
   $flags=(
      "--configuration-set-name", 
      "--custom-redirect-domain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-dedicated-ip-in-pool{
   $flags=(
      "--ip", 
      "--destination-pool-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-dedicated-ip-warmup-attributes{
   $flags=(
      "--ip", 
      "--warmup-percentage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-deliverability-dashboard-option{
   $flags=(
      "--dashboard-enabled", 
      "--no-dashboard-enabled", 
      "--subscribed-domains", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-email-identity-dkim-attributes{
   $flags=(
      "--email-identity", 
      "--signing-enabled", 
      "--no-signing-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-email-identity-feedback-attributes{
   $flags=(
      "--email-identity", 
      "--email-forwarding-enabled", 
      "--no-email-forwarding-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-put-email-identity-mail-from-attributes{
   $flags=(
      "--email-identity", 
      "--mail-from-domain", 
      "--behavior-on-mx-failure", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-send-email{
   $flags=(
      "--from-email-address", 
      "--destination", 
      "--reply-to-addresses", 
      "--feedback-forwarding-email-address", 
      "--content", 
      "--email-tags", 
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-email-update-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination-name", 
      "--event-destination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-sms-voice{
   $commands=(
      "create-configuration-set", 
      "create-configuration-set-event-destination", 
      "delete-configuration-set", 
      "delete-configuration-set-event-destination", 
      "get-configuration-set-event-destinations", 
      "send-voice-message", 
      "update-configuration-set-event-destination"
    );
   return $commands;
}
function Get-pinpoint-sms-voice-create-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-sms-voice-create-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination", 
      "--event-destination-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-sms-voice-delete-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-sms-voice-delete-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-sms-voice-get-configuration-set-event-destinations{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-sms-voice-send-voice-message{
   $flags=(
      "--caller-id", 
      "--configuration-set-name", 
      "--content", 
      "--destination-phone-number", 
      "--origination-phone-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pinpoint-sms-voice-update-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination", 
      "--event-destination-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly{
   $commands=(
      "delete-lexicon", 
      "describe-voices", 
      "get-lexicon", 
      "get-speech-synthesis-task", 
      "list-lexicons", 
      "list-speech-synthesis-tasks", 
      "put-lexicon", 
      "start-speech-synthesis-task", 
      "synthesize-speech"
    );
   return $commands;
}
function Get-polly-delete-lexicon{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly-describe-voices{
   $flags=(
      "--engine", 
      "--language-code", 
      "--include-additional-language-codes", 
      "--no-include-additional-language-codes", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly-get-lexicon{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly-get-speech-synthesis-task{
   $flags=(
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly-list-lexicons{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly-list-speech-synthesis-tasks{
   $flags=(
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly-put-lexicon{
   $flags=(
      "--name", 
      "--content", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly-start-speech-synthesis-task{
   $flags=(
      "--engine", 
      "--language-code", 
      "--lexicon-names", 
      "--output-format", 
      "--output-s3-bucket-name", 
      "--output-s3-key-prefix", 
      "--sample-rate", 
      "--sns-topic-arn", 
      "--speech-mark-types", 
      "--text", 
      "--text-type", 
      "--voice-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-polly-synthesize-speech{
   $flags=(
      "--engine", 
      "--language-code", 
      "--lexicon-names", 
      "--output-format", 
      "--sample-rate", 
      "--speech-mark-types", 
      "--text", 
      "--text-type", 
      "--voice-id"
    );
   return $flags;
}
function Get-pricing{
   $commands=(
      "describe-services", 
      "get-attribute-values", 
      "get-products"
    );
   return $commands;
}
function Get-pricing-describe-services{
   $flags=(
      "--service-code", 
      "--format-version", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pricing-get-attribute-values{
   $flags=(
      "--service-code", 
      "--attribute-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-pricing-get-products{
   $flags=(
      "--service-code", 
      "--filters", 
      "--format-version", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb{
   $commands=(
      "create-ledger", 
      "delete-ledger", 
      "describe-journal-s3-export", 
      "describe-ledger", 
      "export-journal-to-s3", 
      "get-block", 
      "get-digest", 
      "get-revision", 
      "list-journal-s3-exports", 
      "list-journal-s3-exports-for-ledger", 
      "list-ledgers", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-ledger"
    );
   return $commands;
}
function Get-qldb-create-ledger{
   $flags=(
      "--name", 
      "--tags", 
      "--permissions-mode", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-delete-ledger{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-describe-journal-s3-export{
   $flags=(
      "--name", 
      "--export-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-describe-ledger{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-export-journal-to-s3{
   $flags=(
      "--name", 
      "--inclusive-start-time", 
      "--exclusive-end-time", 
      "--s3-export-configuration ", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-get-block{
   $flags=(
      "--name", 
      "--block-address", 
      "--digest-tip-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-get-digest{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-get-revision{
   $flags=(
      "--name", 
      "--block-address", 
      "--document-id", 
      "--digest-tip-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-list-journal-s3-exports{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-list-journal-s3-exports-for-ledger{
   $flags=(
      "--name", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-list-ledgers{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-update-ledger{
   $flags=(
      "--name", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-qldb-session{
   $commands=(
      "send-command"
    );
   return $commands;
}
function Get-qldb-session-send-command{
   $flags=(
      "--session-token", 
      "--start-session", 
      "--start-transaction", 
      "--end-session", 
      "--commit-transaction", 
      "--abort-transaction", 
      "--execute-statement", 
      "--fetch-page", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight{
   $commands=(
      "cancel-ingestion", 
      "create-dashboard", 
      "create-data-set", 
      "create-data-source", 
      "create-group", 
      "create-group-membership", 
      "create-iam-policy-assignment", 
      "create-ingestion", 
      "create-template", 
      "create-template-alias", 
      "delete-dashboard", 
      "delete-data-set", 
      "delete-data-source", 
      "delete-group", 
      "delete-group-membership", 
      "delete-iam-policy-assignment", 
      "delete-template", 
      "delete-template-alias", 
      "delete-user", 
      "delete-user-by-principal-id", 
      "describe-dashboard", 
      "describe-dashboard-permissions", 
      "describe-data-set", 
      "describe-data-set-permissions", 
      "describe-data-source", 
      "describe-data-source-permissions", 
      "describe-group", 
      "describe-iam-policy-assignment", 
      "describe-ingestion", 
      "describe-template", 
      "describe-template-alias", 
      "describe-template-permissions", 
      "describe-user", 
      "get-dashboard-embed-url", 
      "list-dashboard-versions", 
      "list-dashboards", 
      "list-data-sets", 
      "list-data-sources", 
      "list-group-memberships", 
      "list-groups", 
      "list-iam-policy-assignments", 
      "list-iam-policy-assignments-for-user", 
      "list-ingestions", 
      "list-tags-for-resource", 
      "list-template-aliases", 
      "list-template-versions", 
      "list-templates", 
      "list-user-groups", 
      "list-users", 
      "register-user", 
      "search-dashboards", 
      "tag-resource", 
      "untag-resource", 
      "update-dashboard", 
      "update-dashboard-permissions", 
      "update-dashboard-published-version", 
      "update-data-set", 
      "update-data-set-permissions", 
      "update-data-source", 
      "update-data-source-permissions", 
      "update-group", 
      "update-iam-policy-assignment", 
      "update-template", 
      "update-template-alias", 
      "update-template-permissions", 
      "update-user"
    );
   return $commands;
}
function Get-quicksight-cancel-ingestion{
   $flags=(
      "--aws-account-id", 
      "--data-set-id", 
      "--ingestion-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-dashboard{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--name", 
      "--parameters", 
      "--permissions", 
      "--source-entity", 
      "--tags", 
      "--version-description", 
      "--dashboard-publish-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-data-set{
   $flags=(
      "--aws-account-id", 
      "--data-set-id", 
      "--name", 
      "--physical-table-map", 
      "--logical-table-map", 
      "--import-mode", 
      "--column-groups", 
      "--permissions", 
      "--row-level-permission-data-set", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-data-source{
   $flags=(
      "--aws-account-id", 
      "--data-source-id", 
      "--name", 
      "--type", 
      "--data-source-parameters", 
      "--credentials", 
      "--permissions", 
      "--vpc-connection-properties", 
      "--ssl-properties", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-group{
   $flags=(
      "--group-name", 
      "--description", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-group-membership{
   $flags=(
      "--member-name", 
      "--group-name", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-iam-policy-assignment{
   $flags=(
      "--aws-account-id", 
      "--assignment-name", 
      "--assignment-status", 
      "--policy-arn", 
      "--identities", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-ingestion{
   $flags=(
      "--data-set-id", 
      "--ingestion-id", 
      "--aws-account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-template{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--name", 
      "--permissions", 
      "--source-entity", 
      "--tags", 
      "--version-description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-create-template-alias{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--alias-name", 
      "--template-version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-dashboard{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-data-set{
   $flags=(
      "--aws-account-id", 
      "--data-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-data-source{
   $flags=(
      "--aws-account-id", 
      "--data-source-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-group{
   $flags=(
      "--group-name", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-group-membership{
   $flags=(
      "--member-name", 
      "--group-name", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-iam-policy-assignment{
   $flags=(
      "--aws-account-id", 
      "--assignment-name", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-template{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-template-alias{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--alias-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-user{
   $flags=(
      "--user-name", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-delete-user-by-principal-id{
   $flags=(
      "--principal-id", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-dashboard{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--version-number", 
      "--alias-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-dashboard-permissions{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-data-set{
   $flags=(
      "--aws-account-id", 
      "--data-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-data-set-permissions{
   $flags=(
      "--aws-account-id", 
      "--data-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-data-source{
   $flags=(
      "--aws-account-id", 
      "--data-source-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-data-source-permissions{
   $flags=(
      "--aws-account-id", 
      "--data-source-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-group{
   $flags=(
      "--group-name", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-iam-policy-assignment{
   $flags=(
      "--aws-account-id", 
      "--assignment-name", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-ingestion{
   $flags=(
      "--aws-account-id", 
      "--data-set-id", 
      "--ingestion-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-template{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--version-number", 
      "--alias-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-template-alias{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--alias-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-template-permissions{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-describe-user{
   $flags=(
      "--user-name", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-get-dashboard-embed-url{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--identity-type", 
      "--session-lifetime-in-minutes", 
      "--undo-redo-disabled", 
      "--no-undo-redo-disabled", 
      "--reset-disabled", 
      "--no-reset-disabled", 
      "--user-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-dashboard-versions{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-dashboards{
   $flags=(
      "--aws-account-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-data-sets{
   $flags=(
      "--aws-account-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-data-sources{
   $flags=(
      "--aws-account-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-group-memberships{
   $flags=(
      "--group-name", 
      "--next-token", 
      "--max-results", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-groups{
   $flags=(
      "--aws-account-id", 
      "--next-token", 
      "--max-results", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-iam-policy-assignments{
   $flags=(
      "--aws-account-id", 
      "--assignment-status", 
      "--namespace", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-iam-policy-assignments-for-user{
   $flags=(
      "--aws-account-id", 
      "--user-name", 
      "--next-token", 
      "--max-results", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-ingestions{
   $flags=(
      "--data-set-id", 
      "--next-token", 
      "--aws-account-id", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-template-aliases{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-template-versions{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-templates{
   $flags=(
      "--aws-account-id", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-user-groups{
   $flags=(
      "--user-name", 
      "--aws-account-id", 
      "--namespace", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-list-users{
   $flags=(
      "--aws-account-id", 
      "--next-token", 
      "--max-results", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-register-user{
   $flags=(
      "--identity-type", 
      "--email", 
      "--user-role", 
      "--iam-arn", 
      "--session-name", 
      "--aws-account-id", 
      "--namespace", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-search-dashboards{
   $flags=(
      "--aws-account-id", 
      "--filters", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-dashboard{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--name", 
      "--source-entity", 
      "--parameters", 
      "--version-description", 
      "--dashboard-publish-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-dashboard-permissions{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--grant-permissions", 
      "--revoke-permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-dashboard-published-version{
   $flags=(
      "--aws-account-id", 
      "--dashboard-id", 
      "--version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-data-set{
   $flags=(
      "--aws-account-id", 
      "--data-set-id", 
      "--name", 
      "--physical-table-map", 
      "--logical-table-map", 
      "--import-mode", 
      "--column-groups", 
      "--row-level-permission-data-set", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-data-set-permissions{
   $flags=(
      "--aws-account-id", 
      "--data-set-id", 
      "--grant-permissions", 
      "--revoke-permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-data-source{
   $flags=(
      "--aws-account-id", 
      "--data-source-id", 
      "--name", 
      "--data-source-parameters", 
      "--credentials", 
      "--vpc-connection-properties", 
      "--ssl-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-data-source-permissions{
   $flags=(
      "--aws-account-id", 
      "--data-source-id", 
      "--grant-permissions", 
      "--revoke-permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-group{
   $flags=(
      "--group-name", 
      "--description", 
      "--aws-account-id", 
      "--namespace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-iam-policy-assignment{
   $flags=(
      "--aws-account-id", 
      "--assignment-name", 
      "--namespace", 
      "--assignment-status", 
      "--policy-arn", 
      "--identities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-template{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--source-entity", 
      "--version-description", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-template-alias{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--alias-name", 
      "--template-version-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-template-permissions{
   $flags=(
      "--aws-account-id", 
      "--template-id", 
      "--grant-permissions", 
      "--revoke-permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-quicksight-update-user{
   $flags=(
      "--user-name", 
      "--aws-account-id", 
      "--namespace", 
      "--email", 
      "--role", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram{
   $commands=(
      "accept-resource-share-invitation", 
      "associate-resource-share", 
      "associate-resource-share-permission", 
      "create-resource-share", 
      "delete-resource-share", 
      "disassociate-resource-share", 
      "disassociate-resource-share-permission", 
      "enable-sharing-with-aws-organization", 
      "get-permission", 
      "get-resource-policies", 
      "get-resource-share-associations", 
      "get-resource-share-invitations", 
      "get-resource-shares", 
      "list-pending-invitation-resources", 
      "list-permissions", 
      "list-principals", 
      "list-resource-share-permissions", 
      "list-resource-types", 
      "list-resources", 
      "promote-resource-share-created-from-policy", 
      "reject-resource-share-invitation", 
      "tag-resource", 
      "untag-resource", 
      "update-resource-share"
    );
   return $commands;
}
function Get-ram-accept-resource-share-invitation{
   $flags=(
      "--resource-share-invitation-arn", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-associate-resource-share{
   $flags=(
      "--resource-share-arn", 
      "--resource-arns", 
      "--principals", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-associate-resource-share-permission{
   $flags=(
      "--resource-share-arn", 
      "--permission-arn", 
      "--replace", 
      "--no-replace", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-create-resource-share{
   $flags=(
      "--name", 
      "--resource-arns", 
      "--principals", 
      "--tags", 
      "--allow-external-principals", 
      "--no-allow-external-principals", 
      "--client-token", 
      "--permission-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-delete-resource-share{
   $flags=(
      "--resource-share-arn", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-disassociate-resource-share{
   $flags=(
      "--resource-share-arn", 
      "--resource-arns", 
      "--principals", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-disassociate-resource-share-permission{
   $flags=(
      "--resource-share-arn", 
      "--permission-arn", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-enable-sharing-with-aws-organization{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-get-permission{
   $flags=(
      "--permission-arn", 
      "--permission-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-get-resource-policies{
   $flags=(
      "--resource-arns", 
      "--principal", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-get-resource-share-associations{
   $flags=(
      "--resource-arns", 
      "--principal", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-get-resource-share-invitations{
   $flags=(
      "--resource-share-invitation-arns", 
      "--resource-share-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-get-resource-shares{
   $flags=(
      "--resource-share-arns", 
      "--resource-share-status", 
      "--resource-owner", 
      "--name", 
      "--tag-filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-list-pending-invitation-resources{
   $flags=(
      "--resource-share-invitation-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-list-permissions{
   $flags=(
      "--resource-type", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-list-principals{
   $flags=(
      "--resource-owner", 
      "--resource-arn", 
      "--principals", 
      "--resource-type", 
      "--resource-share-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-list-resource-share-permissions{
   $flags=(
      "--resource-share-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-list-resource-types{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-list-resources{
   $flags=(
      "--resource-owner", 
      "--principal", 
      "--resource-type", 
      "--resource-arns", 
      "--resource-share-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-promote-resource-share-created-from-policy{
   $flags=(
      "--resource-share-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-reject-resource-share-invitation{
   $flags=(
      "--resource-share-invitation-arn", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-tag-resource{
   $flags=(
      "--resource-share-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-untag-resource{
   $flags=(
      "--resource-share-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ram-update-resource-share{
   $flags=(
      "--resource-share-arn", 
      "--name", 
      "--allow-external-principals", 
      "--no-allow-external-principals", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds{
   $commands=(
      "add-option-to-option-group", 
      "add-role-to-db-cluster", 
      "add-role-to-db-instance", 
      "add-source-identifier-to-subscription", 
      "add-tags-to-resource", 
      "apply-pending-maintenance-action", 
      "authorize-db-security-group-ingress", 
      "backtrack-db-cluster", 
      "cancel-export-task", 
      "copy-db-cluster-parameter-group", 
      "copy-db-cluster-snapshot", 
      "copy-db-parameter-group", 
      "copy-db-snapshot", 
      "copy-option-group", 
      "create-custom-availability-zone", 
      "create-db-cluster", 
      "create-db-cluster-endpoint", 
      "create-db-cluster-parameter-group", 
      "create-db-cluster-snapshot", 
      "create-db-instance", 
      "create-db-instance-read-replica", 
      "create-db-parameter-group", 
      "create-db-proxy", 
      "create-db-security-group", 
      "create-db-snapshot", 
      "create-db-subnet-group", 
      "create-event-subscription", 
      "create-global-cluster", 
      "create-option-group", 
      "delete-custom-availability-zone", 
      "delete-db-cluster", 
      "delete-db-cluster-endpoint", 
      "delete-db-cluster-parameter-group", 
      "delete-db-cluster-snapshot", 
      "delete-db-instance", 
      "delete-db-instance-automated-backup", 
      "delete-db-parameter-group", 
      "delete-db-proxy", 
      "delete-db-security-group", 
      "delete-db-snapshot", 
      "delete-db-subnet-group", 
      "delete-event-subscription", 
      "delete-global-cluster", 
      "delete-installation-media", 
      "delete-option-group", 
      "deregister-db-proxy-targets", 
      "describe-account-attributes", 
      "describe-certificates", 
      "describe-custom-availability-zones", 
      "describe-db-cluster-backtracks", 
      "describe-db-cluster-endpoints", 
      "describe-db-cluster-parameter-groups", 
      "describe-db-cluster-parameters", 
      "describe-db-cluster-snapshot-attributes", 
      "describe-db-cluster-snapshots", 
      "describe-db-clusters", 
      "describe-db-engine-versions", 
      "describe-db-instance-automated-backups", 
      "describe-db-instances", 
      "describe-db-log-files", 
      "describe-db-parameter-groups", 
      "describe-db-parameters", 
      "describe-db-proxies", 
      "describe-db-proxy-target-groups", 
      "describe-db-proxy-targets", 
      "describe-db-security-groups", 
      "describe-db-snapshot-attributes", 
      "describe-db-snapshots", 
      "describe-db-subnet-groups", 
      "describe-engine-default-cluster-parameters", 
      "describe-engine-default-parameters", 
      "describe-event-categories", 
      "describe-event-subscriptions", 
      "describe-events", 
      "describe-export-tasks", 
      "describe-global-clusters", 
      "describe-installation-media", 
      "describe-option-group-options", 
      "describe-option-groups", 
      "describe-orderable-db-instance-options", 
      "describe-pending-maintenance-actions", 
      "describe-reserved-db-instances", 
      "describe-reserved-db-instances-offerings", 
      "describe-source-regions", 
      "describe-valid-db-instance-modifications", 
      "download-db-log-file-portion", 
      "failover-db-cluster", 
      "generate-db-auth-token", 
      "import-installation-media", 
      "list-tags-for-resource", 
      "modify-certificates", 
      "modify-current-db-cluster-capacity", 
      "modify-db-cluster", 
      "modify-db-cluster-endpoint", 
      "modify-db-cluster-parameter-group", 
      "modify-db-cluster-snapshot-attribute", 
      "modify-db-instance", 
      "modify-db-parameter-group", 
      "modify-db-proxy", 
      "modify-db-proxy-target-group", 
      "modify-db-snapshot", 
      "modify-db-snapshot-attribute", 
      "modify-db-subnet-group", 
      "modify-event-subscription", 
      "modify-global-cluster", 
      "promote-read-replica", 
      "promote-read-replica-db-cluster", 
      "purchase-reserved-db-instances-offering", 
      "reboot-db-instance", 
      "register-db-proxy-targets", 
      "remove-from-global-cluster", 
      "remove-option-from-option-group", 
      "remove-role-from-db-cluster", 
      "remove-role-from-db-instance", 
      "remove-source-identifier-from-subscription", 
      "remove-tags-from-resource", 
      "reset-db-cluster-parameter-group", 
      "reset-db-parameter-group", 
      "restore-db-cluster-from-s3", 
      "restore-db-cluster-from-snapshot", 
      "restore-db-cluster-to-point-in-time", 
      "restore-db-instance-from-db-snapshot", 
      "restore-db-instance-from-s3", 
      "restore-db-instance-to-point-in-time", 
      "revoke-db-security-group-ingress", 
      "start-activity-stream", 
      "start-db-cluster", 
      "start-db-instance", 
      "start-export-task", 
      "stop-activity-stream", 
      "stop-db-cluster", 
      "stop-db-instance", 
      "wait"
    );
   return $commands;
}
function Get-rds-add-option-to-option-group{
   $flags=(
      "--option-group-name", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-add-role-to-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--role-arn", 
      "--feature-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-add-role-to-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--role-arn", 
      "--feature-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-add-source-identifier-to-subscription{
   $flags=(
      "--subscription-name", 
      "--source-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-add-tags-to-resource{
   $flags=(
      "--resource-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-apply-pending-maintenance-action{
   $flags=(
      "--resource-identifier", 
      "--apply-action", 
      "--opt-in-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-authorize-db-security-group-ingress{
   $flags=(
      "--db-security-group-name", 
      "--cidrip", 
      "--ec", 
      "--ec", 
      "--ec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-backtrack-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--backtrack-to", 
      "--force", 
      "--no-force", 
      "--use-earliest-time-on-point-in-time-unavailable", 
      "--no-use-earliest-time-on-point-in-time-unavailable", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-cancel-export-task{
   $flags=(
      "--export-task-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-copy-db-cluster-parameter-group{
   $flags=(
      "--source-db-cluster-parameter-group-identifier", 
      "--target-db-cluster-parameter-group-identifier", 
      "--target-db-cluster-parameter-group-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-copy-db-cluster-snapshot{
   $flags=(
      "--source-db-cluster-snapshot-identifier", 
      "--target-db-cluster-snapshot-identifier", 
      "--kms-key-id", 
      "--pre-signed-url", 
      "--copy-tags", 
      "--no-copy-tags", 
      "--tags", 
      "--source-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-copy-db-parameter-group{
   $flags=(
      "--source-db-parameter-group-identifier", 
      "--target-db-parameter-group-identifier", 
      "--target-db-parameter-group-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-copy-db-snapshot{
   $flags=(
      "--source-db-snapshot-identifier", 
      "--target-db-snapshot-identifier", 
      "--kms-key-id", 
      "--tags", 
      "--copy-tags", 
      "--no-copy-tags", 
      "--pre-signed-url", 
      "--option-group-name", 
      "--source-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-copy-option-group{
   $flags=(
      "--source-option-group-identifier", 
      "--target-option-group-identifier", 
      "--target-option-group-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-custom-availability-zone{
   $flags=(
      "--custom-availability-zone-name", 
      "--existing-vpn-id", 
      "--new-vpn-tunnel-name", 
      "--vpn-tunnel-originator-ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-cluster{
   $flags=(
      "--availability-zones", 
      "--backup-retention-period", 
      "--character-set-name", 
      "--database-name", 
      "--db-cluster-identifier", 
      "--db-cluster-parameter-group-name", 
      "--vpc-security-group-ids", 
      "--db-subnet-group-name", 
      "--engine", 
      "--engine-version", 
      "--port", 
      "--master-username", 
      "--master-user-password", 
      "--option-group-name", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--replication-source-identifier", 
      "--tags", 
      "--storage-encrypted", 
      "--no-storage-encrypted", 
      "--kms-key-id", 
      "--pre-signed-url", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--backtrack-window", 
      "--enable-cloudwatch-logs-exports", 
      "--engine-mode", 
      "--scaling-configuration", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--global-cluster-identifier", 
      "--enable-http-endpoint", 
      "--no-enable-http-endpoint", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--domain", 
      "--domain-iam-role-name", 
      "--source-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-cluster-endpoint{
   $flags=(
      "--db-cluster-identifier", 
      "--db-cluster-endpoint-identifier", 
      "--endpoint-type", 
      "--static-members", 
      "--excluded-members", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--db-parameter-group-family", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-cluster-snapshot{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--db-cluster-identifier", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-instance{
   $flags=(
      "--db-name", 
      "--db-instance-identifier", 
      "--allocated-storage", 
      "--db-instance-class", 
      "--engine", 
      "--master-username", 
      "--master-user-password", 
      "--db-security-groups", 
      "--vpc-security-group-ids", 
      "--availability-zone", 
      "--db-subnet-group-name", 
      "--preferred-maintenance-window", 
      "--db-parameter-group-name", 
      "--backup-retention-period", 
      "--preferred-backup-window", 
      "--port", 
      "--multi-az", 
      "--no-multi-az", 
      "--engine-version", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--license-model", 
      "--iops", 
      "--option-group-name", 
      "--character-set-name", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--tags", 
      "--db-cluster-identifier", 
      "--storage-type", 
      "--tde-credential-arn", 
      "--tde-credential-password", 
      "--storage-encrypted", 
      "--no-storage-encrypted", 
      "--kms-key-id", 
      "--domain", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--monitoring-interval", 
      "--monitoring-role-arn", 
      "--domain-iam-role-name", 
      "--promotion-tier", 
      "--timezone", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-performance-insights", 
      "--no-enable-performance-insights", 
      "--performance-insights-kms-key-id", 
      "--performance-insights-retention-period", 
      "--enable-cloudwatch-logs-exports", 
      "--processor-features", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--max-allocated-storage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-instance-read-replica{
   $flags=(
      "--db-instance-identifier", 
      "--source-db-instance-identifier", 
      "--db-instance-class", 
      "--availability-zone", 
      "--port", 
      "--multi-az", 
      "--no-multi-az", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--iops", 
      "--option-group-name", 
      "--db-parameter-group-name", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--tags", 
      "--db-subnet-group-name", 
      "--vpc-security-group-ids", 
      "--storage-type", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--monitoring-interval", 
      "--monitoring-role-arn", 
      "--kms-key-id", 
      "--pre-signed-url", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-performance-insights", 
      "--no-enable-performance-insights", 
      "--performance-insights-kms-key-id", 
      "--performance-insights-retention-period", 
      "--enable-cloudwatch-logs-exports", 
      "--processor-features", 
      "--use-default-processor-features", 
      "--no-use-default-processor-features", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--domain", 
      "--domain-iam-role-name", 
      "--source-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-parameter-group{
   $flags=(
      "--db-parameter-group-name", 
      "--db-parameter-group-family", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-proxy{
   $flags=(
      "--db-proxy-name", 
      "--engine-family", 
      "--auth", 
      "--role-arn", 
      "--vpc-subnet-ids", 
      "--vpc-security-group-ids", 
      "--require-tls", 
      "--no-require-tls", 
      "--idle-client-timeout", 
      "--debug-logging", 
      "--no-debug-logging", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-security-group{
   $flags=(
      "--db-security-group-name", 
      "--db-security-group-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-snapshot{
   $flags=(
      "--db-snapshot-identifier", 
      "--db-instance-identifier", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--db-subnet-group-description", 
      "--subnet-ids", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-event-subscription{
   $flags=(
      "--subscription-name", 
      "--sns-topic-arn", 
      "--source-type", 
      "--event-categories", 
      "--source-ids", 
      "--enabled", 
      "--no-enabled", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-global-cluster{
   $flags=(
      "--global-cluster-identifier", 
      "--source-db-cluster-identifier", 
      "--engine", 
      "--engine-version", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--database-name", 
      "--storage-encrypted", 
      "--no-storage-encrypted", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-create-option-group{
   $flags=(
      "--option-group-name", 
      "--engine-name", 
      "--major-engine-version", 
      "--option-group-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-custom-availability-zone{
   $flags=(
      "--custom-availability-zone-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--skip-final-snapshot", 
      "--no-skip-final-snapshot", 
      "--final-db-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-cluster-endpoint{
   $flags=(
      "--db-cluster-endpoint-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-cluster-snapshot{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--skip-final-snapshot", 
      "--no-skip-final-snapshot", 
      "--final-db-snapshot-identifier", 
      "--delete-automated-backups", 
      "--no-delete-automated-backups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-instance-automated-backup{
   $flags=(
      "--dbi-resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-parameter-group{
   $flags=(
      "--db-parameter-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-proxy{
   $flags=(
      "--db-proxy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-security-group{
   $flags=(
      "--db-security-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-snapshot{
   $flags=(
      "--db-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-event-subscription{
   $flags=(
      "--subscription-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-global-cluster{
   $flags=(
      "--global-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-installation-media{
   $flags=(
      "--installation-media-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-delete-option-group{
   $flags=(
      "--option-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-deregister-db-proxy-targets{
   $flags=(
      "--db-proxy-name", 
      "--target-group-name", 
      "--db-instance-identifiers", 
      "--db-cluster-identifiers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-account-attributes{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-certificates{
   $flags=(
      "--certificate-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-custom-availability-zones{
   $flags=(
      "--custom-availability-zone-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-cluster-backtracks{
   $flags=(
      "--db-cluster-identifier", 
      "--backtrack-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-cluster-endpoints{
   $flags=(
      "--db-cluster-identifier", 
      "--db-cluster-endpoint-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-cluster-parameter-groups{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-cluster-parameters{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--source", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-cluster-snapshot-attributes{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-cluster-snapshots{
   $flags=(
      "--db-cluster-identifier", 
      "--db-cluster-snapshot-identifier", 
      "--snapshot-type", 
      "--filters", 
      "--include-shared", 
      "--no-include-shared", 
      "--include-public", 
      "--no-include-public", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-clusters{
   $flags=(
      "--db-cluster-identifier", 
      "--filters", 
      "--include-shared", 
      "--no-include-shared", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-engine-versions{
   $flags=(
      "--engine", 
      "--engine-version", 
      "--db-parameter-group-family", 
      "--filters", 
      "--default-only", 
      "--no-default-only", 
      "--list-supported-character-sets", 
      "--no-list-supported-character-sets", 
      "--list-supported-timezones", 
      "--no-list-supported-timezones", 
      "--include-all", 
      "--no-include-all", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-instance-automated-backups{
   $flags=(
      "--dbi-resource-id", 
      "--db-instance-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-instances{
   $flags=(
      "--db-instance-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-log-files{
   $flags=(
      "--db-instance-identifier", 
      "--filename-contains", 
      "--file-last-written", 
      "--file-size", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-parameter-groups{
   $flags=(
      "--db-parameter-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-parameters{
   $flags=(
      "--db-parameter-group-name", 
      "--source", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-proxies{
   $flags=(
      "--db-proxy-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-proxy-target-groups{
   $flags=(
      "--db-proxy-name", 
      "--target-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-proxy-targets{
   $flags=(
      "--db-proxy-name", 
      "--target-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-security-groups{
   $flags=(
      "--db-security-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-snapshot-attributes{
   $flags=(
      "--db-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-snapshots{
   $flags=(
      "--db-instance-identifier", 
      "--db-snapshot-identifier", 
      "--snapshot-type", 
      "--filters", 
      "--include-shared", 
      "--no-include-shared", 
      "--include-public", 
      "--no-include-public", 
      "--dbi-resource-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-db-subnet-groups{
   $flags=(
      "--db-subnet-group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-engine-default-cluster-parameters{
   $flags=(
      "--db-parameter-group-family", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-engine-default-parameters{
   $flags=(
      "--db-parameter-group-family", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-event-categories{
   $flags=(
      "--source-type", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-event-subscriptions{
   $flags=(
      "--subscription-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-events{
   $flags=(
      "--source-identifier", 
      "--source-type", 
      "--start-time", 
      "--end-time", 
      "--duration", 
      "--event-categories", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-export-tasks{
   $flags=(
      "--export-task-identifier", 
      "--source-arn", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-global-clusters{
   $flags=(
      "--global-cluster-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-installation-media{
   $flags=(
      "--installation-media-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-option-group-options{
   $flags=(
      "--engine-name", 
      "--major-engine-version", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-option-groups{
   $flags=(
      "--option-group-name", 
      "--filters", 
      "--engine-name", 
      "--major-engine-version", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-orderable-db-instance-options{
   $flags=(
      "--engine", 
      "--engine-version", 
      "--db-instance-class", 
      "--license-model", 
      "--availability-zone-group", 
      "--vpc", 
      "--no-vpc", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-pending-maintenance-actions{
   $flags=(
      "--resource-identifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-reserved-db-instances{
   $flags=(
      "--reserved-db-instance-id", 
      "--reserved-db-instances-offering-id", 
      "--db-instance-class", 
      "--duration", 
      "--product-description", 
      "--offering-type", 
      "--multi-az", 
      "--no-multi-az", 
      "--lease-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-reserved-db-instances-offerings{
   $flags=(
      "--reserved-db-instances-offering-id", 
      "--db-instance-class", 
      "--duration", 
      "--product-description", 
      "--offering-type", 
      "--multi-az", 
      "--no-multi-az", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-source-regions{
   $flags=(
      "--region-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-describe-valid-db-instance-modifications{
   $flags=(
      "--db-instance-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-download-db-log-file-portion{
   $flags=(
      "--db-instance-identifier", 
      "--log-file-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-failover-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--target-db-instance-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-generate-db-auth-token{
   $flags=(
      "--hostname", 
      "--port", 
      "--username"
    );
   return $flags;
}
function Get-rds-import-installation-media{
   $flags=(
      "--custom-availability-zone-id", 
      "--engine", 
      "--engine-version", 
      "--engine-installation-media-path", 
      "--os-installation-media-path", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-list-tags-for-resource{
   $flags=(
      "--resource-name", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-certificates{
   $flags=(
      "--certificate-identifier", 
      "--remove-customer-override", 
      "--no-remove-customer-override", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-current-db-cluster-capacity{
   $flags=(
      "--db-cluster-identifier", 
      "--capacity", 
      "--seconds-before-timeout", 
      "--timeout-action", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--new-db-cluster-identifier", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--backup-retention-period", 
      "--db-cluster-parameter-group-name", 
      "--vpc-security-group-ids", 
      "--port", 
      "--master-user-password", 
      "--option-group-name", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--backtrack-window", 
      "--cloudwatch-logs-export-configuration", 
      "--engine-version", 
      "--allow-major-version-upgrade", 
      "--no-allow-major-version-upgrade", 
      "--db-instance-parameter-group-name", 
      "--domain", 
      "--domain-iam-role-name", 
      "--scaling-configuration", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--enable-http-endpoint", 
      "--no-enable-http-endpoint", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-cluster-endpoint{
   $flags=(
      "--db-cluster-endpoint-identifier", 
      "--endpoint-type", 
      "--static-members", 
      "--excluded-members", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-cluster-snapshot-attribute{
   $flags=(
      "--db-cluster-snapshot-identifier", 
      "--attribute-name", 
      "--values-to-add", 
      "--values-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--allocated-storage", 
      "--db-instance-class", 
      "--db-subnet-group-name", 
      "--db-security-groups", 
      "--vpc-security-group-ids", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--master-user-password", 
      "--db-parameter-group-name", 
      "--backup-retention-period", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--multi-az", 
      "--no-multi-az", 
      "--engine-version", 
      "--allow-major-version-upgrade", 
      "--no-allow-major-version-upgrade", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--license-model", 
      "--iops", 
      "--option-group-name", 
      "--new-db-instance-identifier", 
      "--storage-type", 
      "--tde-credential-arn", 
      "--tde-credential-password", 
      "--ca-certificate-identifier", 
      "--domain", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--monitoring-interval", 
      "--db-port-number", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--monitoring-role-arn", 
      "--domain-iam-role-name", 
      "--promotion-tier", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-performance-insights", 
      "--no-enable-performance-insights", 
      "--performance-insights-kms-key-id", 
      "--performance-insights-retention-period", 
      "--cloudwatch-logs-export-configuration", 
      "--processor-features", 
      "--use-default-processor-features", 
      "--no-use-default-processor-features", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--max-allocated-storage", 
      "--certificate-rotation-restart", 
      "--no-certificate-rotation-restart", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-parameter-group{
   $flags=(
      "--db-parameter-group-name", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-proxy{
   $flags=(
      "--db-proxy-name", 
      "--new-db-proxy-name", 
      "--auth", 
      "--require-tls", 
      "--no-require-tls", 
      "--idle-client-timeout", 
      "--debug-logging", 
      "--no-debug-logging", 
      "--role-arn", 
      "--security-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-proxy-target-group{
   $flags=(
      "--target-group-name", 
      "--db-proxy-name", 
      "--connection-pool-config", 
      "--new-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-snapshot{
   $flags=(
      "--db-snapshot-identifier", 
      "--engine-version", 
      "--option-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-snapshot-attribute{
   $flags=(
      "--db-snapshot-identifier", 
      "--attribute-name", 
      "--values-to-add", 
      "--values-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-db-subnet-group{
   $flags=(
      "--db-subnet-group-name", 
      "--db-subnet-group-description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-event-subscription{
   $flags=(
      "--subscription-name", 
      "--sns-topic-arn", 
      "--source-type", 
      "--event-categories", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-modify-global-cluster{
   $flags=(
      "--global-cluster-identifier", 
      "--new-global-cluster-identifier", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-promote-read-replica{
   $flags=(
      "--db-instance-identifier", 
      "--backup-retention-period", 
      "--preferred-backup-window", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-promote-read-replica-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-purchase-reserved-db-instances-offering{
   $flags=(
      "--reserved-db-instances-offering-id", 
      "--reserved-db-instance-id", 
      "--db-instance-count", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-reboot-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--force-failover", 
      "--no-force-failover", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-register-db-proxy-targets{
   $flags=(
      "--db-proxy-name", 
      "--target-group-name", 
      "--db-instance-identifiers", 
      "--db-cluster-identifiers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-remove-from-global-cluster{
   $flags=(
      "--global-cluster-identifier", 
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-remove-option-from-option-group{
   $flags=(
      "--option-group-name", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-remove-role-from-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--role-arn", 
      "--feature-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-remove-role-from-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--role-arn", 
      "--feature-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-remove-source-identifier-from-subscription{
   $flags=(
      "--subscription-name", 
      "--source-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-remove-tags-from-resource{
   $flags=(
      "--resource-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-reset-db-cluster-parameter-group{
   $flags=(
      "--db-cluster-parameter-group-name", 
      "--reset-all-parameters", 
      "--no-reset-all-parameters", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-reset-db-parameter-group{
   $flags=(
      "--db-parameter-group-name", 
      "--reset-all-parameters", 
      "--no-reset-all-parameters", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-restore-db-cluster-from-s3{
   $flags=(
      "--availability-zones", 
      "--backup-retention-period", 
      "--character-set-name", 
      "--database-name", 
      "--db-cluster-identifier", 
      "--db-cluster-parameter-group-name", 
      "--vpc-security-group-ids", 
      "--db-subnet-group-name", 
      "--engine", 
      "--engine-version", 
      "--port", 
      "--master-username", 
      "--master-user-password", 
      "--option-group-name", 
      "--preferred-backup-window", 
      "--preferred-maintenance-window", 
      "--tags", 
      "--storage-encrypted", 
      "--no-storage-encrypted", 
      "--kms-key-id", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--source-engine", 
      "--source-engine-version", 
      "--s3-bucket-name", 
      "--s3-prefix", 
      "--s3-ingestion-role-arn", 
      "--backtrack-window", 
      "--enable-cloudwatch-logs-exports", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--domain", 
      "--domain-iam-role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-restore-db-cluster-from-snapshot{
   $flags=(
      "--availability-zones", 
      "--db-cluster-identifier", 
      "--snapshot-identifier", 
      "--engine", 
      "--engine-version", 
      "--port", 
      "--db-subnet-group-name", 
      "--database-name", 
      "--option-group-name", 
      "--vpc-security-group-ids", 
      "--tags", 
      "--kms-key-id", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--backtrack-window", 
      "--enable-cloudwatch-logs-exports", 
      "--engine-mode", 
      "--scaling-configuration", 
      "--db-cluster-parameter-group-name", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--domain", 
      "--domain-iam-role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-restore-db-cluster-to-point-in-time{
   $flags=(
      "--db-cluster-identifier", 
      "--restore-type", 
      "--source-db-cluster-identifier", 
      "--restore-to-time", 
      "--use-latest-restorable-time", 
      "--no-use-latest-restorable-time", 
      "--port", 
      "--db-subnet-group-name", 
      "--option-group-name", 
      "--vpc-security-group-ids", 
      "--tags", 
      "--kms-key-id", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--backtrack-window", 
      "--enable-cloudwatch-logs-exports", 
      "--db-cluster-parameter-group-name", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--domain", 
      "--domain-iam-role-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-restore-db-instance-from-db-snapshot{
   $flags=(
      "--db-instance-identifier", 
      "--db-snapshot-identifier", 
      "--db-instance-class", 
      "--port", 
      "--availability-zone", 
      "--db-subnet-group-name", 
      "--multi-az", 
      "--no-multi-az", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--license-model", 
      "--db-name", 
      "--engine", 
      "--iops", 
      "--option-group-name", 
      "--tags", 
      "--storage-type", 
      "--tde-credential-arn", 
      "--tde-credential-password", 
      "--vpc-security-group-ids", 
      "--domain", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--domain-iam-role-name", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-cloudwatch-logs-exports", 
      "--processor-features", 
      "--use-default-processor-features", 
      "--no-use-default-processor-features", 
      "--db-parameter-group-name", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-restore-db-instance-from-s3{
   $flags=(
      "--db-name", 
      "--db-instance-identifier", 
      "--allocated-storage", 
      "--db-instance-class", 
      "--engine", 
      "--master-username", 
      "--master-user-password", 
      "--db-security-groups", 
      "--vpc-security-group-ids", 
      "--availability-zone", 
      "--db-subnet-group-name", 
      "--preferred-maintenance-window", 
      "--db-parameter-group-name", 
      "--backup-retention-period", 
      "--preferred-backup-window", 
      "--port", 
      "--multi-az", 
      "--no-multi-az", 
      "--engine-version", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--license-model", 
      "--iops", 
      "--option-group-name", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--tags", 
      "--storage-type", 
      "--storage-encrypted", 
      "--no-storage-encrypted", 
      "--kms-key-id", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--monitoring-interval", 
      "--monitoring-role-arn", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--source-engine", 
      "--source-engine-version", 
      "--s3-bucket-name", 
      "--s3-prefix", 
      "--s3-ingestion-role-arn", 
      "--enable-performance-insights", 
      "--no-enable-performance-insights", 
      "--performance-insights-kms-key-id", 
      "--performance-insights-retention-period", 
      "--enable-cloudwatch-logs-exports", 
      "--processor-features", 
      "--use-default-processor-features", 
      "--no-use-default-processor-features", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-restore-db-instance-to-point-in-time{
   $flags=(
      "--source-db-instance-identifier", 
      "--target-db-instance-identifier", 
      "--restore-time", 
      "--use-latest-restorable-time", 
      "--no-use-latest-restorable-time", 
      "--db-instance-class", 
      "--port", 
      "--availability-zone", 
      "--db-subnet-group-name", 
      "--multi-az", 
      "--no-multi-az", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--auto-minor-version-upgrade", 
      "--no-auto-minor-version-upgrade", 
      "--license-model", 
      "--db-name", 
      "--engine", 
      "--iops", 
      "--option-group-name", 
      "--copy-tags-to-snapshot", 
      "--no-copy-tags-to-snapshot", 
      "--tags", 
      "--storage-type", 
      "--tde-credential-arn", 
      "--tde-credential-password", 
      "--vpc-security-group-ids", 
      "--domain", 
      "--domain-iam-role-name", 
      "--enable-iam-database-authentication", 
      "--no-enable-iam-database-authentication", 
      "--enable-cloudwatch-logs-exports", 
      "--processor-features", 
      "--use-default-processor-features", 
      "--no-use-default-processor-features", 
      "--db-parameter-group-name", 
      "--deletion-protection", 
      "--no-deletion-protection", 
      "--source-dbi-resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-revoke-db-security-group-ingress{
   $flags=(
      "--db-security-group-name", 
      "--cidrip", 
      "--ec", 
      "--ec", 
      "--ec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-start-activity-stream{
   $flags=(
      "--resource-arn", 
      "--mode", 
      "--kms-key-id", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-start-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-start-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-start-export-task{
   $flags=(
      "--export-task-identifier", 
      "--source-arn", 
      "--s3-bucket-name", 
      "--iam-role-arn", 
      "--kms-key-id", 
      "--s3-prefix", 
      "--export-only", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-stop-activity-stream{
   $flags=(
      "--resource-arn", 
      "--apply-immediately", 
      "--no-apply-immediately", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-stop-db-cluster{
   $flags=(
      "--db-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-stop-db-instance{
   $flags=(
      "--db-instance-identifier", 
      "--db-snapshot-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-wait{
   $flags=("");
   return $flags;
}
function Get-rds-data{
   $commands=(
      "batch-execute-statement", 
      "begin-transaction", 
      "commit-transaction", 
      "execute-statement", 
      "rollback-transaction"
    );
   return $commands;
}
function Get-rds-data-batch-execute-statement{
   $flags=(
      "--database", 
      "--parameter-sets", 
      "--resource-arn", 
      "--schema", 
      "--secret-arn", 
      "--sql", 
      "--transaction-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-data-begin-transaction{
   $flags=(
      "--database", 
      "--resource-arn", 
      "--schema", 
      "--secret-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-data-commit-transaction{
   $flags=(
      "--resource-arn", 
      "--secret-arn", 
      "--transaction-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-data-execute-statement{
   $flags=(
      "--continue-after-timeout", 
      "--no-continue-after-timeout", 
      "--database", 
      "--include-result-metadata", 
      "--no-include-result-metadata", 
      "--parameters", 
      "--resource-arn", 
      "--result-set-options", 
      "--schema", 
      "--secret-arn", 
      "--sql", 
      "--transaction-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rds-data-rollback-transaction{
   $flags=(
      "--resource-arn", 
      "--secret-arn", 
      "--transaction-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift{
   $commands=(
      "accept-reserved-node-exchange", 
      "authorize-cluster-security-group-ingress", 
      "authorize-snapshot-access", 
      "batch-delete-cluster-snapshots", 
      "batch-modify-cluster-snapshots", 
      "cancel-resize", 
      "copy-cluster-snapshot", 
      "create-cluster", 
      "create-cluster-parameter-group", 
      "create-cluster-security-group", 
      "create-cluster-snapshot", 
      "create-cluster-subnet-group", 
      "create-event-subscription", 
      "create-hsm-client-certificate", 
      "create-hsm-configuration", 
      "create-scheduled-action", 
      "create-snapshot-copy-grant", 
      "create-snapshot-schedule", 
      "create-tags", 
      "create-usage-limit", 
      "delete-cluster", 
      "delete-cluster-parameter-group", 
      "delete-cluster-security-group", 
      "delete-cluster-snapshot", 
      "delete-cluster-subnet-group", 
      "delete-event-subscription", 
      "delete-hsm-client-certificate", 
      "delete-hsm-configuration", 
      "delete-scheduled-action", 
      "delete-snapshot-copy-grant", 
      "delete-snapshot-schedule", 
      "delete-tags", 
      "delete-usage-limit", 
      "describe-account-attributes", 
      "describe-cluster-db-revisions", 
      "describe-cluster-parameter-groups", 
      "describe-cluster-parameters", 
      "describe-cluster-security-groups", 
      "describe-cluster-snapshots", 
      "describe-cluster-subnet-groups", 
      "describe-cluster-tracks", 
      "describe-cluster-versions", 
      "describe-clusters", 
      "describe-default-cluster-parameters", 
      "describe-event-categories", 
      "describe-event-subscriptions", 
      "describe-events", 
      "describe-hsm-client-certificates", 
      "describe-hsm-configurations", 
      "describe-logging-status", 
      "describe-node-configuration-options", 
      "describe-orderable-cluster-options", 
      "describe-reserved-node-offerings", 
      "describe-reserved-nodes", 
      "describe-resize", 
      "describe-scheduled-actions", 
      "describe-snapshot-copy-grants", 
      "describe-snapshot-schedules", 
      "describe-storage", 
      "describe-table-restore-status", 
      "describe-tags", 
      "describe-usage-limits", 
      "disable-logging", 
      "disable-snapshot-copy", 
      "enable-logging", 
      "enable-snapshot-copy", 
      "get-cluster-credentials", 
      "get-reserved-node-exchange-offerings", 
      "modify-cluster", 
      "modify-cluster-db-revision", 
      "modify-cluster-iam-roles", 
      "modify-cluster-maintenance", 
      "modify-cluster-parameter-group", 
      "modify-cluster-snapshot", 
      "modify-cluster-snapshot-schedule", 
      "modify-cluster-subnet-group", 
      "modify-event-subscription", 
      "modify-scheduled-action", 
      "modify-snapshot-copy-retention-period", 
      "modify-snapshot-schedule", 
      "modify-usage-limit", 
      "pause-cluster", 
      "purchase-reserved-node-offering", 
      "reboot-cluster", 
      "reset-cluster-parameter-group", 
      "resize-cluster", 
      "restore-from-cluster-snapshot", 
      "restore-table-from-cluster-snapshot", 
      "resume-cluster", 
      "revoke-cluster-security-group-ingress", 
      "revoke-snapshot-access", 
      "rotate-encryption-key", 
      "wait"
    );
   return $commands;
}
function Get-redshift-accept-reserved-node-exchange{
   $flags=(
      "--reserved-node-id", 
      "--target-reserved-node-offering-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-authorize-cluster-security-group-ingress{
   $flags=(
      "--cluster-security-group-name", 
      "--cidrip", 
      "--ec", 
      "--ec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-authorize-snapshot-access{
   $flags=(
      "--snapshot-identifier", 
      "--snapshot-cluster-identifier", 
      "--account-with-restore-access", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-batch-delete-cluster-snapshots{
   $flags=(
      "--identifiers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-batch-modify-cluster-snapshots{
   $flags=(
      "--snapshot-identifier-list", 
      "--manual-snapshot-retention-period", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-cancel-resize{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-copy-cluster-snapshot{
   $flags=(
      "--source-snapshot-identifier", 
      "--source-snapshot-cluster-identifier", 
      "--target-snapshot-identifier", 
      "--manual-snapshot-retention-period", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-cluster{
   $flags=(
      "--db-name", 
      "--cluster-identifier", 
      "--cluster-type", 
      "--node-type", 
      "--master-username", 
      "--master-user-password", 
      "--cluster-security-groups", 
      "--vpc-security-group-ids", 
      "--cluster-subnet-group-name", 
      "--availability-zone", 
      "--preferred-maintenance-window", 
      "--cluster-parameter-group-name", 
      "--automated-snapshot-retention-period", 
      "--manual-snapshot-retention-period", 
      "--port", 
      "--cluster-version", 
      "--allow-version-upgrade", 
      "--no-allow-version-upgrade", 
      "--number-of-nodes", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--encrypted", 
      "--no-encrypted", 
      "--hsm-client-certificate-identifier", 
      "--hsm-configuration-identifier", 
      "--elastic-ip", 
      "--tags", 
      "--kms-key-id", 
      "--enhanced-vpc-routing", 
      "--no-enhanced-vpc-routing", 
      "--additional-info", 
      "--iam-roles", 
      "--maintenance-track-name", 
      "--snapshot-schedule-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-cluster-parameter-group{
   $flags=(
      "--parameter-group-name", 
      "--parameter-group-family", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-cluster-security-group{
   $flags=(
      "--cluster-security-group-name", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-cluster-snapshot{
   $flags=(
      "--snapshot-identifier", 
      "--cluster-identifier", 
      "--manual-snapshot-retention-period", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-cluster-subnet-group{
   $flags=(
      "--cluster-subnet-group-name", 
      "--description", 
      "--subnet-ids", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-event-subscription{
   $flags=(
      "--subscription-name", 
      "--sns-topic-arn", 
      "--source-type", 
      "--source-ids", 
      "--event-categories", 
      "--severity", 
      "--enabled", 
      "--no-enabled", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-hsm-client-certificate{
   $flags=(
      "--hsm-client-certificate-identifier", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-hsm-configuration{
   $flags=(
      "--hsm-configuration-identifier", 
      "--description", 
      "--hsm-ip-address", 
      "--hsm-partition-name", 
      "--hsm-partition-password", 
      "--hsm-server-public-certificate", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-scheduled-action{
   $flags=(
      "--scheduled-action-name", 
      "--target-action", 
      "--schedule", 
      "--iam-role", 
      "--scheduled-action-description", 
      "--start-time", 
      "--end-time", 
      "--enable", 
      "--no-enable", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-snapshot-copy-grant{
   $flags=(
      "--snapshot-copy-grant-name", 
      "--kms-key-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-snapshot-schedule{
   $flags=(
      "--schedule-definitions", 
      "--schedule-identifier", 
      "--schedule-description", 
      "--tags", 
      "--dry-run", 
      "--no-dry-run", 
      "--next-invocations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-tags{
   $flags=(
      "--resource-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-create-usage-limit{
   $flags=(
      "--cluster-identifier", 
      "--feature-type", 
      "--limit-type", 
      "--amount", 
      "--period", 
      "--breach-action", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-cluster{
   $flags=(
      "--cluster-identifier", 
      "--skip-final-cluster-snapshot", 
      "--no-skip-final-cluster-snapshot", 
      "--final-cluster-snapshot-identifier", 
      "--final-cluster-snapshot-retention-period", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-cluster-parameter-group{
   $flags=(
      "--parameter-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-cluster-security-group{
   $flags=(
      "--cluster-security-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-cluster-snapshot{
   $flags=(
      "--snapshot-identifier", 
      "--snapshot-cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-cluster-subnet-group{
   $flags=(
      "--cluster-subnet-group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-event-subscription{
   $flags=(
      "--subscription-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-hsm-client-certificate{
   $flags=(
      "--hsm-client-certificate-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-hsm-configuration{
   $flags=(
      "--hsm-configuration-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-scheduled-action{
   $flags=(
      "--scheduled-action-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-snapshot-copy-grant{
   $flags=(
      "--snapshot-copy-grant-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-snapshot-schedule{
   $flags=(
      "--schedule-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-tags{
   $flags=(
      "--resource-name", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-delete-usage-limit{
   $flags=(
      "--usage-limit-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-account-attributes{
   $flags=(
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-cluster-db-revisions{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-cluster-parameter-groups{
   $flags=(
      "--parameter-group-name", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-cluster-parameters{
   $flags=(
      "--parameter-group-name", 
      "--source", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-cluster-security-groups{
   $flags=(
      "--cluster-security-group-name", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-cluster-snapshots{
   $flags=(
      "--cluster-identifier", 
      "--snapshot-identifier", 
      "--snapshot-type", 
      "--start-time", 
      "--end-time", 
      "--owner-account", 
      "--tag-keys", 
      "--tag-values", 
      "--cluster-exists", 
      "--no-cluster-exists", 
      "--sorting-entities", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-cluster-subnet-groups{
   $flags=(
      "--cluster-subnet-group-name", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-cluster-tracks{
   $flags=(
      "--maintenance-track-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-cluster-versions{
   $flags=(
      "--cluster-version", 
      "--cluster-parameter-group-family", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-clusters{
   $flags=(
      "--cluster-identifier", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-default-cluster-parameters{
   $flags=(
      "--parameter-group-family", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-event-categories{
   $flags=(
      "--source-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-event-subscriptions{
   $flags=(
      "--subscription-name", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-events{
   $flags=(
      "--source-identifier", 
      "--source-type", 
      "--start-time", 
      "--end-time", 
      "--duration", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-hsm-client-certificates{
   $flags=(
      "--hsm-client-certificate-identifier", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-hsm-configurations{
   $flags=(
      "--hsm-configuration-identifier", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-logging-status{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-node-configuration-options{
   $flags=(
      "--action-type", 
      "--cluster-identifier", 
      "--snapshot-identifier", 
      "--owner-account", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-orderable-cluster-options{
   $flags=(
      "--cluster-version", 
      "--node-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-reserved-node-offerings{
   $flags=(
      "--reserved-node-offering-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-reserved-nodes{
   $flags=(
      "--reserved-node-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-resize{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-scheduled-actions{
   $flags=(
      "--scheduled-action-name", 
      "--target-action-type", 
      "--start-time", 
      "--end-time", 
      "--active", 
      "--no-active", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-snapshot-copy-grants{
   $flags=(
      "--snapshot-copy-grant-name", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-snapshot-schedules{
   $flags=(
      "--cluster-identifier", 
      "--schedule-identifier", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-storage{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-table-restore-status{
   $flags=(
      "--cluster-identifier", 
      "--table-restore-request-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-tags{
   $flags=(
      "--resource-name", 
      "--resource-type", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-describe-usage-limits{
   $flags=(
      "--usage-limit-id", 
      "--cluster-identifier", 
      "--feature-type", 
      "--tag-keys", 
      "--tag-values", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-disable-logging{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-disable-snapshot-copy{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-enable-logging{
   $flags=(
      "--cluster-identifier", 
      "--bucket-name", 
      "--s3-key-prefix", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-enable-snapshot-copy{
   $flags=(
      "--cluster-identifier", 
      "--destination-region", 
      "--retention-period", 
      "--snapshot-copy-grant-name", 
      "--manual-snapshot-retention-period", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-get-cluster-credentials{
   $flags=(
      "--db-user", 
      "--db-name", 
      "--cluster-identifier", 
      "--duration-seconds", 
      "--auto-create", 
      "--no-auto-create", 
      "--db-groups", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-get-reserved-node-exchange-offerings{
   $flags=(
      "--reserved-node-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-cluster{
   $flags=(
      "--cluster-identifier", 
      "--cluster-type", 
      "--node-type", 
      "--number-of-nodes", 
      "--cluster-security-groups", 
      "--vpc-security-group-ids", 
      "--master-user-password", 
      "--cluster-parameter-group-name", 
      "--automated-snapshot-retention-period", 
      "--manual-snapshot-retention-period", 
      "--preferred-maintenance-window", 
      "--cluster-version", 
      "--allow-version-upgrade", 
      "--no-allow-version-upgrade", 
      "--hsm-client-certificate-identifier", 
      "--hsm-configuration-identifier", 
      "--new-cluster-identifier", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--elastic-ip", 
      "--enhanced-vpc-routing", 
      "--no-enhanced-vpc-routing", 
      "--maintenance-track-name", 
      "--encrypted", 
      "--no-encrypted", 
      "--kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-cluster-db-revision{
   $flags=(
      "--cluster-identifier", 
      "--revision-target", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-cluster-iam-roles{
   $flags=(
      "--cluster-identifier", 
      "--add-iam-roles", 
      "--remove-iam-roles", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-cluster-maintenance{
   $flags=(
      "--cluster-identifier", 
      "--defer-maintenance", 
      "--no-defer-maintenance", 
      "--defer-maintenance-identifier", 
      "--defer-maintenance-start-time", 
      "--defer-maintenance-end-time", 
      "--defer-maintenance-duration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-cluster-parameter-group{
   $flags=(
      "--parameter-group-name", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-cluster-snapshot{
   $flags=(
      "--snapshot-identifier", 
      "--manual-snapshot-retention-period", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-cluster-snapshot-schedule{
   $flags=(
      "--cluster-identifier", 
      "--schedule-identifier", 
      "--disassociate-schedule", 
      "--no-disassociate-schedule", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-cluster-subnet-group{
   $flags=(
      "--cluster-subnet-group-name", 
      "--description", 
      "--subnet-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-event-subscription{
   $flags=(
      "--subscription-name", 
      "--sns-topic-arn", 
      "--source-type", 
      "--source-ids", 
      "--event-categories", 
      "--severity", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-scheduled-action{
   $flags=(
      "--scheduled-action-name", 
      "--target-action", 
      "--schedule", 
      "--iam-role", 
      "--scheduled-action-description", 
      "--start-time", 
      "--end-time", 
      "--enable", 
      "--no-enable", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-snapshot-copy-retention-period{
   $flags=(
      "--cluster-identifier", 
      "--retention-period", 
      "--manual", 
      "--no-manual", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-snapshot-schedule{
   $flags=(
      "--schedule-identifier", 
      "--schedule-definitions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-modify-usage-limit{
   $flags=(
      "--usage-limit-id", 
      "--amount", 
      "--breach-action", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-pause-cluster{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-purchase-reserved-node-offering{
   $flags=(
      "--reserved-node-offering-id", 
      "--node-count", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-reboot-cluster{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-reset-cluster-parameter-group{
   $flags=(
      "--parameter-group-name", 
      "--reset-all-parameters", 
      "--no-reset-all-parameters", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-resize-cluster{
   $flags=(
      "--cluster-identifier", 
      "--cluster-type", 
      "--node-type", 
      "--number-of-nodes", 
      "--classic", 
      "--no-classic", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-restore-from-cluster-snapshot{
   $flags=(
      "--cluster-identifier", 
      "--snapshot-identifier", 
      "--snapshot-cluster-identifier", 
      "--port", 
      "--availability-zone", 
      "--allow-version-upgrade", 
      "--no-allow-version-upgrade", 
      "--cluster-subnet-group-name", 
      "--publicly-accessible", 
      "--no-publicly-accessible", 
      "--owner-account", 
      "--hsm-client-certificate-identifier", 
      "--hsm-configuration-identifier", 
      "--elastic-ip", 
      "--cluster-parameter-group-name", 
      "--cluster-security-groups", 
      "--vpc-security-group-ids", 
      "--preferred-maintenance-window", 
      "--automated-snapshot-retention-period", 
      "--manual-snapshot-retention-period", 
      "--kms-key-id", 
      "--node-type", 
      "--enhanced-vpc-routing", 
      "--no-enhanced-vpc-routing", 
      "--additional-info", 
      "--iam-roles", 
      "--maintenance-track-name", 
      "--snapshot-schedule-identifier", 
      "--number-of-nodes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-restore-table-from-cluster-snapshot{
   $flags=(
      "--cluster-identifier", 
      "--snapshot-identifier", 
      "--source-database-name", 
      "--source-schema-name", 
      "--source-table-name", 
      "--target-database-name", 
      "--target-schema-name", 
      "--new-table-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-resume-cluster{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-revoke-cluster-security-group-ingress{
   $flags=(
      "--cluster-security-group-name", 
      "--cidrip", 
      "--ec", 
      "--ec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-revoke-snapshot-access{
   $flags=(
      "--snapshot-identifier", 
      "--snapshot-cluster-identifier", 
      "--account-with-restore-access", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-rotate-encryption-key{
   $flags=(
      "--cluster-identifier", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-redshift-wait{
   $flags=("");
   return $flags;
}
function Get-rekognition{
   $commands=(
      "compare-faces", 
      "create-collection", 
      "create-project", 
      "create-project-version", 
      "create-stream-processor", 
      "delete-collection", 
      "delete-faces", 
      "delete-project", 
      "delete-project-version", 
      "delete-stream-processor", 
      "describe-collection", 
      "describe-project-versions", 
      "describe-projects", 
      "describe-stream-processor", 
      "detect-custom-labels", 
      "detect-faces", 
      "detect-labels", 
      "detect-moderation-labels", 
      "detect-text", 
      "get-celebrity-info", 
      "get-celebrity-recognition", 
      "get-content-moderation", 
      "get-face-detection", 
      "get-face-search", 
      "get-label-detection", 
      "get-person-tracking", 
      "get-text-detection", 
      "index-faces", 
      "list-collections", 
      "list-faces", 
      "list-stream-processors", 
      "recognize-celebrities", 
      "search-faces", 
      "search-faces-by-image", 
      "start-celebrity-recognition", 
      "start-content-moderation", 
      "start-face-detection", 
      "start-face-search", 
      "start-label-detection", 
      "start-person-tracking", 
      "start-project-version", 
      "start-stream-processor", 
      "start-text-detection", 
      "stop-project-version", 
      "stop-stream-processor", 
      "wait"
    );
   return $commands;
}
function Get-rekognition-compare-faces{
   $flags=(
      "--source-image", 
      "--target-image", 
      "--similarity-threshold", 
      "--quality-filter", 
      "--target-image-bytes", 
      "--source-image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-create-collection{
   $flags=(
      "--collection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-create-project{
   $flags=(
      "--project-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-create-project-version{
   $flags=(
      "--project-arn", 
      "--version-name", 
      "--output-config", 
      "--training-data", 
      "--testing-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-create-stream-processor{
   $flags=(
      "--input", 
      "--name", 
      "--settings", 
      "--role-arn", 
      "--stream-processor-output", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-delete-collection{
   $flags=(
      "--collection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-delete-faces{
   $flags=(
      "--collection-id", 
      "--face-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-delete-project{
   $flags=(
      "--project-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-delete-project-version{
   $flags=(
      "--project-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-delete-stream-processor{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-describe-collection{
   $flags=(
      "--collection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-describe-project-versions{
   $flags=(
      "--project-arn", 
      "--version-names", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-describe-projects{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-describe-stream-processor{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-detect-custom-labels{
   $flags=(
      "--project-version-arn", 
      "--image", 
      "--max-results", 
      "--min-confidence", 
      "--image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-detect-faces{
   $flags=(
      "--image", 
      "--attributes", 
      "--image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-detect-labels{
   $flags=(
      "--image", 
      "--max-labels", 
      "--min-confidence", 
      "--image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-detect-moderation-labels{
   $flags=(
      "--image", 
      "--min-confidence", 
      "--human-loop-config", 
      "--image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-detect-text{
   $flags=(
      "--image", 
      "--filters", 
      "--image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-get-celebrity-info{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-get-celebrity-recognition{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--sort-by", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-get-content-moderation{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--sort-by", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-get-face-detection{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-get-face-search{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--sort-by", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-get-label-detection{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--sort-by", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-get-person-tracking{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--sort-by", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-get-text-detection{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-index-faces{
   $flags=(
      "--collection-id", 
      "--image", 
      "--external-image-id", 
      "--detection-attributes", 
      "--max-faces", 
      "--quality-filter", 
      "--image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-list-collections{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-list-faces{
   $flags=(
      "--collection-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-list-stream-processors{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-recognize-celebrities{
   $flags=(
      "--image", 
      "--image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-search-faces{
   $flags=(
      "--collection-id", 
      "--face-id", 
      "--max-faces", 
      "--face-match-threshold", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-search-faces-by-image{
   $flags=(
      "--collection-id", 
      "--image", 
      "--max-faces", 
      "--face-match-threshold", 
      "--quality-filter", 
      "--image-bytes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-celebrity-recognition{
   $flags=(
      "--video", 
      "--client-request-token", 
      "--notification-channel", 
      "--job-tag", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-content-moderation{
   $flags=(
      "--video", 
      "--min-confidence", 
      "--client-request-token", 
      "--notification-channel", 
      "--job-tag", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-face-detection{
   $flags=(
      "--video", 
      "--client-request-token", 
      "--notification-channel", 
      "--face-attributes", 
      "--job-tag", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-face-search{
   $flags=(
      "--video", 
      "--client-request-token", 
      "--face-match-threshold", 
      "--collection-id", 
      "--notification-channel", 
      "--job-tag", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-label-detection{
   $flags=(
      "--video", 
      "--client-request-token", 
      "--min-confidence", 
      "--notification-channel", 
      "--job-tag", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-person-tracking{
   $flags=(
      "--video", 
      "--client-request-token", 
      "--notification-channel", 
      "--job-tag", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-project-version{
   $flags=(
      "--project-version-arn", 
      "--min-inference-units", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-stream-processor{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-start-text-detection{
   $flags=(
      "--video", 
      "--client-request-token", 
      "--notification-channel", 
      "--job-tag", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-stop-project-version{
   $flags=(
      "--project-version-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-stop-stream-processor{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-rekognition-wait{
   $flags=("");
   return $flags;
}
function Get-resource-groups{
   $commands=(
      "create-group", 
      "delete-group", 
      "get-group", 
      "get-group-query", 
      "get-tags", 
      "list-group-resources", 
      "list-groups", 
      "search-resources", 
      "tag", 
      "untag", 
      "update-group", 
      "update-group-query"
    );
   return $commands;
}
function Get-resource-groups-create-group{
   $flags=(
      "--name", 
      "--description", 
      "--resource-query", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-delete-group{
   $flags=(
      "--group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-get-group{
   $flags=(
      "--group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-get-group-query{
   $flags=(
      "--group-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-get-tags{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-list-group-resources{
   $flags=(
      "--group-name", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-list-groups{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-search-resources{
   $flags=(
      "--resource-query", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-tag{
   $flags=(
      "--arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-untag{
   $flags=(
      "--arn", 
      "--keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-update-group{
   $flags=(
      "--group-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resource-groups-update-group-query{
   $flags=(
      "--group-name", 
      "--resource-query", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resourcegroupstaggingapi{
   $commands=(
      "describe-report-creation", 
      "get-compliance-summary", 
      "get-resources", 
      "get-tag-keys", 
      "get-tag-values", 
      "start-report-creation", 
      "tag-resources", 
      "untag-resources"
    );
   return $commands;
}
function Get-resourcegroupstaggingapi-describe-report-creation{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resourcegroupstaggingapi-get-compliance-summary{
   $flags=(
      "--target-id-filters", 
      "--region-filters", 
      "--resource-type-filters", 
      "--tag-key-filters", 
      "--group-by", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resourcegroupstaggingapi-get-resources{
   $flags=(
      "--tag-filters", 
      "--tags-per-page", 
      "--resource-type-filters", 
      "--include-compliance-details", 
      "--no-include-compliance-details", 
      "--exclude-compliant-resources", 
      "--no-exclude-compliant-resources", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resourcegroupstaggingapi-get-tag-keys{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resourcegroupstaggingapi-get-tag-values{
   $flags=(
      "--key", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resourcegroupstaggingapi-start-report-creation{
   $flags=(
      "--s3-bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resourcegroupstaggingapi-tag-resources{
   $flags=(
      "--resource-arn-list", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-resourcegroupstaggingapi-untag-resources{
   $flags=(
      "--resource-arn-list", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker{
   $commands=(
      "batch-describe-simulation-job", 
      "cancel-deployment-job", 
      "cancel-simulation-job", 
      "cancel-simulation-job-batch", 
      "create-deployment-job", 
      "create-fleet", 
      "create-robot", 
      "create-robot-application", 
      "create-robot-application-version", 
      "create-simulation-application", 
      "create-simulation-application-version", 
      "create-simulation-job", 
      "delete-fleet", 
      "delete-robot", 
      "delete-robot-application", 
      "delete-simulation-application", 
      "deregister-robot", 
      "describe-deployment-job", 
      "describe-fleet", 
      "describe-robot", 
      "describe-robot-application", 
      "describe-simulation-application", 
      "describe-simulation-job", 
      "describe-simulation-job-batch", 
      "list-deployment-jobs", 
      "list-fleets", 
      "list-robot-applications", 
      "list-robots", 
      "list-simulation-applications", 
      "list-simulation-job-batches", 
      "list-simulation-jobs", 
      "list-tags-for-resource", 
      "register-robot", 
      "restart-simulation-job", 
      "start-simulation-job-batch", 
      "sync-deployment-job", 
      "tag-resource", 
      "untag-resource", 
      "update-robot-application", 
      "update-simulation-application"
    );
   return $commands;
}
function Get-robomaker-batch-describe-simulation-job{
   $flags=(
      "--jobs", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-cancel-deployment-job{
   $flags=(
      "--job", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-cancel-simulation-job{
   $flags=(
      "--job", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-cancel-simulation-job-batch{
   $flags=(
      "--batch", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-create-deployment-job{
   $flags=(
      "--deployment-config", 
      "--client-request-token", 
      "--fleet", 
      "--deployment-application-configs", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-create-fleet{
   $flags=(
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-create-robot{
   $flags=(
      "--name", 
      "--architecture", 
      "--greengrass-group-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-create-robot-application{
   $flags=(
      "--name", 
      "--sources", 
      "--robot-software-suite", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-create-robot-application-version{
   $flags=(
      "--application", 
      "--current-revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-create-simulation-application{
   $flags=(
      "--name", 
      "--sources", 
      "--simulation-software-suite", 
      "--robot-software-suite", 
      "--rendering-engine", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-create-simulation-application-version{
   $flags=(
      "--application", 
      "--current-revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-create-simulation-job{
   $flags=(
      "--client-request-token", 
      "--output-location", 
      "--logging-config", 
      "--max-job-duration-in-seconds", 
      "--iam-role", 
      "--failure-behavior", 
      "--robot-applications", 
      "--simulation-applications", 
      "--data-sources", 
      "--tags", 
      "--vpc-config", 
      "--compute", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-delete-fleet{
   $flags=(
      "--fleet", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-delete-robot{
   $flags=(
      "--robot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-delete-robot-application{
   $flags=(
      "--application", 
      "--application-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-delete-simulation-application{
   $flags=(
      "--application", 
      "--application-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-deregister-robot{
   $flags=(
      "--fleet", 
      "--robot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-describe-deployment-job{
   $flags=(
      "--job", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-describe-fleet{
   $flags=(
      "--fleet", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-describe-robot{
   $flags=(
      "--robot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-describe-robot-application{
   $flags=(
      "--application", 
      "--application-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-describe-simulation-application{
   $flags=(
      "--application", 
      "--application-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-describe-simulation-job{
   $flags=(
      "--job", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-describe-simulation-job-batch{
   $flags=(
      "--batch", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-list-deployment-jobs{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-list-fleets{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-list-robot-applications{
   $flags=(
      "--version-qualifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-list-robots{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-list-simulation-applications{
   $flags=(
      "--version-qualifier", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-list-simulation-job-batches{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-list-simulation-jobs{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-register-robot{
   $flags=(
      "--fleet", 
      "--robot", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-restart-simulation-job{
   $flags=(
      "--job", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-start-simulation-job-batch{
   $flags=(
      "--client-request-token", 
      "--batch-policy", 
      "--create-simulation-job-requests", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-sync-deployment-job{
   $flags=(
      "--client-request-token", 
      "--fleet", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-update-robot-application{
   $flags=(
      "--application", 
      "--sources", 
      "--robot-software-suite", 
      "--current-revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-robomaker-update-simulation-application{
   $flags=(
      "--application", 
      "--sources", 
      "--simulation-software-suite", 
      "--robot-software-suite", 
      "--rendering-engine", 
      "--current-revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53{
   $commands=(
      "associate-vpc-with-hosted-zone", 
      "change-resource-record-sets", 
      "change-tags-for-resource", 
      "create-health-check", 
      "create-hosted-zone", 
      "create-query-logging-config", 
      "create-reusable-delegation-set", 
      "create-traffic-policy", 
      "create-traffic-policy-instance", 
      "create-traffic-policy-version", 
      "create-vpc-association-authorization", 
      "delete-health-check", 
      "delete-hosted-zone", 
      "delete-query-logging-config", 
      "delete-reusable-delegation-set", 
      "delete-traffic-policy", 
      "delete-traffic-policy-instance", 
      "delete-vpc-association-authorization", 
      "disassociate-vpc-from-hosted-zone", 
      "get-account-limit", 
      "get-change", 
      "get-checker-ip-ranges", 
      "get-geo-location", 
      "get-health-check", 
      "get-health-check-count", 
      "get-health-check-last-failure-reason", 
      "get-health-check-status", 
      "get-hosted-zone", 
      "get-hosted-zone-count", 
      "get-hosted-zone-limit", 
      "get-query-logging-config", 
      "get-reusable-delegation-set", 
      "get-reusable-delegation-set-limit", 
      "get-traffic-policy", 
      "get-traffic-policy-instance", 
      "get-traffic-policy-instance-count", 
      "list-geo-locations", 
      "list-health-checks", 
      "list-hosted-zones", 
      "list-hosted-zones-by-name", 
      "list-query-logging-configs", 
      "list-resource-record-sets", 
      "list-reusable-delegation-sets", 
      "list-tags-for-resource", 
      "list-tags-for-resources", 
      "list-traffic-policies", 
      "list-traffic-policy-instances", 
      "list-traffic-policy-instances-by-hosted-zone", 
      "list-traffic-policy-instances-by-policy", 
      "list-traffic-policy-versions", 
      "list-vpc-association-authorizations", 
      "test-dns-answer", 
      "update-health-check", 
      "update-hosted-zone-comment", 
      "update-traffic-policy-comment", 
      "update-traffic-policy-instance", 
      "wait"
    );
   return $commands;
}
function Get-route53-associate-vpc-with-hosted-zone{
   $flags=(
      "--hosted-zone-id", 
      "--vpc", 
      "--comment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-change-resource-record-sets{
   $flags=(
      "--hosted-zone-id", 
      "--change-batch", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-change-tags-for-resource{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--add-tags", 
      "--remove-tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-create-health-check{
   $flags=(
      "--caller-reference", 
      "--health-check-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-create-hosted-zone{
   $flags=(
      "--name", 
      "--vpc", 
      "--caller-reference", 
      "--hosted-zone-config", 
      "--delegation-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-create-query-logging-config{
   $flags=(
      "--hosted-zone-id", 
      "--cloud-watch-logs-log-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-create-reusable-delegation-set{
   $flags=(
      "--caller-reference", 
      "--hosted-zone-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-create-traffic-policy{
   $flags=(
      "--name", 
      "--document", 
      "--comment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-create-traffic-policy-instance{
   $flags=(
      "--hosted-zone-id", 
      "--name", 
      "--ttl", 
      "--traffic-policy-id", 
      "--traffic-policy-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-create-traffic-policy-version{
   $flags=(
      "--id", 
      "--document", 
      "--comment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-create-vpc-association-authorization{
   $flags=(
      "--hosted-zone-id", 
      "--vpc", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-delete-health-check{
   $flags=(
      "--health-check-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-delete-hosted-zone{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-delete-query-logging-config{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-delete-reusable-delegation-set{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-delete-traffic-policy{
   $flags=(
      "--id", 
      "--traffic-policy-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-delete-traffic-policy-instance{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-delete-vpc-association-authorization{
   $flags=(
      "--hosted-zone-id", 
      "--vpc", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-disassociate-vpc-from-hosted-zone{
   $flags=(
      "--hosted-zone-id", 
      "--vpc", 
      "--comment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-account-limit{
   $flags=(
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-change{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-checker-ip-ranges{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-geo-location{
   $flags=(
      "--continent-code", 
      "--country-code", 
      "--subdivision-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-health-check{
   $flags=(
      "--health-check-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-health-check-count{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-health-check-last-failure-reason{
   $flags=(
      "--health-check-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-health-check-status{
   $flags=(
      "--health-check-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-hosted-zone{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-hosted-zone-count{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-hosted-zone-limit{
   $flags=(
      "--type", 
      "--hosted-zone-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-query-logging-config{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-reusable-delegation-set{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-reusable-delegation-set-limit{
   $flags=(
      "--type", 
      "--delegation-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-traffic-policy{
   $flags=(
      "--id", 
      "--traffic-policy-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-traffic-policy-instance{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-get-traffic-policy-instance-count{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-geo-locations{
   $flags=(
      "--start-continent-code", 
      "--start-country-code", 
      "--start-subdivision-code", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-health-checks{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-hosted-zones{
   $flags=(
      "--max-items", 
      "--delegation-set-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-hosted-zones-by-name{
   $flags=(
      "--dns-name", 
      "--hosted-zone-id", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-query-logging-configs{
   $flags=(
      "--hosted-zone-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-resource-record-sets{
   $flags=(
      "--hosted-zone-id", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-reusable-delegation-sets{
   $flags=(
      "--marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-tags-for-resource{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-tags-for-resources{
   $flags=(
      "--resource-type", 
      "--resource-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-traffic-policies{
   $flags=(
      "--traffic-policy-id-marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-traffic-policy-instances{
   $flags=(
      "--hosted-zone-id-marker", 
      "--traffic-policy-instance-name-marker", 
      "--traffic-policy-instance-type-marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-traffic-policy-instances-by-hosted-zone{
   $flags=(
      "--hosted-zone-id", 
      "--traffic-policy-instance-name-marker", 
      "--traffic-policy-instance-type-marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-traffic-policy-instances-by-policy{
   $flags=(
      "--traffic-policy-id", 
      "--traffic-policy-version", 
      "--hosted-zone-id-marker", 
      "--traffic-policy-instance-name-marker", 
      "--traffic-policy-instance-type-marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-traffic-policy-versions{
   $flags=(
      "--id", 
      "--traffic-policy-version-marker", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-list-vpc-association-authorizations{
   $flags=(
      "--hosted-zone-id", 
      "--max-results", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-test-dns-answer{
   $flags=(
      "--hosted-zone-id", 
      "--record-name", 
      "--record-type", 
      "--resolver-ip", 
      "--edns", 
      "--edns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-update-health-check{
   $flags=(
      "--health-check-id", 
      "--health-check-version", 
      "--ip-address", 
      "--port", 
      "--resource-path", 
      "--fully-qualified-domain-name", 
      "--search-string", 
      "--failure-threshold", 
      "--inverted", 
      "--no-inverted", 
      "--disabled", 
      "--no-disabled", 
      "--health-threshold", 
      "--child-health-checks", 
      "--enable-sni", 
      "--no-enable-sni", 
      "--regions", 
      "--alarm-identifier", 
      "--insufficient-data-health-status", 
      "--reset-elements", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-update-hosted-zone-comment{
   $flags=(
      "--id", 
      "--comment", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-update-traffic-policy-comment{
   $flags=(
      "--id", 
      "--comment", 
      "--traffic-policy-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-update-traffic-policy-instance{
   $flags=(
      "--id", 
      "--ttl", 
      "--traffic-policy-id", 
      "--traffic-policy-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53-wait{
   $flags=("");
   return $flags;
}
function Get-route53domains{
   $commands=(
      "accept-domain-transfer-from-another-aws-account", 
      "cancel-domain-transfer-to-another-aws-account", 
      "check-domain-availability", 
      "check-domain-transferability", 
      "delete-tags-for-domain", 
      "disable-domain-auto-renew", 
      "disable-domain-transfer-lock", 
      "enable-domain-auto-renew", 
      "enable-domain-transfer-lock", 
      "get-contact-reachability-status", 
      "get-domain-detail", 
      "get-domain-suggestions", 
      "get-operation-detail", 
      "list-domains", 
      "list-operations", 
      "list-tags-for-domain", 
      "register-domain", 
      "reject-domain-transfer-from-another-aws-account", 
      "renew-domain", 
      "resend-contact-reachability-email", 
      "retrieve-domain-auth-code", 
      "transfer-domain", 
      "transfer-domain-to-another-aws-account", 
      "update-domain-contact", 
      "update-domain-contact-privacy", 
      "update-domain-nameservers", 
      "update-tags-for-domain", 
      "view-billing"
    );
   return $commands;
}
function Get-route53domains-accept-domain-transfer-from-another-aws-account{
   $flags=(
      "--domain-name", 
      "--password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-cancel-domain-transfer-to-another-aws-account{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-check-domain-availability{
   $flags=(
      "--domain-name", 
      "--idn-lang-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-check-domain-transferability{
   $flags=(
      "--domain-name", 
      "--auth-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-delete-tags-for-domain{
   $flags=(
      "--domain-name", 
      "--tags-to-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-disable-domain-auto-renew{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-disable-domain-transfer-lock{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-enable-domain-auto-renew{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-enable-domain-transfer-lock{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-get-contact-reachability-status{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-get-domain-detail{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-get-domain-suggestions{
   $flags=(
      "--domain-name", 
      "--suggestion-count", 
      "--only-available", 
      "--no-only-available", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-get-operation-detail{
   $flags=(
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-list-domains{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-list-operations{
   $flags=(
      "--submitted-since", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-list-tags-for-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-register-domain{
   $flags=(
      "--domain-name", 
      "--idn-lang-code", 
      "--duration-in-years", 
      "--auto-renew", 
      "--no-auto-renew", 
      "--admin-contact", 
      "--registrant-contact", 
      "--tech-contact", 
      "--privacy-protect-admin-contact", 
      "--no-privacy-protect-admin-contact", 
      "--privacy-protect-registrant-contact", 
      "--no-privacy-protect-registrant-contact", 
      "--privacy-protect-tech-contact", 
      "--no-privacy-protect-tech-contact", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-reject-domain-transfer-from-another-aws-account{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-renew-domain{
   $flags=(
      "--domain-name", 
      "--duration-in-years", 
      "--current-expiry-year", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-resend-contact-reachability-email{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-retrieve-domain-auth-code{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-transfer-domain{
   $flags=(
      "--domain-name", 
      "--idn-lang-code", 
      "--duration-in-years", 
      "--nameservers", 
      "--auth-code", 
      "--auto-renew", 
      "--no-auto-renew", 
      "--admin-contact", 
      "--registrant-contact", 
      "--tech-contact", 
      "--privacy-protect-admin-contact", 
      "--no-privacy-protect-admin-contact", 
      "--privacy-protect-registrant-contact", 
      "--no-privacy-protect-registrant-contact", 
      "--privacy-protect-tech-contact", 
      "--no-privacy-protect-tech-contact", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-transfer-domain-to-another-aws-account{
   $flags=(
      "--domain-name", 
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-update-domain-contact{
   $flags=(
      "--domain-name", 
      "--admin-contact", 
      "--registrant-contact", 
      "--tech-contact", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-update-domain-contact-privacy{
   $flags=(
      "--domain-name", 
      "--admin-privacy", 
      "--no-admin-privacy", 
      "--registrant-privacy", 
      "--no-registrant-privacy", 
      "--tech-privacy", 
      "--no-tech-privacy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-update-domain-nameservers{
   $flags=(
      "--domain-name", 
      "--fi-auth-key", 
      "--nameservers", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-update-tags-for-domain{
   $flags=(
      "--domain-name", 
      "--tags-to-update", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53domains-view-billing{
   $flags=(
      "--max-items", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver{
   $commands=(
      "associate-resolver-endpoint-ip-address", 
      "associate-resolver-rule", 
      "create-resolver-endpoint", 
      "create-resolver-rule", 
      "delete-resolver-endpoint", 
      "delete-resolver-rule", 
      "disassociate-resolver-endpoint-ip-address", 
      "disassociate-resolver-rule", 
      "get-resolver-endpoint", 
      "get-resolver-rule", 
      "get-resolver-rule-association", 
      "get-resolver-rule-policy", 
      "list-resolver-endpoint-ip-addresses", 
      "list-resolver-endpoints", 
      "list-resolver-rule-associations", 
      "list-resolver-rules", 
      "list-tags-for-resource", 
      "put-resolver-rule-policy", 
      "tag-resource", 
      "untag-resource", 
      "update-resolver-endpoint", 
      "update-resolver-rule"
    );
   return $commands;
}
function Get-route53resolver-associate-resolver-endpoint-ip-address{
   $flags=(
      "--resolver-endpoint-id", 
      "--ip-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-associate-resolver-rule{
   $flags=(
      "--resolver-rule-id", 
      "--name", 
      "--vpc-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-create-resolver-endpoint{
   $flags=(
      "--creator-request-id", 
      "--name", 
      "--security-group-ids", 
      "--direction", 
      "--ip-addresses", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-create-resolver-rule{
   $flags=(
      "--creator-request-id", 
      "--name", 
      "--rule-type", 
      "--domain-name", 
      "--target-ips", 
      "--resolver-endpoint-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-delete-resolver-endpoint{
   $flags=(
      "--resolver-endpoint-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-delete-resolver-rule{
   $flags=(
      "--resolver-rule-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-disassociate-resolver-endpoint-ip-address{
   $flags=(
      "--resolver-endpoint-id", 
      "--ip-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-disassociate-resolver-rule{
   $flags=(
      "--vpc-id", 
      "--resolver-rule-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-get-resolver-endpoint{
   $flags=(
      "--resolver-endpoint-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-get-resolver-rule{
   $flags=(
      "--resolver-rule-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-get-resolver-rule-association{
   $flags=(
      "--resolver-rule-association-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-get-resolver-rule-policy{
   $flags=(
      "--arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-list-resolver-endpoint-ip-addresses{
   $flags=(
      "--resolver-endpoint-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-list-resolver-endpoints{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-list-resolver-rule-associations{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-list-resolver-rules{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-put-resolver-rule-policy{
   $flags=(
      "--arn", 
      "--resolver-rule-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-update-resolver-endpoint{
   $flags=(
      "--resolver-endpoint-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-route53resolver-update-resolver-rule{
   $flags=(
      "--resolver-rule-id", 
      "--config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3{
   $commands=(
      "cp", 
      "ls", 
      "mb", 
      "mv", 
      "presign", 
      "rb", 
      "rm", 
      "sync", 
      "website"
    );
   return $commands;
}
function Get-s3-cp{
   $flags=(
      "--dryrun", 
      "--quiet", 
      "--include", 
      "--exclude", 
      "--acl", 
      "--follow-symlinks", 
      "--no-follow-symlinks", 
      "--no-guess-mime-type", 
      "--sse", 
      "--sse-c", 
      "--sse-c-key", 
      "--sse-kms-key-id", 
      "--sse-c-copy-source", 
      "--sse-c-copy-source-key", 
      "--storage-class", 
      "--grants", 
      "--website-redirect", 
      "--content-type", 
      "--cache-control", 
      "--content-disposition", 
      "--content-encoding", 
      "--content-language", 
      "--expires", 
      "--source-region", 
      "--only-show-errors", 
      "--no-progress", 
      "--page-size", 
      "--ignore-glacier-warnings", 
      "--force-glacier-transfer", 
      "--request-payer", 
      "--metadata", 
      "--metadata-directive", 
      "--expected-size", 
      "--recursive"
    );
   return $flags;
}
function Get-s3-ls{
   $flags=(
      "--recursive", 
      "--page-size", 
      "--human-readable", 
      "--summarize", 
      "--request-payer"
    );
   return $flags;
}
function Get-s3-mb{
   $flags=("");
   return $flags;
}
function Get-s3-mv{
   $flags=(
      "--dryrun", 
      "--quiet", 
      "--include", 
      "--exclude", 
      "--acl", 
      "--follow-symlinks", 
      "--no-follow-symlinks", 
      "--no-guess-mime-type", 
      "--sse", 
      "--sse-c", 
      "--sse-c-key", 
      "--sse-kms-key-id", 
      "--sse-c-copy-source", 
      "--sse-c-copy-source-key", 
      "--storage-class", 
      "--grants", 
      "--website-redirect", 
      "--content-type", 
      "--cache-control", 
      "--content-disposition", 
      "--content-encoding", 
      "--content-language", 
      "--expires", 
      "--source-region", 
      "--only-show-errors", 
      "--no-progress", 
      "--page-size", 
      "--ignore-glacier-warnings", 
      "--force-glacier-transfer", 
      "--request-payer", 
      "--metadata", 
      "--metadata-directive", 
      "--recursive"
    );
   return $flags;
}
function Get-s3-presign{
   $flags=(
      "--expires-in"
    );
   return $flags;
}
function Get-s3-rb{
   $flags=(
      "--force"
    );
   return $flags;
}
function Get-s3-rm{
   $flags=(
      "--dryrun", 
      "--quiet", 
      "--recursive", 
      "--request-payer", 
      "--include", 
      "--exclude", 
      "--only-show-errors", 
      "--page-size"
    );
   return $flags;
}
function Get-s3-sync{
   $flags=(
      "--dryrun", 
      "--quiet", 
      "--include", 
      "--exclude", 
      "--acl", 
      "--follow-symlinks", 
      "--no-follow-symlinks", 
      "--no-guess-mime-type", 
      "--sse", 
      "--sse-c", 
      "--sse-c-key", 
      "--sse-kms-key-id", 
      "--sse-c-copy-source", 
      "--sse-c-copy-source-key", 
      "--storage-class", 
      "--grants", 
      "--website-redirect", 
      "--content-type", 
      "--cache-control", 
      "--content-disposition", 
      "--content-encoding", 
      "--content-language", 
      "--expires", 
      "--source-region", 
      "--only-show-errors", 
      "--no-progress", 
      "--page-size", 
      "--ignore-glacier-warnings", 
      "--force-glacier-transfer", 
      "--request-payer", 
      "--metadata", 
      "--metadata-directive", 
      "--size-only", 
      "--exact-timestamps", 
      "--delete"
    );
   return $flags;
}
function Get-s3-website{
   $flags=(
      "--index-document", 
      "--error-document"
    );
   return $flags;
}
function Get-s3api{
   $commands=(
      "abort-multipart-upload", 
      "complete-multipart-upload", 
      "copy-object", 
      "create-bucket", 
      "create-multipart-upload", 
      "delete-bucket", 
      "delete-bucket-analytics-configuration", 
      "delete-bucket-cors", 
      "delete-bucket-encryption", 
      "delete-bucket-inventory-configuration", 
      "delete-bucket-lifecycle", 
      "delete-bucket-metrics-configuration", 
      "delete-bucket-policy", 
      "delete-bucket-replication", 
      "delete-bucket-tagging", 
      "delete-bucket-website", 
      "delete-object", 
      "delete-object-tagging", 
      "delete-objects", 
      "delete-public-access-block", 
      "get-bucket-accelerate-configuration", 
      "get-bucket-acl", 
      "get-bucket-analytics-configuration", 
      "get-bucket-cors", 
      "get-bucket-encryption", 
      "get-bucket-inventory-configuration", 
      "get-bucket-lifecycle-configuration", 
      "get-bucket-location", 
      "get-bucket-logging", 
      "get-bucket-metrics-configuration", 
      "get-bucket-notification-configuration", 
      "get-bucket-policy", 
      "get-bucket-policy-status", 
      "get-bucket-replication", 
      "get-bucket-request-payment", 
      "get-bucket-tagging", 
      "get-bucket-versioning", 
      "get-bucket-website", 
      "get-object", 
      "get-object-acl", 
      "get-object-legal-hold", 
      "get-object-lock-configuration", 
      "get-object-retention", 
      "get-object-tagging", 
      "get-object-torrent", 
      "get-public-access-block", 
      "head-bucket", 
      "head-object", 
      "list-bucket-analytics-configurations", 
      "list-bucket-inventory-configurations", 
      "list-bucket-metrics-configurations", 
      "list-buckets", 
      "list-multipart-uploads", 
      "list-object-versions", 
      "list-objects", 
      "list-objects-v2", 
      "list-parts", 
      "put-bucket-accelerate-configuration", 
      "put-bucket-acl", 
      "put-bucket-analytics-configuration", 
      "put-bucket-cors", 
      "put-bucket-encryption", 
      "put-bucket-inventory-configuration", 
      "put-bucket-lifecycle-configuration", 
      "put-bucket-logging", 
      "put-bucket-metrics-configuration", 
      "put-bucket-notification-configuration", 
      "put-bucket-policy", 
      "put-bucket-replication", 
      "put-bucket-request-payment", 
      "put-bucket-tagging", 
      "put-bucket-versioning", 
      "put-bucket-website", 
      "put-object", 
      "put-object-acl", 
      "put-object-legal-hold", 
      "put-object-lock-configuration", 
      "put-object-retention", 
      "put-object-tagging", 
      "put-public-access-block", 
      "restore-object", 
      "select-object-content", 
      "upload-part", 
      "upload-part-copy", 
      "wait"
    );
   return $commands;
}
function Get-s3api-abort-multipart-upload{
   $flags=(
      "--bucket", 
      "--key", 
      "--upload-id", 
      "--request-payer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-complete-multipart-upload{
   $flags=(
      "--bucket", 
      "--key", 
      "--multipart-upload", 
      "--upload-id", 
      "--request-payer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-copy-object{
   $flags=(
      "--acl", 
      "--bucket", 
      "--cache-control", 
      "--content-disposition", 
      "--content-encoding", 
      "--content-language", 
      "--content-type", 
      "--copy-source", 
      "--copy-source-if-match", 
      "--copy-source-if-modified-since", 
      "--copy-source-if-none-match", 
      "--copy-source-if-unmodified-since", 
      "--expires", 
      "--grant-full-control", 
      "--grant-read", 
      "--grant-read-acp", 
      "--grant-write-acp", 
      "--key", 
      "--metadata", 
      "--metadata-directive", 
      "--tagging-directive", 
      "--server-side-encryption", 
      "--storage-class", 
      "--website-redirect-location", 
      "--sse-customer-algorithm", 
      "--sse-customer-key", 
      "--sse-customer-key-md", 
      "--ssekms-key-id", 
      "--ssekms-encryption-context", 
      "--copy-source-sse-customer-algorithm", 
      "--copy-source-sse-customer-key", 
      "--copy-source-sse-customer-key-md", 
      "--request-payer", 
      "--tagging", 
      "--object-lock-mode", 
      "--object-lock-retain-until-date", 
      "--object-lock-legal-hold-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-create-bucket{
   $flags=(
      "--acl", 
      "--bucket", 
      "--create-bucket-configuration", 
      "--grant-full-control", 
      "--grant-read", 
      "--grant-read-acp", 
      "--grant-write", 
      "--grant-write-acp", 
      "--object-lock-enabled-for-bucket", 
      "--no-object-lock-enabled-for-bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-create-multipart-upload{
   $flags=(
      "--acl", 
      "--bucket", 
      "--cache-control", 
      "--content-disposition", 
      "--content-encoding", 
      "--content-language", 
      "--content-type", 
      "--expires", 
      "--grant-full-control", 
      "--grant-read", 
      "--grant-read-acp", 
      "--grant-write-acp", 
      "--key", 
      "--metadata", 
      "--server-side-encryption", 
      "--storage-class", 
      "--website-redirect-location", 
      "--sse-customer-algorithm", 
      "--sse-customer-key", 
      "--sse-customer-key-md", 
      "--ssekms-key-id", 
      "--ssekms-encryption-context", 
      "--request-payer", 
      "--tagging", 
      "--object-lock-mode", 
      "--object-lock-retain-until-date", 
      "--object-lock-legal-hold-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-analytics-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-cors{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-encryption{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-inventory-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-lifecycle{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-metrics-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-policy{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-replication{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-tagging{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-bucket-website{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-object{
   $flags=(
      "--bucket", 
      "--key", 
      "--mfa", 
      "--version-id", 
      "--request-payer", 
      "--bypass-governance-retention", 
      "--no-bypass-governance-retention", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-object-tagging{
   $flags=(
      "--bucket", 
      "--key", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-objects{
   $flags=(
      "--bucket", 
      "--delete", 
      "--mfa", 
      "--request-payer", 
      "--bypass-governance-retention", 
      "--no-bypass-governance-retention", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-delete-public-access-block{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-accelerate-configuration{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-acl{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-analytics-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-cors{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-encryption{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-inventory-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-lifecycle-configuration{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-location{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-logging{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-metrics-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-notification-configuration{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-policy{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-policy-status{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-replication{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-request-payment{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-tagging{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-versioning{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-bucket-website{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-object{
   $flags=(
      "--bucket", 
      "--if-match", 
      "--if-modified-since", 
      "--if-none-match", 
      "--if-unmodified-since", 
      "--key", 
      "--range", 
      "--response-cache-control", 
      "--response-content-disposition", 
      "--response-content-encoding", 
      "--response-content-language", 
      "--response-content-type", 
      "--response-expires", 
      "--version-id", 
      "--sse-customer-algorithm", 
      "--sse-customer-key", 
      "--sse-customer-key-md", 
      "--request-payer", 
      "--part-number"
    );
   return $flags;
}
function Get-s3api-get-object-acl{
   $flags=(
      "--bucket", 
      "--key", 
      "--version-id", 
      "--request-payer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-object-legal-hold{
   $flags=(
      "--bucket", 
      "--key", 
      "--version-id", 
      "--request-payer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-object-lock-configuration{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-object-retention{
   $flags=(
      "--bucket", 
      "--key", 
      "--version-id", 
      "--request-payer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-object-tagging{
   $flags=(
      "--bucket", 
      "--key", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-get-object-torrent{
   $flags=(
      "--bucket", 
      "--key", 
      "--request-payer"
    );
   return $flags;
}
function Get-s3api-get-public-access-block{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-head-bucket{
   $flags=(
      "--bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-head-object{
   $flags=(
      "--bucket", 
      "--if-match", 
      "--if-modified-since", 
      "--if-none-match", 
      "--if-unmodified-since", 
      "--key", 
      "--range", 
      "--version-id", 
      "--sse-customer-algorithm", 
      "--sse-customer-key", 
      "--sse-customer-key-md", 
      "--request-payer", 
      "--part-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-bucket-analytics-configurations{
   $flags=(
      "--bucket", 
      "--continuation-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-bucket-inventory-configurations{
   $flags=(
      "--bucket", 
      "--continuation-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-bucket-metrics-configurations{
   $flags=(
      "--bucket", 
      "--continuation-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-buckets{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-multipart-uploads{
   $flags=(
      "--bucket", 
      "--delimiter", 
      "--encoding-type", 
      "--prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-object-versions{
   $flags=(
      "--bucket", 
      "--delimiter", 
      "--encoding-type", 
      "--prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-objects{
   $flags=(
      "--bucket", 
      "--delimiter", 
      "--encoding-type", 
      "--prefix", 
      "--request-payer", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-objects-v2{
   $flags=(
      "--bucket", 
      "--delimiter", 
      "--encoding-type", 
      "--prefix", 
      "--fetch-owner", 
      "--no-fetch-owner", 
      "--start-after", 
      "--request-payer", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-list-parts{
   $flags=(
      "--bucket", 
      "--key", 
      "--upload-id", 
      "--request-payer", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-accelerate-configuration{
   $flags=(
      "--bucket", 
      "--accelerate-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-acl{
   $flags=(
      "--acl", 
      "--access-control-policy", 
      "--bucket", 
      "--content-md", 
      "--grant-full-control", 
      "--grant-read", 
      "--grant-read-acp", 
      "--grant-write", 
      "--grant-write-acp", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-analytics-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--analytics-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-cors{
   $flags=(
      "--bucket", 
      "--cors-configuration", 
      "--content-md", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-encryption{
   $flags=(
      "--bucket", 
      "--content-md", 
      "--server-side-encryption-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-inventory-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--inventory-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-lifecycle-configuration{
   $flags=(
      "--bucket", 
      "--lifecycle-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-logging{
   $flags=(
      "--bucket", 
      "--bucket-logging-status", 
      "--content-md", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-metrics-configuration{
   $flags=(
      "--bucket", 
      "--id", 
      "--metrics-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-notification-configuration{
   $flags=(
      "--bucket", 
      "--notification-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-policy{
   $flags=(
      "--bucket", 
      "--content-md", 
      "--confirm-remove-self-bucket-access", 
      "--no-confirm-remove-self-bucket-access", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-replication{
   $flags=(
      "--bucket", 
      "--content-md", 
      "--replication-configuration", 
      "--token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-request-payment{
   $flags=(
      "--bucket", 
      "--content-md", 
      "--request-payment-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-tagging{
   $flags=(
      "--bucket", 
      "--content-md", 
      "--tagging", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-versioning{
   $flags=(
      "--bucket", 
      "--content-md", 
      "--mfa", 
      "--versioning-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-bucket-website{
   $flags=(
      "--bucket", 
      "--content-md", 
      "--website-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-object{
   $flags=(
      "--acl", 
      "--body", 
      "--bucket", 
      "--cache-control", 
      "--content-disposition", 
      "--content-encoding", 
      "--content-language", 
      "--content-length", 
      "--content-md", 
      "--content-type", 
      "--expires", 
      "--grant-full-control", 
      "--grant-read", 
      "--grant-read-acp", 
      "--grant-write-acp", 
      "--key", 
      "--metadata", 
      "--server-side-encryption", 
      "--storage-class", 
      "--website-redirect-location", 
      "--sse-customer-algorithm", 
      "--sse-customer-key", 
      "--sse-customer-key-md", 
      "--ssekms-key-id", 
      "--ssekms-encryption-context", 
      "--request-payer", 
      "--tagging", 
      "--object-lock-mode", 
      "--object-lock-retain-until-date", 
      "--object-lock-legal-hold-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-object-acl{
   $flags=(
      "--acl", 
      "--access-control-policy", 
      "--bucket", 
      "--content-md", 
      "--grant-full-control", 
      "--grant-read", 
      "--grant-read-acp", 
      "--grant-write", 
      "--grant-write-acp", 
      "--key", 
      "--request-payer", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-object-legal-hold{
   $flags=(
      "--bucket", 
      "--key", 
      "--legal-hold", 
      "--request-payer", 
      "--version-id", 
      "--content-md", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-object-lock-configuration{
   $flags=(
      "--bucket", 
      "--object-lock-configuration", 
      "--request-payer", 
      "--token", 
      "--content-md", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-object-retention{
   $flags=(
      "--bucket", 
      "--key", 
      "--retention", 
      "--request-payer", 
      "--version-id", 
      "--bypass-governance-retention", 
      "--no-bypass-governance-retention", 
      "--content-md", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-object-tagging{
   $flags=(
      "--bucket", 
      "--key", 
      "--version-id", 
      "--content-md", 
      "--tagging", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-put-public-access-block{
   $flags=(
      "--bucket", 
      "--content-md", 
      "--public-access-block-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-restore-object{
   $flags=(
      "--bucket", 
      "--key", 
      "--version-id", 
      "--restore-request", 
      "--request-payer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-select-object-content{
   $flags=(
      "--bucket", 
      "--key", 
      "--sse-customer-algorithm", 
      "--sse-customer-key", 
      "--sse-customer-key-md", 
      "--expression", 
      "--expression-type", 
      "--request-progress", 
      "--input-serialization", 
      "--output-serialization", 
      "--scan-range"
    );
   return $flags;
}
function Get-s3api-upload-part{
   $flags=(
      "--body", 
      "--bucket", 
      "--content-length", 
      "--content-md", 
      "--key", 
      "--part-number", 
      "--upload-id", 
      "--sse-customer-algorithm", 
      "--sse-customer-key", 
      "--sse-customer-key-md", 
      "--request-payer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-upload-part-copy{
   $flags=(
      "--bucket", 
      "--copy-source", 
      "--copy-source-if-match", 
      "--copy-source-if-modified-since", 
      "--copy-source-if-none-match", 
      "--copy-source-if-unmodified-since", 
      "--copy-source-range", 
      "--key", 
      "--part-number", 
      "--upload-id", 
      "--sse-customer-algorithm", 
      "--sse-customer-key", 
      "--sse-customer-key-md", 
      "--copy-source-sse-customer-algorithm", 
      "--copy-source-sse-customer-key", 
      "--copy-source-sse-customer-key-md", 
      "--request-payer", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3api-wait{
   $flags=("");
   return $flags;
}
function Get-s3control{
   $commands=(
      "create-access-point", 
      "create-job", 
      "delete-access-point", 
      "delete-access-point-policy", 
      "delete-job-tagging", 
      "delete-public-access-block", 
      "describe-job", 
      "get-access-point", 
      "get-access-point-policy", 
      "get-access-point-policy-status", 
      "get-job-tagging", 
      "get-public-access-block", 
      "list-access-points", 
      "list-jobs", 
      "put-access-point-policy", 
      "put-job-tagging", 
      "put-public-access-block", 
      "update-job-priority", 
      "update-job-status"
    );
   return $commands;
}
function Get-s3control-create-access-point{
   $flags=(
      "--account-id", 
      "--name", 
      "--bucket", 
      "--vpc-configuration", 
      "--public-access-block-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-create-job{
   $flags=(
      "--account-id", 
      "--confirmation-required", 
      "--no-confirmation-required", 
      "--operation", 
      "--report", 
      "--client-request-token", 
      "--manifest", 
      "--description", 
      "--priority", 
      "--role-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-delete-access-point{
   $flags=(
      "--account-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-delete-access-point-policy{
   $flags=(
      "--account-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-delete-job-tagging{
   $flags=(
      "--account-id", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-delete-public-access-block{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-describe-job{
   $flags=(
      "--account-id", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-get-access-point{
   $flags=(
      "--account-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-get-access-point-policy{
   $flags=(
      "--account-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-get-access-point-policy-status{
   $flags=(
      "--account-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-get-job-tagging{
   $flags=(
      "--account-id", 
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-get-public-access-block{
   $flags=(
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-list-access-points{
   $flags=(
      "--account-id", 
      "--bucket", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-list-jobs{
   $flags=(
      "--account-id", 
      "--job-statuses", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-put-access-point-policy{
   $flags=(
      "--account-id", 
      "--name", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-put-job-tagging{
   $flags=(
      "--account-id", 
      "--job-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-put-public-access-block{
   $flags=(
      "--public-access-block-configuration", 
      "--account-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-update-job-priority{
   $flags=(
      "--account-id", 
      "--job-id", 
      "--priority", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-s3control-update-job-status{
   $flags=(
      "--account-id", 
      "--job-id", 
      "--requested-job-status", 
      "--status-update-reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker{
   $commands=(
      "add-tags", 
      "associate-trial-component", 
      "create-algorithm", 
      "create-app", 
      "create-auto-ml-job", 
      "create-code-repository", 
      "create-compilation-job", 
      "create-domain", 
      "create-endpoint", 
      "create-endpoint-config", 
      "create-experiment", 
      "create-flow-definition", 
      "create-human-task-ui", 
      "create-hyper-parameter-tuning-job", 
      "create-labeling-job", 
      "create-model", 
      "create-model-package", 
      "create-monitoring-schedule", 
      "create-notebook-instance", 
      "create-notebook-instance-lifecycle-config", 
      "create-presigned-domain-url", 
      "create-presigned-notebook-instance-url", 
      "create-processing-job", 
      "create-training-job", 
      "create-transform-job", 
      "create-trial", 
      "create-trial-component", 
      "create-user-profile", 
      "create-workteam", 
      "delete-algorithm", 
      "delete-app", 
      "delete-code-repository", 
      "delete-domain", 
      "delete-endpoint", 
      "delete-endpoint-config", 
      "delete-experiment", 
      "delete-flow-definition", 
      "delete-model", 
      "delete-model-package", 
      "delete-monitoring-schedule", 
      "delete-notebook-instance", 
      "delete-notebook-instance-lifecycle-config", 
      "delete-tags", 
      "delete-trial", 
      "delete-trial-component", 
      "delete-user-profile", 
      "delete-workteam", 
      "describe-algorithm", 
      "describe-app", 
      "describe-auto-ml-job", 
      "describe-code-repository", 
      "describe-compilation-job", 
      "describe-domain", 
      "describe-endpoint", 
      "describe-endpoint-config", 
      "describe-experiment", 
      "describe-flow-definition", 
      "describe-human-task-ui", 
      "describe-hyper-parameter-tuning-job", 
      "describe-labeling-job", 
      "describe-model", 
      "describe-model-package", 
      "describe-monitoring-schedule", 
      "describe-notebook-instance", 
      "describe-notebook-instance-lifecycle-config", 
      "describe-processing-job", 
      "describe-subscribed-workteam", 
      "describe-training-job", 
      "describe-transform-job", 
      "describe-trial", 
      "describe-trial-component", 
      "describe-user-profile", 
      "describe-workforce", 
      "describe-workteam", 
      "disassociate-trial-component", 
      "get-search-suggestions", 
      "list-algorithms", 
      "list-apps", 
      "list-auto-ml-jobs", 
      "list-candidates-for-auto-ml-job", 
      "list-code-repositories", 
      "list-compilation-jobs", 
      "list-domains", 
      "list-endpoint-configs", 
      "list-endpoints", 
      "list-experiments", 
      "list-flow-definitions", 
      "list-human-task-uis", 
      "list-hyper-parameter-tuning-jobs", 
      "list-labeling-jobs", 
      "list-labeling-jobs-for-workteam", 
      "list-model-packages", 
      "list-models", 
      "list-monitoring-executions", 
      "list-monitoring-schedules", 
      "list-notebook-instance-lifecycle-configs", 
      "list-notebook-instances", 
      "list-processing-jobs", 
      "list-subscribed-workteams", 
      "list-tags", 
      "list-training-jobs", 
      "list-training-jobs-for-hyper-parameter-tuning-job", 
      "list-transform-jobs", 
      "list-trial-components", 
      "list-trials", 
      "list-user-profiles", 
      "list-workteams", 
      "render-ui-template", 
      "search", 
      "start-monitoring-schedule", 
      "start-notebook-instance", 
      "stop-auto-ml-job", 
      "stop-compilation-job", 
      "stop-hyper-parameter-tuning-job", 
      "stop-labeling-job", 
      "stop-monitoring-schedule", 
      "stop-notebook-instance", 
      "stop-processing-job", 
      "stop-training-job", 
      "stop-transform-job", 
      "update-code-repository", 
      "update-domain", 
      "update-endpoint", 
      "update-endpoint-weights-and-capacities", 
      "update-experiment", 
      "update-monitoring-schedule", 
      "update-notebook-instance", 
      "update-notebook-instance-lifecycle-config", 
      "update-trial", 
      "update-trial-component", 
      "update-user-profile", 
      "update-workforce", 
      "update-workteam", 
      "wait"
    );
   return $commands;
}
function Get-sagemaker-add-tags{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-associate-trial-component{
   $flags=(
      "--trial-component-name", 
      "--trial-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-algorithm{
   $flags=(
      "--algorithm-name", 
      "--algorithm-description", 
      "--training-specification", 
      "--inference-specification", 
      "--validation-specification", 
      "--certify-for-marketplace", 
      "--no-certify-for-marketplace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-app{
   $flags=(
      "--domain-id", 
      "--user-profile-name", 
      "--app-type", 
      "--app-name", 
      "--tags", 
      "--resource-spec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-auto-ml-job{
   $flags=(
      "--auto-ml-job-name", 
      "--input-data-config", 
      "--output-data-config", 
      "--problem-type", 
      "--auto-ml-job-objective", 
      "--auto-ml-job-config", 
      "--role-arn", 
      "--generate-candidate-definitions-only", 
      "--no-generate-candidate-definitions-only", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-code-repository{
   $flags=(
      "--code-repository-name", 
      "--git-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-compilation-job{
   $flags=(
      "--compilation-job-name", 
      "--role-arn", 
      "--input-config", 
      "--output-config", 
      "--stopping-condition", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-domain{
   $flags=(
      "--domain-name", 
      "--auth-mode", 
      "--default-user-settings", 
      "--subnet-ids", 
      "--vpc-id", 
      "--tags", 
      "--home-efs-file-system-kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-endpoint{
   $flags=(
      "--endpoint-name", 
      "--endpoint-config-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-endpoint-config{
   $flags=(
      "--endpoint-config-name", 
      "--production-variants", 
      "--data-capture-config", 
      "--tags", 
      "--kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-experiment{
   $flags=(
      "--experiment-name", 
      "--display-name", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-flow-definition{
   $flags=(
      "--flow-definition-name", 
      "--human-loop-request-source", 
      "--human-loop-activation-config", 
      "--human-loop-config", 
      "--output-config", 
      "--role-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-human-task-ui{
   $flags=(
      "--human-task-ui-name", 
      "--ui-template", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-hyper-parameter-tuning-job{
   $flags=(
      "--hyper-parameter-tuning-job-name", 
      "--hyper-parameter-tuning-job-config", 
      "--training-job-definition", 
      "--training-job-definitions", 
      "--warm-start-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-labeling-job{
   $flags=(
      "--labeling-job-name", 
      "--label-attribute-name", 
      "--input-config", 
      "--output-config", 
      "--role-arn", 
      "--label-category-config-s3-uri", 
      "--stopping-conditions", 
      "--labeling-job-algorithms-config", 
      "--human-task-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-model{
   $flags=(
      "--model-name", 
      "--primary-container", 
      "--containers", 
      "--execution-role-arn", 
      "--tags", 
      "--vpc-config", 
      "--enable-network-isolation", 
      "--no-enable-network-isolation", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-model-package{
   $flags=(
      "--model-package-name", 
      "--model-package-description", 
      "--inference-specification", 
      "--validation-specification", 
      "--source-algorithm-specification", 
      "--certify-for-marketplace", 
      "--no-certify-for-marketplace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-monitoring-schedule{
   $flags=(
      "--monitoring-schedule-name", 
      "--monitoring-schedule-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-notebook-instance{
   $flags=(
      "--notebook-instance-name", 
      "--instance-type", 
      "--subnet-id", 
      "--security-group-ids", 
      "--role-arn", 
      "--kms-key-id", 
      "--tags", 
      "--lifecycle-config-name", 
      "--direct-internet-access", 
      "--volume-size-in-gb", 
      "--accelerator-types", 
      "--default-code-repository", 
      "--additional-code-repositories", 
      "--root-access", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-notebook-instance-lifecycle-config{
   $flags=(
      "--notebook-instance-lifecycle-config-name", 
      "--on-create", 
      "--on-start", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-presigned-domain-url{
   $flags=(
      "--domain-id", 
      "--user-profile-name", 
      "--session-expiration-duration-in-seconds", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-presigned-notebook-instance-url{
   $flags=(
      "--notebook-instance-name", 
      "--session-expiration-duration-in-seconds", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-processing-job{
   $flags=(
      "--processing-inputs", 
      "--processing-output-config", 
      "--processing-job-name", 
      "--processing-resources", 
      "--stopping-condition", 
      "--app-specification", 
      "--environment", 
      "--network-config", 
      "--role-arn", 
      "--tags", 
      "--experiment-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-training-job{
   $flags=(
      "--training-job-name", 
      "--hyper-parameters", 
      "--algorithm-specification", 
      "--role-arn", 
      "--input-data-config", 
      "--output-data-config", 
      "--resource-config", 
      "--vpc-config", 
      "--stopping-condition", 
      "--tags", 
      "--enable-network-isolation", 
      "--no-enable-network-isolation", 
      "--enable-inter-container-traffic-encryption", 
      "--no-enable-inter-container-traffic-encryption", 
      "--enable-managed-spot-training", 
      "--no-enable-managed-spot-training", 
      "--checkpoint-config", 
      "--debug-hook-config", 
      "--debug-rule-configurations", 
      "--tensor-board-output-config", 
      "--experiment-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-transform-job{
   $flags=(
      "--transform-job-name", 
      "--model-name", 
      "--max-concurrent-transforms", 
      "--max-payload-in-mb", 
      "--batch-strategy", 
      "--environment", 
      "--transform-input", 
      "--transform-output", 
      "--transform-resources", 
      "--data-processing", 
      "--tags", 
      "--experiment-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-trial{
   $flags=(
      "--trial-name", 
      "--display-name", 
      "--experiment-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-trial-component{
   $flags=(
      "--trial-component-name", 
      "--display-name", 
      "--status", 
      "--start-time", 
      "--end-time", 
      "--parameters", 
      "--input-artifacts", 
      "--output-artifacts", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-user-profile{
   $flags=(
      "--domain-id", 
      "--user-profile-name", 
      "--single-sign-on-user-identifier", 
      "--single-sign-on-user-value", 
      "--tags", 
      "--user-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-create-workteam{
   $flags=(
      "--workteam-name", 
      "--member-definitions", 
      "--description", 
      "--notification-configuration", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-algorithm{
   $flags=(
      "--algorithm-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-app{
   $flags=(
      "--domain-id", 
      "--user-profile-name", 
      "--app-type", 
      "--app-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-code-repository{
   $flags=(
      "--code-repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-domain{
   $flags=(
      "--domain-id", 
      "--retention-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-endpoint{
   $flags=(
      "--endpoint-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-endpoint-config{
   $flags=(
      "--endpoint-config-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-experiment{
   $flags=(
      "--experiment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-flow-definition{
   $flags=(
      "--flow-definition-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-model{
   $flags=(
      "--model-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-model-package{
   $flags=(
      "--model-package-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-monitoring-schedule{
   $flags=(
      "--monitoring-schedule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-notebook-instance{
   $flags=(
      "--notebook-instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-notebook-instance-lifecycle-config{
   $flags=(
      "--notebook-instance-lifecycle-config-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-tags{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-trial{
   $flags=(
      "--trial-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-trial-component{
   $flags=(
      "--trial-component-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-user-profile{
   $flags=(
      "--domain-id", 
      "--user-profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-delete-workteam{
   $flags=(
      "--workteam-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-algorithm{
   $flags=(
      "--algorithm-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-app{
   $flags=(
      "--domain-id", 
      "--user-profile-name", 
      "--app-type", 
      "--app-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-auto-ml-job{
   $flags=(
      "--auto-ml-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-code-repository{
   $flags=(
      "--code-repository-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-compilation-job{
   $flags=(
      "--compilation-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-domain{
   $flags=(
      "--domain-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-endpoint{
   $flags=(
      "--endpoint-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-endpoint-config{
   $flags=(
      "--endpoint-config-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-experiment{
   $flags=(
      "--experiment-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-flow-definition{
   $flags=(
      "--flow-definition-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-human-task-ui{
   $flags=(
      "--human-task-ui-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-hyper-parameter-tuning-job{
   $flags=(
      "--hyper-parameter-tuning-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-labeling-job{
   $flags=(
      "--labeling-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-model{
   $flags=(
      "--model-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-model-package{
   $flags=(
      "--model-package-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-monitoring-schedule{
   $flags=(
      "--monitoring-schedule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-notebook-instance{
   $flags=(
      "--notebook-instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-notebook-instance-lifecycle-config{
   $flags=(
      "--notebook-instance-lifecycle-config-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-processing-job{
   $flags=(
      "--processing-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-subscribed-workteam{
   $flags=(
      "--workteam-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-training-job{
   $flags=(
      "--training-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-transform-job{
   $flags=(
      "--transform-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-trial{
   $flags=(
      "--trial-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-trial-component{
   $flags=(
      "--trial-component-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-user-profile{
   $flags=(
      "--domain-id", 
      "--user-profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-workforce{
   $flags=(
      "--workforce-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-describe-workteam{
   $flags=(
      "--workteam-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-disassociate-trial-component{
   $flags=(
      "--trial-component-name", 
      "--trial-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-get-search-suggestions{
   $flags=(
      "--resource", 
      "--suggestion-query", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-algorithms{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--name-contains", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-apps{
   $flags=(
      "--sort-order", 
      "--sort-by", 
      "--domain-id-equals", 
      "--user-profile-name-equals", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-auto-ml-jobs{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--last-modified-time-after", 
      "--last-modified-time-before", 
      "--name-contains", 
      "--status-equals", 
      "--sort-order", 
      "--sort-by", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-candidates-for-auto-ml-job{
   $flags=(
      "--auto-ml-job-name", 
      "--status-equals", 
      "--candidate-name-equals", 
      "--sort-order", 
      "--sort-by", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-code-repositories{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--last-modified-time-after", 
      "--last-modified-time-before", 
      "--name-contains", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-compilation-jobs{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--last-modified-time-after", 
      "--last-modified-time-before", 
      "--name-contains", 
      "--status-equals", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-domains{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-endpoint-configs{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--name-contains", 
      "--creation-time-before", 
      "--creation-time-after", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-endpoints{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--name-contains", 
      "--creation-time-before", 
      "--creation-time-after", 
      "--last-modified-time-before", 
      "--last-modified-time-after", 
      "--status-equals", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-experiments{
   $flags=(
      "--created-after", 
      "--created-before", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-flow-definitions{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-human-task-uis{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-hyper-parameter-tuning-jobs{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--name-contains", 
      "--creation-time-after", 
      "--creation-time-before", 
      "--last-modified-time-after", 
      "--last-modified-time-before", 
      "--status-equals", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-labeling-jobs{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--last-modified-time-after", 
      "--last-modified-time-before", 
      "--name-contains", 
      "--sort-by", 
      "--sort-order", 
      "--status-equals", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-labeling-jobs-for-workteam{
   $flags=(
      "--workteam-arn", 
      "--creation-time-after", 
      "--creation-time-before", 
      "--job-reference-code-contains", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-model-packages{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--name-contains", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-models{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--name-contains", 
      "--creation-time-before", 
      "--creation-time-after", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-monitoring-executions{
   $flags=(
      "--monitoring-schedule-name", 
      "--endpoint-name", 
      "--sort-by", 
      "--sort-order", 
      "--scheduled-time-before", 
      "--scheduled-time-after", 
      "--creation-time-before", 
      "--creation-time-after", 
      "--last-modified-time-before", 
      "--last-modified-time-after", 
      "--status-equals", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-monitoring-schedules{
   $flags=(
      "--endpoint-name", 
      "--sort-by", 
      "--sort-order", 
      "--name-contains", 
      "--creation-time-before", 
      "--creation-time-after", 
      "--last-modified-time-before", 
      "--last-modified-time-after", 
      "--status-equals", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-notebook-instance-lifecycle-configs{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--name-contains", 
      "--creation-time-before", 
      "--creation-time-after", 
      "--last-modified-time-before", 
      "--last-modified-time-after", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-notebook-instances{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--name-contains", 
      "--creation-time-before", 
      "--creation-time-after", 
      "--last-modified-time-before", 
      "--last-modified-time-after", 
      "--status-equals", 
      "--notebook-instance-lifecycle-config-name-contains", 
      "--default-code-repository-contains", 
      "--additional-code-repository-equals", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-processing-jobs{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--last-modified-time-after", 
      "--last-modified-time-before", 
      "--name-contains", 
      "--status-equals", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-subscribed-workteams{
   $flags=(
      "--name-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-tags{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-training-jobs{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--last-modified-time-after", 
      "--last-modified-time-before", 
      "--name-contains", 
      "--status-equals", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-training-jobs-for-hyper-parameter-tuning-job{
   $flags=(
      "--hyper-parameter-tuning-job-name", 
      "--status-equals", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-transform-jobs{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--last-modified-time-after", 
      "--last-modified-time-before", 
      "--name-contains", 
      "--status-equals", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-trial-components{
   $flags=(
      "--experiment-name", 
      "--trial-name", 
      "--source-arn", 
      "--created-after", 
      "--created-before", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-trials{
   $flags=(
      "--experiment-name", 
      "--trial-component-name", 
      "--created-after", 
      "--created-before", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-user-profiles{
   $flags=(
      "--sort-order", 
      "--sort-by", 
      "--domain-id-equals", 
      "--user-profile-name-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-list-workteams{
   $flags=(
      "--sort-by", 
      "--sort-order", 
      "--name-contains", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-render-ui-template{
   $flags=(
      "--ui-template", 
      "--task", 
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-search{
   $flags=(
      "--resource", 
      "--search-expression", 
      "--sort-by", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-start-monitoring-schedule{
   $flags=(
      "--monitoring-schedule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-start-notebook-instance{
   $flags=(
      "--notebook-instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-auto-ml-job{
   $flags=(
      "--auto-ml-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-compilation-job{
   $flags=(
      "--compilation-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-hyper-parameter-tuning-job{
   $flags=(
      "--hyper-parameter-tuning-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-labeling-job{
   $flags=(
      "--labeling-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-monitoring-schedule{
   $flags=(
      "--monitoring-schedule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-notebook-instance{
   $flags=(
      "--notebook-instance-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-processing-job{
   $flags=(
      "--processing-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-training-job{
   $flags=(
      "--training-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-stop-transform-job{
   $flags=(
      "--transform-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-code-repository{
   $flags=(
      "--code-repository-name", 
      "--git-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-domain{
   $flags=(
      "--domain-id", 
      "--default-user-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-endpoint{
   $flags=(
      "--endpoint-name", 
      "--endpoint-config-name", 
      "--retain-all-variant-properties", 
      "--no-retain-all-variant-properties", 
      "--exclude-retained-variant-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-endpoint-weights-and-capacities{
   $flags=(
      "--endpoint-name", 
      "--desired-weights-and-capacities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-experiment{
   $flags=(
      "--experiment-name", 
      "--display-name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-monitoring-schedule{
   $flags=(
      "--monitoring-schedule-name", 
      "--monitoring-schedule-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-notebook-instance{
   $flags=(
      "--notebook-instance-name", 
      "--instance-type", 
      "--role-arn", 
      "--lifecycle-config-name", 
      "--disassociate-lifecycle-config", 
      "--no-disassociate-lifecycle-config", 
      "--volume-size-in-gb", 
      "--default-code-repository", 
      "--additional-code-repositories", 
      "--accelerator-types", 
      "--disassociate-accelerator-types", 
      "--no-disassociate-accelerator-types", 
      "--disassociate-default-code-repository", 
      "--no-disassociate-default-code-repository", 
      "--disassociate-additional-code-repositories", 
      "--no-disassociate-additional-code-repositories", 
      "--root-access", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-notebook-instance-lifecycle-config{
   $flags=(
      "--notebook-instance-lifecycle-config-name", 
      "--on-create", 
      "--on-start", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-trial{
   $flags=(
      "--trial-name", 
      "--display-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-trial-component{
   $flags=(
      "--trial-component-name", 
      "--display-name", 
      "--status", 
      "--start-time", 
      "--end-time", 
      "--parameters", 
      "--parameters-to-remove", 
      "--input-artifacts", 
      "--input-artifacts-to-remove", 
      "--output-artifacts", 
      "--output-artifacts-to-remove", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-user-profile{
   $flags=(
      "--domain-id", 
      "--user-profile-name", 
      "--user-settings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-workforce{
   $flags=(
      "--workforce-name", 
      "--source-ip-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-update-workteam{
   $flags=(
      "--workteam-name", 
      "--member-definitions", 
      "--description", 
      "--notification-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-wait{
   $flags=("");
   return $flags;
}
function Get-sagemaker-a2i-runtime{
   $commands=(
      "delete-human-loop", 
      "describe-human-loop", 
      "list-human-loops", 
      "start-human-loop", 
      "stop-human-loop"
    );
   return $commands;
}
function Get-sagemaker-a2i-runtime-delete-human-loop{
   $flags=(
      "--human-loop-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-a2i-runtime-describe-human-loop{
   $flags=(
      "--human-loop-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-a2i-runtime-list-human-loops{
   $flags=(
      "--creation-time-after", 
      "--creation-time-before", 
      "--flow-definition-arn", 
      "--sort-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-a2i-runtime-start-human-loop{
   $flags=(
      "--human-loop-name", 
      "--flow-definition-arn", 
      "--human-loop-input", 
      "--data-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-a2i-runtime-stop-human-loop{
   $flags=(
      "--human-loop-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sagemaker-runtime{
   $commands=(
      "invoke-endpoint"
    );
   return $commands;
}
function Get-sagemaker-runtime-invoke-endpoint{
   $flags=(
      "--endpoint-name", 
      "--body", 
      "--content-type", 
      "--accept", 
      "--custom-attributes", 
      "--target-model"
    );
   return $flags;
}
function Get-savingsplans{
   $commands=(
      "create-savings-plan", 
      "describe-savings-plan-rates", 
      "describe-savings-plans", 
      "describe-savings-plans-offering-rates", 
      "describe-savings-plans-offerings", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource"
    );
   return $commands;
}
function Get-savingsplans-create-savings-plan{
   $flags=(
      "--savings-plan-offering-id", 
      "--commitment", 
      "--upfront-payment-amount", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-savingsplans-describe-savings-plan-rates{
   $flags=(
      "--savings-plan-id", 
      "--filters", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-savingsplans-describe-savings-plans{
   $flags=(
      "--savings-plan-arns", 
      "--savings-plan-ids", 
      "--next-token", 
      "--max-results", 
      "--states", 
      "--filters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-savingsplans-describe-savings-plans-offering-rates{
   $flags=(
      "--savings-plan-offering-ids", 
      "--savings-plan-payment-options", 
      "--savings-plan-types", 
      "--products", 
      "--service-codes", 
      "--usage-types", 
      "--operations", 
      "--filters", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-savingsplans-describe-savings-plans-offerings{
   $flags=(
      "--offering-ids", 
      "--payment-options", 
      "--product-type", 
      "--plan-types", 
      "--durations", 
      "--currencies", 
      "--descriptions", 
      "--service-codes", 
      "--usage-types", 
      "--operations", 
      "--filters", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-savingsplans-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-savingsplans-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-savingsplans-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas{
   $commands=(
      "create-discoverer", 
      "create-registry", 
      "create-schema", 
      "delete-discoverer", 
      "delete-registry", 
      "delete-resource-policy", 
      "delete-schema", 
      "delete-schema-version", 
      "describe-code-binding", 
      "describe-discoverer", 
      "describe-registry", 
      "describe-schema", 
      "get-code-binding-source", 
      "get-discovered-schema", 
      "get-resource-policy", 
      "list-discoverers", 
      "list-registries", 
      "list-schema-versions", 
      "list-schemas", 
      "list-tags-for-resource", 
      "put-code-binding", 
      "put-resource-policy", 
      "search-schemas", 
      "start-discoverer", 
      "stop-discoverer", 
      "tag-resource", 
      "untag-resource", 
      "update-discoverer", 
      "update-registry", 
      "update-schema", 
      "wait"
    );
   return $commands;
}
function Get-schemas-create-discoverer{
   $flags=(
      "--description", 
      "--source-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-create-registry{
   $flags=(
      "--description", 
      "--registry-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-create-schema{
   $flags=(
      "--content", 
      "--description", 
      "--registry-name", 
      "--schema-name", 
      "--tags", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-delete-discoverer{
   $flags=(
      "--discoverer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-delete-registry{
   $flags=(
      "--registry-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-delete-resource-policy{
   $flags=(
      "--registry-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-delete-schema{
   $flags=(
      "--registry-name", 
      "--schema-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-delete-schema-version{
   $flags=(
      "--registry-name", 
      "--schema-name", 
      "--schema-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-describe-code-binding{
   $flags=(
      "--language", 
      "--registry-name", 
      "--schema-name", 
      "--schema-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-describe-discoverer{
   $flags=(
      "--discoverer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-describe-registry{
   $flags=(
      "--registry-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-describe-schema{
   $flags=(
      "--registry-name", 
      "--schema-name", 
      "--schema-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-get-code-binding-source{
   $flags=(
      "--language", 
      "--registry-name", 
      "--schema-name", 
      "--schema-version"
    );
   return $flags;
}
function Get-schemas-get-discovered-schema{
   $flags=(
      "--events", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-get-resource-policy{
   $flags=(
      "--registry-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-list-discoverers{
   $flags=(
      "--discoverer-id-prefix", 
      "--source-arn-prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-list-registries{
   $flags=(
      "--registry-name-prefix", 
      "--scope", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-list-schema-versions{
   $flags=(
      "--registry-name", 
      "--schema-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-list-schemas{
   $flags=(
      "--registry-name", 
      "--schema-name-prefix", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-put-code-binding{
   $flags=(
      "--language", 
      "--registry-name", 
      "--schema-name", 
      "--schema-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-put-resource-policy{
   $flags=(
      "--policy", 
      "--registry-name", 
      "--revision-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-search-schemas{
   $flags=(
      "--keywords", 
      "--registry-name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-start-discoverer{
   $flags=(
      "--discoverer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-stop-discoverer{
   $flags=(
      "--discoverer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-update-discoverer{
   $flags=(
      "--description", 
      "--discoverer-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-update-registry{
   $flags=(
      "--description", 
      "--registry-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-update-schema{
   $flags=(
      "--client-token-id", 
      "--content", 
      "--description", 
      "--registry-name", 
      "--schema-name", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-schemas-wait{
   $flags=("");
   return $flags;
}
function Get-sdb{
   $commands=(
      "batch-delete-attributes", 
      "batch-put-attributes", 
      "create-domain", 
      "delete-attributes", 
      "delete-domain", 
      "domain-metadata", 
      "get-attributes", 
      "list-domains", 
      "put-attributes", 
      "select"
    );
   return $commands;
}
function Get-sdb-batch-delete-attributes{
   $flags=(
      "--domain-name", 
      "--items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-batch-put-attributes{
   $flags=(
      "--domain-name", 
      "--items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-create-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-delete-attributes{
   $flags=(
      "--domain-name", 
      "--item-name", 
      "--attributes", 
      "--expected", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-delete-domain{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-domain-metadata{
   $flags=(
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-get-attributes{
   $flags=(
      "--domain-name", 
      "--item-name", 
      "--attribute-names", 
      "--consistent-read", 
      "--no-consistent-read", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-list-domains{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-put-attributes{
   $flags=(
      "--domain-name", 
      "--item-name", 
      "--attributes", 
      "--expected", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sdb-select{
   $flags=(
      "--select-expression", 
      "--consistent-read", 
      "--no-consistent-read", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager{
   $commands=(
      "cancel-rotate-secret", 
      "create-secret", 
      "delete-resource-policy", 
      "delete-secret", 
      "describe-secret", 
      "get-random-password", 
      "get-resource-policy", 
      "get-secret-value", 
      "list-secret-version-ids", 
      "list-secrets", 
      "put-resource-policy", 
      "put-secret-value", 
      "restore-secret", 
      "rotate-secret", 
      "tag-resource", 
      "untag-resource", 
      "update-secret", 
      "update-secret-version-stage"
    );
   return $commands;
}
function Get-secretsmanager-cancel-rotate-secret{
   $flags=(
      "--secret-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-create-secret{
   $flags=(
      "--name", 
      "--client-request-token", 
      "--description", 
      "--kms-key-id", 
      "--secret-binary", 
      "--secret-string", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-delete-resource-policy{
   $flags=(
      "--secret-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-delete-secret{
   $flags=(
      "--secret-id", 
      "--recovery-window-in-days", 
      "--force-delete-without-recovery", 
      "--no-force-delete-without-recovery", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-describe-secret{
   $flags=(
      "--secret-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-get-random-password{
   $flags=(
      "--password-length", 
      "--exclude-characters", 
      "--exclude-numbers", 
      "--no-exclude-numbers", 
      "--exclude-punctuation", 
      "--no-exclude-punctuation", 
      "--exclude-uppercase", 
      "--no-exclude-uppercase", 
      "--exclude-lowercase", 
      "--no-exclude-lowercase", 
      "--include-space", 
      "--no-include-space", 
      "--require-each-included-type", 
      "--no-require-each-included-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-get-resource-policy{
   $flags=(
      "--secret-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-get-secret-value{
   $flags=(
      "--secret-id", 
      "--version-id", 
      "--version-stage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-list-secret-version-ids{
   $flags=(
      "--secret-id", 
      "--max-results", 
      "--next-token", 
      "--include-deprecated", 
      "--no-include-deprecated", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-list-secrets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-put-resource-policy{
   $flags=(
      "--secret-id", 
      "--resource-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-put-secret-value{
   $flags=(
      "--secret-id", 
      "--client-request-token", 
      "--secret-binary", 
      "--secret-string", 
      "--version-stages", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-restore-secret{
   $flags=(
      "--secret-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-rotate-secret{
   $flags=(
      "--secret-id", 
      "--client-request-token", 
      "--rotation-lambda-arn", 
      "--rotation-rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-tag-resource{
   $flags=(
      "--secret-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-untag-resource{
   $flags=(
      "--secret-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-update-secret{
   $flags=(
      "--secret-id", 
      "--client-request-token", 
      "--description", 
      "--kms-key-id", 
      "--secret-binary", 
      "--secret-string", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-secretsmanager-update-secret-version-stage{
   $flags=(
      "--secret-id", 
      "--version-stage", 
      "--remove-from-version-id", 
      "--move-to-version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub{
   $commands=(
      "accept-invitation", 
      "batch-disable-standards", 
      "batch-enable-standards", 
      "batch-import-findings", 
      "batch-update-findings", 
      "create-action-target", 
      "create-insight", 
      "create-members", 
      "decline-invitations", 
      "delete-action-target", 
      "delete-insight", 
      "delete-invitations", 
      "delete-members", 
      "describe-action-targets", 
      "describe-hub", 
      "describe-products", 
      "describe-standards", 
      "describe-standards-controls", 
      "disable-import-findings-for-product", 
      "disable-security-hub", 
      "disassociate-from-master-account", 
      "disassociate-members", 
      "enable-import-findings-for-product", 
      "enable-security-hub", 
      "get-enabled-standards", 
      "get-findings", 
      "get-insight-results", 
      "get-insights", 
      "get-invitations-count", 
      "get-master-account", 
      "get-members", 
      "invite-members", 
      "list-enabled-products-for-import", 
      "list-invitations", 
      "list-members", 
      "list-tags-for-resource", 
      "tag-resource", 
      "untag-resource", 
      "update-action-target", 
      "update-findings", 
      "update-insight", 
      "update-standards-control"
    );
   return $commands;
}
function Get-securityhub-accept-invitation{
   $flags=(
      "--master-id", 
      "--invitation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-batch-disable-standards{
   $flags=(
      "--standards-subscription-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-batch-enable-standards{
   $flags=(
      "--standards-subscription-requests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-batch-import-findings{
   $flags=(
      "--findings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-batch-update-findings{
   $flags=(
      "--finding-identifiers", 
      "--note", 
      "--severity", 
      "--verification-state", 
      "--confidence", 
      "--criticality", 
      "--types", 
      "--user-defined-fields", 
      "--workflow", 
      "--related-findings", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-create-action-target{
   $flags=(
      "--name", 
      "--description", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-create-insight{
   $flags=(
      "--name", 
      "--filters", 
      "--group-by-attribute", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-create-members{
   $flags=(
      "--account-details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-decline-invitations{
   $flags=(
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-delete-action-target{
   $flags=(
      "--action-target-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-delete-insight{
   $flags=(
      "--insight-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-delete-invitations{
   $flags=(
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-delete-members{
   $flags=(
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-describe-action-targets{
   $flags=(
      "--action-target-arns", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-describe-hub{
   $flags=(
      "--hub-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-describe-products{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-describe-standards{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-describe-standards-controls{
   $flags=(
      "--standards-subscription-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-disable-import-findings-for-product{
   $flags=(
      "--product-subscription-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-disable-security-hub{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-disassociate-from-master-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-disassociate-members{
   $flags=(
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-enable-import-findings-for-product{
   $flags=(
      "--product-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-enable-security-hub{
   $flags=(
      "--tags", 
      "--enable-default-standards", 
      "--no-enable-default-standards", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-get-enabled-standards{
   $flags=(
      "--standards-subscription-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-get-findings{
   $flags=(
      "--filters", 
      "--sort-criteria", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-get-insight-results{
   $flags=(
      "--insight-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-get-insights{
   $flags=(
      "--insight-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-get-invitations-count{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-get-master-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-get-members{
   $flags=(
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-invite-members{
   $flags=(
      "--account-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-list-enabled-products-for-import{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-list-invitations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-list-members{
   $flags=(
      "--only-associated", 
      "--no-only-associated", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-update-action-target{
   $flags=(
      "--action-target-arn", 
      "--name", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-update-findings{
   $flags=(
      "--filters", 
      "--note", 
      "--record-state", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-update-insight{
   $flags=(
      "--insight-arn", 
      "--name", 
      "--filters", 
      "--group-by-attribute", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-securityhub-update-standards-control{
   $flags=(
      "--standards-control-arn", 
      "--control-status", 
      "--disabled-reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo{
   $commands=(
      "create-application", 
      "create-application-version", 
      "create-cloud-formation-change-set", 
      "create-cloud-formation-template", 
      "delete-application", 
      "get-application", 
      "get-application-policy", 
      "get-cloud-formation-template", 
      "list-application-dependencies", 
      "list-application-versions", 
      "list-applications", 
      "put-application-policy", 
      "unshare-application", 
      "update-application"
    );
   return $commands;
}
function Get-serverlessrepo-create-application{
   $flags=(
      "--author", 
      "--description", 
      "--home-page-url", 
      "--labels", 
      "--license-body", 
      "--license-url", 
      "--name", 
      "--readme-body", 
      "--readme-url", 
      "--semantic-version", 
      "--source-code-archive-url", 
      "--source-code-url", 
      "--spdx-license-id", 
      "--template-body", 
      "--template-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-create-application-version{
   $flags=(
      "--application-id", 
      "--semantic-version", 
      "--source-code-archive-url", 
      "--source-code-url", 
      "--template-body", 
      "--template-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-create-cloud-formation-change-set{
   $flags=(
      "--application-id", 
      "--capabilities", 
      "--change-set-name", 
      "--client-token", 
      "--description", 
      "--notification-arns", 
      "--parameter-overrides", 
      "--resource-types", 
      "--rollback-configuration", 
      "--semantic-version", 
      "--stack-name", 
      "--tags", 
      "--template-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-create-cloud-formation-template{
   $flags=(
      "--application-id", 
      "--semantic-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-delete-application{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-get-application{
   $flags=(
      "--application-id", 
      "--semantic-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-get-application-policy{
   $flags=(
      "--application-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-get-cloud-formation-template{
   $flags=(
      "--application-id", 
      "--template-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-list-application-dependencies{
   $flags=(
      "--application-id", 
      "--max-items", 
      "--semantic-version", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-list-application-versions{
   $flags=(
      "--application-id", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-list-applications{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-put-application-policy{
   $flags=(
      "--application-id", 
      "--statements", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-unshare-application{
   $flags=(
      "--application-id", 
      "--organization-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-serverlessrepo-update-application{
   $flags=(
      "--application-id", 
      "--author", 
      "--description", 
      "--home-page-url", 
      "--labels", 
      "--readme-body", 
      "--readme-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas{
   $commands=(
      "associate-service-quota-template", 
      "delete-service-quota-increase-request-from-template", 
      "disassociate-service-quota-template", 
      "get-association-for-service-quota-template", 
      "get-aws-default-service-quota", 
      "get-requested-service-quota-change", 
      "get-service-quota", 
      "get-service-quota-increase-request-from-template", 
      "list-aws-default-service-quotas", 
      "list-requested-service-quota-change-history", 
      "list-requested-service-quota-change-history-by-quota", 
      "list-service-quota-increase-requests-in-template", 
      "list-service-quotas", 
      "list-services", 
      "put-service-quota-increase-request-into-template", 
      "request-service-quota-increase"
    );
   return $commands;
}
function Get-service-quotas-associate-service-quota-template{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-delete-service-quota-increase-request-from-template{
   $flags=(
      "--service-code", 
      "--quota-code", 
      "--aws-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-disassociate-service-quota-template{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-get-association-for-service-quota-template{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-get-aws-default-service-quota{
   $flags=(
      "--service-code", 
      "--quota-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-get-requested-service-quota-change{
   $flags=(
      "--request-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-get-service-quota{
   $flags=(
      "--service-code", 
      "--quota-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-get-service-quota-increase-request-from-template{
   $flags=(
      "--service-code", 
      "--quota-code", 
      "--aws-region", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-list-aws-default-service-quotas{
   $flags=(
      "--service-code", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-list-requested-service-quota-change-history{
   $flags=(
      "--service-code", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-list-requested-service-quota-change-history-by-quota{
   $flags=(
      "--service-code", 
      "--quota-code", 
      "--status", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-list-service-quota-increase-requests-in-template{
   $flags=(
      "--service-code", 
      "--aws-region", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-list-service-quotas{
   $flags=(
      "--service-code", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-list-services{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-put-service-quota-increase-request-into-template{
   $flags=(
      "--quota-code", 
      "--service-code", 
      "--aws-region", 
      "--desired-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-service-quotas-request-service-quota-increase{
   $flags=(
      "--service-code", 
      "--quota-code", 
      "--desired-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog{
   $commands=(
      "accept-portfolio-share", 
      "associate-budget-with-resource", 
      "associate-principal-with-portfolio", 
      "associate-product-with-portfolio", 
      "associate-service-action-with-provisioning-artifact", 
      "associate-tag-option-with-resource", 
      "batch-associate-service-action-with-provisioning-artifact", 
      "batch-disassociate-service-action-from-provisioning-artifact", 
      "copy-product", 
      "create-constraint", 
      "create-portfolio", 
      "create-portfolio-share", 
      "create-product", 
      "create-provisioned-product-plan", 
      "create-provisioning-artifact", 
      "create-service-action", 
      "create-tag-option", 
      "delete-constraint", 
      "delete-portfolio", 
      "delete-portfolio-share", 
      "delete-product", 
      "delete-provisioned-product-plan", 
      "delete-provisioning-artifact", 
      "delete-service-action", 
      "delete-tag-option", 
      "describe-constraint", 
      "describe-copy-product-status", 
      "describe-portfolio", 
      "describe-portfolio-share-status", 
      "describe-product", 
      "describe-product-as-admin", 
      "describe-product-view", 
      "describe-provisioned-product", 
      "describe-provisioned-product-plan", 
      "describe-provisioning-artifact", 
      "describe-provisioning-parameters", 
      "describe-record", 
      "describe-service-action", 
      "describe-service-action-execution-parameters", 
      "describe-tag-option", 
      "disable-aws-organizations-access", 
      "disassociate-budget-from-resource", 
      "disassociate-principal-from-portfolio", 
      "disassociate-product-from-portfolio", 
      "disassociate-service-action-from-provisioning-artifact", 
      "disassociate-tag-option-from-resource", 
      "enable-aws-organizations-access", 
      "execute-provisioned-product-plan", 
      "execute-provisioned-product-service-action", 
      "generate", 
      "get-aws-organizations-access-status", 
      "list-accepted-portfolio-shares", 
      "list-budgets-for-resource", 
      "list-constraints-for-portfolio", 
      "list-launch-paths", 
      "list-organization-portfolio-access", 
      "list-portfolio-access", 
      "list-portfolios", 
      "list-portfolios-for-product", 
      "list-principals-for-portfolio", 
      "list-provisioned-product-plans", 
      "list-provisioning-artifacts", 
      "list-provisioning-artifacts-for-service-action", 
      "list-record-history", 
      "list-resources-for-tag-option", 
      "list-service-actions", 
      "list-service-actions-for-provisioning-artifact", 
      "list-stack-instances-for-provisioned-product", 
      "list-tag-options", 
      "provision-product", 
      "reject-portfolio-share", 
      "scan-provisioned-products", 
      "search-products", 
      "search-products-as-admin", 
      "search-provisioned-products", 
      "terminate-provisioned-product", 
      "update-constraint", 
      "update-portfolio", 
      "update-product", 
      "update-provisioned-product", 
      "update-provisioned-product-properties", 
      "update-provisioning-artifact", 
      "update-service-action", 
      "update-tag-option"
    );
   return $commands;
}
function Get-servicecatalog-accept-portfolio-share{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--portfolio-share-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-associate-budget-with-resource{
   $flags=(
      "--budget-name", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-associate-principal-with-portfolio{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--principal-arn", 
      "--principal-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-associate-product-with-portfolio{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--portfolio-id", 
      "--source-portfolio-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-associate-service-action-with-provisioning-artifact{
   $flags=(
      "--product-id", 
      "--provisioning-artifact-id", 
      "--service-action-id", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-associate-tag-option-with-resource{
   $flags=(
      "--resource-id", 
      "--tag-option-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-batch-associate-service-action-with-provisioning-artifact{
   $flags=(
      "--service-action-associations", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-batch-disassociate-service-action-from-provisioning-artifact{
   $flags=(
      "--service-action-associations", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-copy-product{
   $flags=(
      "--accept-language", 
      "--source-product-arn", 
      "--target-product-id", 
      "--target-product-name", 
      "--source-provisioning-artifact-identifiers", 
      "--copy-options", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-create-constraint{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--product-id", 
      "--parameters", 
      "--type", 
      "--description", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-create-portfolio{
   $flags=(
      "--accept-language", 
      "--display-name", 
      "--description", 
      "--provider-name", 
      "--tags", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-create-portfolio-share{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--account-id", 
      "--organization-node", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-create-product{
   $flags=(
      "--accept-language", 
      "--name", 
      "--owner", 
      "--description", 
      "--distributor", 
      "--support-description", 
      "--support-email", 
      "--support-url", 
      "--product-type", 
      "--tags", 
      "--provisioning-artifact-parameters", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-create-provisioned-product-plan{
   $flags=(
      "--accept-language", 
      "--plan-name", 
      "--plan-type", 
      "--notification-arns", 
      "--path-id", 
      "--product-id", 
      "--provisioned-product-name", 
      "--provisioning-artifact-id", 
      "--provisioning-parameters", 
      "--idempotency-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-create-provisioning-artifact{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--parameters", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-create-service-action{
   $flags=(
      "--name", 
      "--definition-type", 
      "--definition", 
      "--description", 
      "--accept-language", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-create-tag-option{
   $flags=(
      "--key", 
      "--value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-delete-constraint{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-delete-portfolio{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-delete-portfolio-share{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--account-id", 
      "--organization-node", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-delete-product{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-delete-provisioned-product-plan{
   $flags=(
      "--accept-language", 
      "--plan-id", 
      "--ignore-errors", 
      "--no-ignore-errors", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-delete-provisioning-artifact{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--provisioning-artifact-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-delete-service-action{
   $flags=(
      "--id", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-delete-tag-option{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-constraint{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-copy-product-status{
   $flags=(
      "--accept-language", 
      "--copy-product-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-portfolio{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-portfolio-share-status{
   $flags=(
      "--portfolio-share-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-product{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-product-as-admin{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-product-view{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-provisioned-product{
   $flags=(
      "--accept-language", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-provisioned-product-plan{
   $flags=(
      "--accept-language", 
      "--plan-id", 
      "--page-size", 
      "--page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-provisioning-artifact{
   $flags=(
      "--accept-language", 
      "--provisioning-artifact-id", 
      "--product-id", 
      "--verbose", 
      "--no-verbose", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-provisioning-parameters{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--provisioning-artifact-id", 
      "--path-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-record{
   $flags=(
      "--accept-language", 
      "--id", 
      "--page-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-service-action{
   $flags=(
      "--id", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-service-action-execution-parameters{
   $flags=(
      "--provisioned-product-id", 
      "--service-action-id", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-describe-tag-option{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-disable-aws-organizations-access{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-disassociate-budget-from-resource{
   $flags=(
      "--budget-name", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-disassociate-principal-from-portfolio{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--principal-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-disassociate-product-from-portfolio{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--portfolio-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-disassociate-service-action-from-provisioning-artifact{
   $flags=(
      "--product-id", 
      "--provisioning-artifact-id", 
      "--service-action-id", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-disassociate-tag-option-from-resource{
   $flags=(
      "--resource-id", 
      "--tag-option-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-enable-aws-organizations-access{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-execute-provisioned-product-plan{
   $flags=(
      "--accept-language", 
      "--plan-id", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-execute-provisioned-product-service-action{
   $flags=(
      "--provisioned-product-id", 
      "--service-action-id", 
      "--execute-token", 
      "--accept-language", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-generate{
   $flags=("");
   return $flags;
}
function Get-servicecatalog-get-aws-organizations-access-status{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-accepted-portfolio-shares{
   $flags=(
      "--accept-language", 
      "--page-size", 
      "--portfolio-share-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-budgets-for-resource{
   $flags=(
      "--accept-language", 
      "--resource-id", 
      "--page-size", 
      "--page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-constraints-for-portfolio{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--product-id", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-launch-paths{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-organization-portfolio-access{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--organization-node-type", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-portfolio-access{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--organization-parent-id", 
      "--page-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-portfolios{
   $flags=(
      "--accept-language", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-portfolios-for-product{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-principals-for-portfolio{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-provisioned-product-plans{
   $flags=(
      "--accept-language", 
      "--provision-product-id", 
      "--page-size", 
      "--access-level-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-provisioning-artifacts{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-provisioning-artifacts-for-service-action{
   $flags=(
      "--service-action-id", 
      "--page-size", 
      "--accept-language", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-record-history{
   $flags=(
      "--accept-language", 
      "--access-level-filter", 
      "--search-filter", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-resources-for-tag-option{
   $flags=(
      "--tag-option-id", 
      "--resource-type", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-service-actions{
   $flags=(
      "--accept-language", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-service-actions-for-provisioning-artifact{
   $flags=(
      "--product-id", 
      "--provisioning-artifact-id", 
      "--page-size", 
      "--accept-language", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-stack-instances-for-provisioned-product{
   $flags=(
      "--accept-language", 
      "--provisioned-product-id", 
      "--page-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-list-tag-options{
   $flags=(
      "--filters", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-provision-product{
   $flags=(
      "--filters", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-reject-portfolio-share{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--portfolio-share-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-scan-provisioned-products{
   $flags=(
      "--accept-language", 
      "--access-level-filter", 
      "--page-size", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-search-products{
   $flags=(
      "--accept-language", 
      "--filters", 
      "--page-size", 
      "--sort-by", 
      "--sort-order", 
      "--page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-search-products-as-admin{
   $flags=(
      "--accept-language", 
      "--portfolio-id", 
      "--filters", 
      "--sort-by", 
      "--sort-order", 
      "--page-size", 
      "--product-source", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-search-provisioned-products{
   $flags=(
      "--accept-language", 
      "--access-level-filter", 
      "--filters", 
      "--sort-by", 
      "--sort-order", 
      "--page-size", 
      "--page-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-terminate-provisioned-product{
   $flags=(
      "--provisioned-product-name", 
      "--provisioned-product-id", 
      "--terminate-token", 
      "--ignore-errors", 
      "--no-ignore-errors", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-update-constraint{
   $flags=(
      "--accept-language", 
      "--id", 
      "--description", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-update-portfolio{
   $flags=(
      "--accept-language", 
      "--id", 
      "--display-name", 
      "--description", 
      "--provider-name", 
      "--add-tags", 
      "--remove-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-update-product{
   $flags=(
      "--accept-language", 
      "--id", 
      "--name", 
      "--owner", 
      "--description", 
      "--distributor", 
      "--support-description", 
      "--support-email", 
      "--support-url", 
      "--add-tags", 
      "--remove-tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-update-provisioned-product{
   $flags=(
      "--accept-language", 
      "--provisioned-product-name", 
      "--provisioned-product-id", 
      "--product-id", 
      "--provisioning-artifact-id", 
      "--path-id", 
      "--provisioning-parameters", 
      "--provisioning-preferences", 
      "--tags", 
      "--update-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-update-provisioned-product-properties{
   $flags=(
      "--accept-language", 
      "--provisioned-product-id", 
      "--provisioned-product-properties", 
      "--idempotency-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-update-provisioning-artifact{
   $flags=(
      "--accept-language", 
      "--product-id", 
      "--provisioning-artifact-id", 
      "--name", 
      "--description", 
      "--active", 
      "--no-active", 
      "--guidance", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-update-service-action{
   $flags=(
      "--id", 
      "--name", 
      "--definition", 
      "--description", 
      "--accept-language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicecatalog-update-tag-option{
   $flags=(
      "--id", 
      "--value", 
      "--active", 
      "--no-active", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery{
   $commands=(
      "create-http-namespace", 
      "create-private-dns-namespace", 
      "create-public-dns-namespace", 
      "create-service", 
      "delete-namespace", 
      "delete-service", 
      "deregister-instance", 
      "discover-instances", 
      "get-instance", 
      "get-instances-health-status", 
      "get-namespace", 
      "get-operation", 
      "get-service", 
      "list-instances", 
      "list-namespaces", 
      "list-operations", 
      "list-services", 
      "register-instance", 
      "update-instance-custom-health-status", 
      "update-service"
    );
   return $commands;
}
function Get-servicediscovery-create-http-namespace{
   $flags=(
      "--name", 
      "--creator-request-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-create-private-dns-namespace{
   $flags=(
      "--name", 
      "--creator-request-id", 
      "--description", 
      "--vpc", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-create-public-dns-namespace{
   $flags=(
      "--name", 
      "--creator-request-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-create-service{
   $flags=(
      "--name", 
      "--namespace-id", 
      "--creator-request-id", 
      "--description", 
      "--dns-config", 
      "--health-check-config", 
      "--health-check-custom-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-delete-namespace{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-delete-service{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-deregister-instance{
   $flags=(
      "--service-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-discover-instances{
   $flags=(
      "--namespace-name", 
      "--service-name", 
      "--max-results", 
      "--query-parameters", 
      "--health-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-get-instance{
   $flags=(
      "--service-id", 
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-get-instances-health-status{
   $flags=(
      "--service-id", 
      "--instances", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-get-namespace{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-get-operation{
   $flags=(
      "--operation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-get-service{
   $flags=(
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-list-instances{
   $flags=(
      "--service-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-list-namespaces{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-list-operations{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-list-services{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-register-instance{
   $flags=(
      "--service-id", 
      "--instance-id", 
      "--creator-request-id", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-update-instance-custom-health-status{
   $flags=(
      "--service-id", 
      "--instance-id", 
      "--status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-servicediscovery-update-service{
   $flags=(
      "--id", 
      "--service", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses{
   $commands=(
      "clone-receipt-rule-set", 
      "create-configuration-set", 
      "create-configuration-set-event-destination", 
      "create-configuration-set-tracking-options", 
      "create-custom-verification-email-template", 
      "create-receipt-filter", 
      "create-receipt-rule", 
      "create-receipt-rule-set", 
      "create-template", 
      "delete-configuration-set", 
      "delete-configuration-set-event-destination", 
      "delete-configuration-set-tracking-options", 
      "delete-custom-verification-email-template", 
      "delete-identity", 
      "delete-identity-policy", 
      "delete-receipt-filter", 
      "delete-receipt-rule", 
      "delete-receipt-rule-set", 
      "delete-template", 
      "describe-active-receipt-rule-set", 
      "describe-configuration-set", 
      "describe-receipt-rule", 
      "describe-receipt-rule-set", 
      "get-account-sending-enabled", 
      "get-custom-verification-email-template", 
      "get-identity-dkim-attributes", 
      "get-identity-mail-from-domain-attributes", 
      "get-identity-notification-attributes", 
      "get-identity-policies", 
      "get-identity-verification-attributes", 
      "get-send-quota", 
      "get-send-statistics", 
      "get-template", 
      "list-configuration-sets", 
      "list-custom-verification-email-templates", 
      "list-identities", 
      "list-identity-policies", 
      "list-receipt-filters", 
      "list-receipt-rule-sets", 
      "list-templates", 
      "put-configuration-set-delivery-options", 
      "put-identity-policy", 
      "reorder-receipt-rule-set", 
      "send-bounce", 
      "send-bulk-templated-email", 
      "send-custom-verification-email", 
      "send-email", 
      "send-raw-email", 
      "send-templated-email", 
      "set-active-receipt-rule-set", 
      "set-identity-dkim-enabled", 
      "set-identity-feedback-forwarding-enabled", 
      "set-identity-headers-in-notifications-enabled", 
      "set-identity-mail-from-domain", 
      "set-identity-notification-topic", 
      "set-receipt-rule-position", 
      "test-render-template", 
      "update-account-sending-enabled", 
      "update-configuration-set-event-destination", 
      "update-configuration-set-reputation-metrics-enabled", 
      "update-configuration-set-sending-enabled", 
      "update-configuration-set-tracking-options", 
      "update-custom-verification-email-template", 
      "update-receipt-rule", 
      "update-template", 
      "verify-domain-dkim", 
      "verify-domain-identity", 
      "verify-email-identity", 
      "wait"
    );
   return $commands;
}
function Get-ses-clone-receipt-rule-set{
   $flags=(
      "--rule-set-name", 
      "--original-rule-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-create-configuration-set{
   $flags=(
      "--configuration-set", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-create-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-create-configuration-set-tracking-options{
   $flags=(
      "--configuration-set-name", 
      "--tracking-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-create-custom-verification-email-template{
   $flags=(
      "--template-name", 
      "--from-email-address", 
      "--template-subject", 
      "--template-content", 
      "--success-redirection-url", 
      "--failure-redirection-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-create-receipt-filter{
   $flags=(
      "--filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-create-receipt-rule{
   $flags=(
      "--rule-set-name", 
      "--after", 
      "--rule", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-create-receipt-rule-set{
   $flags=(
      "--rule-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-create-template{
   $flags=(
      "--template", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-configuration-set-tracking-options{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-custom-verification-email-template{
   $flags=(
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-identity{
   $flags=(
      "--identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-identity-policy{
   $flags=(
      "--identity", 
      "--policy-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-receipt-filter{
   $flags=(
      "--filter-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-receipt-rule{
   $flags=(
      "--rule-set-name", 
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-receipt-rule-set{
   $flags=(
      "--rule-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-delete-template{
   $flags=(
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-describe-active-receipt-rule-set{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-describe-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--configuration-set-attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-describe-receipt-rule{
   $flags=(
      "--rule-set-name", 
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-describe-receipt-rule-set{
   $flags=(
      "--rule-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-account-sending-enabled{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-custom-verification-email-template{
   $flags=(
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-identity-dkim-attributes{
   $flags=(
      "--identities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-identity-mail-from-domain-attributes{
   $flags=(
      "--identities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-identity-notification-attributes{
   $flags=(
      "--identities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-identity-policies{
   $flags=(
      "--identity", 
      "--policy-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-identity-verification-attributes{
   $flags=(
      "--identities", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-send-quota{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-send-statistics{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-get-template{
   $flags=(
      "--template-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-list-configuration-sets{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-list-custom-verification-email-templates{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-list-identities{
   $flags=(
      "--identity-type", 
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-list-identity-policies{
   $flags=(
      "--identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-list-receipt-filters{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-list-receipt-rule-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-list-templates{
   $flags=(
      "--max-items", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-put-configuration-set-delivery-options{
   $flags=(
      "--configuration-set-name", 
      "--delivery-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-put-identity-policy{
   $flags=(
      "--identity", 
      "--policy-name", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-reorder-receipt-rule-set{
   $flags=(
      "--rule-set-name", 
      "--rule-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-send-bounce{
   $flags=(
      "--original-message-id", 
      "--bounce-sender", 
      "--explanation", 
      "--message-dsn", 
      "--bounced-recipient-info-list", 
      "--bounce-sender-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-send-bulk-templated-email{
   $flags=(
      "--source", 
      "--source-arn", 
      "--reply-to-addresses", 
      "--return-path", 
      "--return-path-arn", 
      "--configuration-set-name", 
      "--default-tags", 
      "--template", 
      "--template-arn", 
      "--default-template-data", 
      "--destinations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-send-custom-verification-email{
   $flags=(
      "--email-address", 
      "--template-name", 
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-send-email{
   $flags=(
      "--destination", 
      "--message", 
      "--reply-to-addresses", 
      "--return-path", 
      "--source-arn", 
      "--return-path-arn", 
      "--tags", 
      "--configuration-set-name", 
      "--from", 
      "--to", 
      "--cc", 
      "--bcc", 
      "--subject", 
      "--text", 
      "--html", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-send-raw-email{
   $flags=(
      "--source", 
      "--destinations", 
      "--raw-message", 
      "--from-arn", 
      "--source-arn", 
      "--return-path-arn", 
      "--tags", 
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-send-templated-email{
   $flags=(
      "--source", 
      "--destination", 
      "--reply-to-addresses", 
      "--return-path", 
      "--source-arn", 
      "--return-path-arn", 
      "--tags", 
      "--configuration-set-name", 
      "--template", 
      "--template-arn", 
      "--template-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-set-active-receipt-rule-set{
   $flags=(
      "--rule-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-set-identity-dkim-enabled{
   $flags=(
      "--identity", 
      "--dkim-enabled", 
      "--no-dkim-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-set-identity-feedback-forwarding-enabled{
   $flags=(
      "--identity", 
      "--forwarding-enabled", 
      "--no-forwarding-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-set-identity-headers-in-notifications-enabled{
   $flags=(
      "--identity", 
      "--notification-type", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-set-identity-mail-from-domain{
   $flags=(
      "--identity", 
      "--mail-from-domain", 
      "--behavior-on-mx-failure", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-set-identity-notification-topic{
   $flags=(
      "--identity", 
      "--notification-type", 
      "--sns-topic", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-set-receipt-rule-position{
   $flags=(
      "--rule-set-name", 
      "--rule-name", 
      "--after", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-test-render-template{
   $flags=(
      "--template-name", 
      "--template-data", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-update-account-sending-enabled{
   $flags=(
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-update-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-update-configuration-set-reputation-metrics-enabled{
   $flags=(
      "--configuration-set-name", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-update-configuration-set-sending-enabled{
   $flags=(
      "--configuration-set-name", 
      "--enabled", 
      "--no-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-update-configuration-set-tracking-options{
   $flags=(
      "--configuration-set-name", 
      "--tracking-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-update-custom-verification-email-template{
   $flags=(
      "--template-name", 
      "--from-email-address", 
      "--template-subject", 
      "--template-content", 
      "--success-redirection-url", 
      "--failure-redirection-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-update-receipt-rule{
   $flags=(
      "--rule-set-name", 
      "--rule", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-update-template{
   $flags=(
      "--template", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-verify-domain-dkim{
   $flags=(
      "--domain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-verify-domain-identity{
   $flags=(
      "--domain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-verify-email-identity{
   $flags=(
      "--email-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ses-wait{
   $flags=("");
   return $flags;
}
function Get-sesv2{
   $commands=(
      "create-configuration-set", 
      "create-configuration-set-event-destination", 
      "create-dedicated-ip-pool", 
      "create-deliverability-test-report", 
      "create-email-identity", 
      "delete-configuration-set", 
      "delete-configuration-set-event-destination", 
      "delete-dedicated-ip-pool", 
      "delete-email-identity", 
      "delete-suppressed-destination", 
      "get-account", 
      "get-blacklist-reports", 
      "get-configuration-set", 
      "get-configuration-set-event-destinations", 
      "get-dedicated-ip", 
      "get-dedicated-ips", 
      "get-deliverability-dashboard-options", 
      "get-deliverability-test-report", 
      "get-domain-deliverability-campaign", 
      "get-domain-statistics-report", 
      "get-email-identity", 
      "get-suppressed-destination", 
      "list-configuration-sets", 
      "list-dedicated-ip-pools", 
      "list-deliverability-test-reports", 
      "list-domain-deliverability-campaigns", 
      "list-email-identities", 
      "list-suppressed-destinations", 
      "list-tags-for-resource", 
      "put-account-dedicated-ip-warmup-attributes", 
      "put-account-sending-attributes", 
      "put-account-suppression-attributes", 
      "put-configuration-set-delivery-options", 
      "put-configuration-set-reputation-options", 
      "put-configuration-set-sending-options", 
      "put-configuration-set-suppression-options", 
      "put-configuration-set-tracking-options", 
      "put-dedicated-ip-in-pool", 
      "put-dedicated-ip-warmup-attributes", 
      "put-deliverability-dashboard-option", 
      "put-email-identity-dkim-attributes", 
      "put-email-identity-dkim-signing-attributes", 
      "put-email-identity-feedback-attributes", 
      "put-email-identity-mail-from-attributes", 
      "put-suppressed-destination", 
      "send-email", 
      "tag-resource", 
      "untag-resource", 
      "update-configuration-set-event-destination"
    );
   return $commands;
}
function Get-sesv2-create-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--tracking-options", 
      "--delivery-options", 
      "--reputation-options", 
      "--sending-options", 
      "--tags", 
      "--suppression-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-create-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination-name", 
      "--event-destination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-create-dedicated-ip-pool{
   $flags=(
      "--pool-name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-create-deliverability-test-report{
   $flags=(
      "--report-name", 
      "--from-email-address", 
      "--content", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-create-email-identity{
   $flags=(
      "--email-identity", 
      "--tags", 
      "--dkim-signing-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-delete-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-delete-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-delete-dedicated-ip-pool{
   $flags=(
      "--pool-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-delete-email-identity{
   $flags=(
      "--email-identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-delete-suppressed-destination{
   $flags=(
      "--email-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-blacklist-reports{
   $flags=(
      "--blacklist-item-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-configuration-set{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-configuration-set-event-destinations{
   $flags=(
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-dedicated-ip{
   $flags=(
      "--ip", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-dedicated-ips{
   $flags=(
      "--pool-name", 
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-deliverability-dashboard-options{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-deliverability-test-report{
   $flags=(
      "--report-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-domain-deliverability-campaign{
   $flags=(
      "--campaign-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-domain-statistics-report{
   $flags=(
      "--domain", 
      "--start-date", 
      "--end-date", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-email-identity{
   $flags=(
      "--email-identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-get-suppressed-destination{
   $flags=(
      "--email-address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-list-configuration-sets{
   $flags=(
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-list-dedicated-ip-pools{
   $flags=(
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-list-deliverability-test-reports{
   $flags=(
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-list-domain-deliverability-campaigns{
   $flags=(
      "--start-date", 
      "--end-date", 
      "--subscribed-domain", 
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-list-email-identities{
   $flags=(
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-list-suppressed-destinations{
   $flags=(
      "--reasons", 
      "--start-date", 
      "--end-date", 
      "--next-token", 
      "--page-size", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-account-dedicated-ip-warmup-attributes{
   $flags=(
      "--auto-warmup-enabled", 
      "--no-auto-warmup-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-account-sending-attributes{
   $flags=(
      "--sending-enabled", 
      "--no-sending-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-account-suppression-attributes{
   $flags=(
      "--suppressed-reasons", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-configuration-set-delivery-options{
   $flags=(
      "--configuration-set-name", 
      "--tls-policy", 
      "--sending-pool-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-configuration-set-reputation-options{
   $flags=(
      "--configuration-set-name", 
      "--reputation-metrics-enabled", 
      "--no-reputation-metrics-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-configuration-set-sending-options{
   $flags=(
      "--configuration-set-name", 
      "--sending-enabled", 
      "--no-sending-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-configuration-set-suppression-options{
   $flags=(
      "--configuration-set-name", 
      "--suppressed-reasons", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-configuration-set-tracking-options{
   $flags=(
      "--configuration-set-name", 
      "--custom-redirect-domain", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-dedicated-ip-in-pool{
   $flags=(
      "--ip", 
      "--destination-pool-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-dedicated-ip-warmup-attributes{
   $flags=(
      "--ip", 
      "--warmup-percentage", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-deliverability-dashboard-option{
   $flags=(
      "--dashboard-enabled", 
      "--no-dashboard-enabled", 
      "--subscribed-domains", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-email-identity-dkim-attributes{
   $flags=(
      "--email-identity", 
      "--signing-enabled", 
      "--no-signing-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-email-identity-dkim-signing-attributes{
   $flags=(
      "--email-identity", 
      "--signing-attributes-origin", 
      "--signing-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-email-identity-feedback-attributes{
   $flags=(
      "--email-identity", 
      "--email-forwarding-enabled", 
      "--no-email-forwarding-enabled", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-email-identity-mail-from-attributes{
   $flags=(
      "--email-identity", 
      "--mail-from-domain", 
      "--behavior-on-mx-failure", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-put-suppressed-destination{
   $flags=(
      "--email-address", 
      "--reason", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-send-email{
   $flags=(
      "--from-email-address", 
      "--destination", 
      "--reply-to-addresses", 
      "--feedback-forwarding-email-address", 
      "--content", 
      "--email-tags", 
      "--configuration-set-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sesv2-update-configuration-set-event-destination{
   $flags=(
      "--configuration-set-name", 
      "--event-destination-name", 
      "--event-destination", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield{
   $commands=(
      "associate-drt-log-bucket", 
      "associate-drt-role", 
      "associate-health-check", 
      "create-protection", 
      "create-subscription", 
      "delete-protection", 
      "describe-attack", 
      "describe-drt-access", 
      "describe-emergency-contact-settings", 
      "describe-protection", 
      "describe-subscription", 
      "disassociate-drt-log-bucket", 
      "disassociate-drt-role", 
      "disassociate-health-check", 
      "get-subscription-state", 
      "list-attacks", 
      "list-protections", 
      "update-emergency-contact-settings", 
      "update-subscription"
    );
   return $commands;
}
function Get-shield-associate-drt-log-bucket{
   $flags=(
      "--log-bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-associate-drt-role{
   $flags=(
      "--role-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-associate-health-check{
   $flags=(
      "--protection-id", 
      "--health-check-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-create-protection{
   $flags=(
      "--name", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-create-subscription{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-delete-protection{
   $flags=(
      "--protection-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-describe-attack{
   $flags=(
      "--attack-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-describe-drt-access{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-describe-emergency-contact-settings{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-describe-protection{
   $flags=(
      "--protection-id", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-describe-subscription{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-disassociate-drt-log-bucket{
   $flags=(
      "--log-bucket", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-disassociate-drt-role{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-disassociate-health-check{
   $flags=(
      "--protection-id", 
      "--health-check-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-get-subscription-state{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-list-attacks{
   $flags=(
      "--resource-arns", 
      "--start-time", 
      "--end-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-list-protections{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-update-emergency-contact-settings{
   $flags=(
      "--emergency-contact-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-shield-update-subscription{
   $flags=(
      "--auto-renew", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer{
   $commands=(
      "cancel-signing-profile", 
      "describe-signing-job", 
      "get-signing-platform", 
      "get-signing-profile", 
      "list-signing-jobs", 
      "list-signing-platforms", 
      "list-signing-profiles", 
      "list-tags-for-resource", 
      "put-signing-profile", 
      "start-signing-job", 
      "tag-resource", 
      "untag-resource", 
      "wait"
    );
   return $commands;
}
function Get-signer-cancel-signing-profile{
   $flags=(
      "--profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-describe-signing-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-get-signing-platform{
   $flags=(
      "--platform-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-get-signing-profile{
   $flags=(
      "--profile-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-list-signing-jobs{
   $flags=(
      "--status", 
      "--platform-id", 
      "--requested-by", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-list-signing-platforms{
   $flags=(
      "--category", 
      "--partner", 
      "--target", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-list-signing-profiles{
   $flags=(
      "--include-canceled", 
      "--no-include-canceled", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-put-signing-profile{
   $flags=(
      "--profile-name", 
      "--signing-material", 
      "--platform-id", 
      "--overrides", 
      "--signing-parameters", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-start-signing-job{
   $flags=(
      "--source", 
      "--destination", 
      "--profile-name", 
      "--client-request-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-signer-wait{
   $flags=("");
   return $flags;
}
function Get-sms{
   $commands=(
      "create-app", 
      "create-replication-job", 
      "delete-app", 
      "delete-app-launch-configuration", 
      "delete-app-replication-configuration", 
      "delete-replication-job", 
      "delete-server-catalog", 
      "disassociate-connector", 
      "generate-change-set", 
      "generate-template", 
      "get-app", 
      "get-app-launch-configuration", 
      "get-app-replication-configuration", 
      "get-connectors", 
      "get-replication-jobs", 
      "get-replication-runs", 
      "get-servers", 
      "import-server-catalog", 
      "launch-app", 
      "list-apps", 
      "put-app-launch-configuration", 
      "put-app-replication-configuration", 
      "start-app-replication", 
      "start-on-demand-replication-run", 
      "stop-app-replication", 
      "terminate-app", 
      "update-app", 
      "update-replication-job"
    );
   return $commands;
}
function Get-sms-create-app{
   $flags=(
      "--name", 
      "--description", 
      "--role-name", 
      "--client-token", 
      "--server-groups", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-create-replication-job{
   $flags=(
      "--server-id", 
      "--seed-replication-time", 
      "--frequency", 
      "--run-once", 
      "--no-run-once", 
      "--license-type", 
      "--role-name", 
      "--description", 
      "--number-of-recent-amis-to-keep", 
      "--encrypted", 
      "--no-encrypted", 
      "--kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-delete-app{
   $flags=(
      "--app-id", 
      "--force-stop-app-replication", 
      "--no-force-stop-app-replication", 
      "--force-terminate-app", 
      "--no-force-terminate-app", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-delete-app-launch-configuration{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-delete-app-replication-configuration{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-delete-replication-job{
   $flags=(
      "--replication-job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-delete-server-catalog{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-disassociate-connector{
   $flags=(
      "--connector-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-generate-change-set{
   $flags=(
      "--app-id", 
      "--changeset-format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-generate-template{
   $flags=(
      "--app-id", 
      "--template-format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-get-app{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-get-app-launch-configuration{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-get-app-replication-configuration{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-get-connectors{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-get-replication-jobs{
   $flags=(
      "--replication-job-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-get-replication-runs{
   $flags=(
      "--replication-job-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-get-servers{
   $flags=(
      "--vm-server-address-list", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-import-server-catalog{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-launch-app{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-list-apps{
   $flags=(
      "--app-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-put-app-launch-configuration{
   $flags=(
      "--app-id", 
      "--role-name", 
      "--server-group-launch-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-put-app-replication-configuration{
   $flags=(
      "--app-id", 
      "--server-group-replication-configurations", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-start-app-replication{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-start-on-demand-replication-run{
   $flags=(
      "--replication-job-id", 
      "--description", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-stop-app-replication{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-terminate-app{
   $flags=(
      "--app-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-update-app{
   $flags=(
      "--app-id", 
      "--name", 
      "--description", 
      "--role-name", 
      "--server-groups", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sms-update-replication-job{
   $flags=(
      "--replication-job-id", 
      "--frequency", 
      "--next-replication-run-start-time", 
      "--license-type", 
      "--role-name", 
      "--description", 
      "--number-of-recent-amis-to-keep", 
      "--encrypted", 
      "--no-encrypted", 
      "--kms-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball{
   $commands=(
      "cancel-cluster", 
      "cancel-job", 
      "create-address", 
      "create-cluster", 
      "create-job", 
      "describe-address", 
      "describe-addresses", 
      "describe-cluster", 
      "describe-job", 
      "get-job-manifest", 
      "get-job-unlock-code", 
      "get-snowball-usage", 
      "get-software-updates", 
      "list-cluster-jobs", 
      "list-clusters", 
      "list-compatible-images", 
      "list-jobs", 
      "update-cluster", 
      "update-job"
    );
   return $commands;
}
function Get-snowball-cancel-cluster{
   $flags=(
      "--cluster-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-cancel-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-create-address{
   $flags=(
      "--address", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-create-cluster{
   $flags=(
      "--job-type", 
      "--resources", 
      "--description", 
      "--address-id", 
      "--kms-key-arn", 
      "--role-arn", 
      "--snowball-type", 
      "--shipping-option", 
      "--notification", 
      "--forwarding-address-id", 
      "--tax-documents", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-create-job{
   $flags=(
      "--job-type", 
      "--resources", 
      "--description", 
      "--address-id", 
      "--kms-key-arn", 
      "--role-arn", 
      "--snowball-capacity-preference", 
      "--shipping-option", 
      "--notification", 
      "--cluster-id", 
      "--snowball-type", 
      "--forwarding-address-id", 
      "--tax-documents", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-describe-address{
   $flags=(
      "--address-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-describe-addresses{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-describe-cluster{
   $flags=(
      "--cluster-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-describe-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-get-job-manifest{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-get-job-unlock-code{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-get-snowball-usage{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-get-software-updates{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-list-cluster-jobs{
   $flags=(
      "--cluster-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-list-clusters{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-list-compatible-images{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-list-jobs{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-update-cluster{
   $flags=(
      "--cluster-id", 
      "--role-arn", 
      "--description", 
      "--resources", 
      "--address-id", 
      "--shipping-option", 
      "--notification", 
      "--forwarding-address-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-snowball-update-job{
   $flags=(
      "--job-id", 
      "--role-arn", 
      "--notification", 
      "--resources", 
      "--address-id", 
      "--shipping-option", 
      "--description", 
      "--snowball-capacity-preference", 
      "--forwarding-address-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns{
   $commands=(
      "add-permission", 
      "check-if-phone-number-is-opted-out", 
      "confirm-subscription", 
      "create-platform-application", 
      "create-platform-endpoint", 
      "create-topic", 
      "delete-endpoint", 
      "delete-platform-application", 
      "delete-topic", 
      "get-endpoint-attributes", 
      "get-platform-application-attributes", 
      "get-sms-attributes", 
      "get-subscription-attributes", 
      "get-topic-attributes", 
      "list-endpoints-by-platform-application", 
      "list-phone-numbers-opted-out", 
      "list-platform-applications", 
      "list-subscriptions", 
      "list-subscriptions-by-topic", 
      "list-tags-for-resource", 
      "list-topics", 
      "opt-in-phone-number", 
      "publish", 
      "remove-permission", 
      "set-endpoint-attributes", 
      "set-platform-application-attributes", 
      "set-sms-attributes", 
      "set-subscription-attributes", 
      "set-topic-attributes", 
      "subscribe", 
      "tag-resource", 
      "unsubscribe", 
      "untag-resource"
    );
   return $commands;
}
function Get-sns-add-permission{
   $flags=(
      "--topic-arn", 
      "--label", 
      "--aws-account-id", 
      "--action-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-check-if-phone-number-is-opted-out{
   $flags=(
      "--phone-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-confirm-subscription{
   $flags=(
      "--topic-arn", 
      "--token", 
      "--authenticate-on-unsubscribe", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-create-platform-application{
   $flags=(
      "--name", 
      "--platform", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-create-platform-endpoint{
   $flags=(
      "--platform-application-arn", 
      "--token", 
      "--custom-user-data", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-create-topic{
   $flags=(
      "--name", 
      "--attributes", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-delete-endpoint{
   $flags=(
      "--endpoint-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-delete-platform-application{
   $flags=(
      "--platform-application-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-delete-topic{
   $flags=(
      "--topic-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-get-endpoint-attributes{
   $flags=(
      "--endpoint-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-get-platform-application-attributes{
   $flags=(
      "--platform-application-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-get-sms-attributes{
   $flags=(
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-get-subscription-attributes{
   $flags=(
      "--subscription-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-get-topic-attributes{
   $flags=(
      "--topic-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-list-endpoints-by-platform-application{
   $flags=(
      "--platform-application-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-list-phone-numbers-opted-out{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-list-platform-applications{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-list-subscriptions{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-list-subscriptions-by-topic{
   $flags=(
      "--topic-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-list-topics{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-opt-in-phone-number{
   $flags=(
      "--phone-number", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-publish{
   $flags=(
      "--topic-arn", 
      "--target-arn", 
      "--phone-number", 
      "--message", 
      "--subject", 
      "--message-structure", 
      "--message-attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-remove-permission{
   $flags=(
      "--topic-arn", 
      "--label", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-set-endpoint-attributes{
   $flags=(
      "--endpoint-arn", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-set-platform-application-attributes{
   $flags=(
      "--platform-application-arn", 
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-set-sms-attributes{
   $flags=(
      "--attributes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-set-subscription-attributes{
   $flags=(
      "--subscription-arn", 
      "--attribute-name", 
      "--attribute-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-set-topic-attributes{
   $flags=(
      "--topic-arn", 
      "--attribute-name", 
      "--attribute-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-subscribe{
   $flags=(
      "--topic-arn", 
      "--protocol", 
      "--attributes", 
      "--return-subscription-arn", 
      "--no-return-subscription-arn", 
      "--notification-endpoint", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-unsubscribe{
   $flags=(
      "--subscription-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sns-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs{
   $commands=(
      "add-permission", 
      "change-message-visibility", 
      "change-message-visibility-batch", 
      "create-queue", 
      "delete-message", 
      "delete-message-batch", 
      "delete-queue", 
      "get-queue-attributes", 
      "get-queue-url", 
      "list-dead-letter-source-queues", 
      "list-queue-tags", 
      "list-queues", 
      "purge-queue", 
      "receive-message", 
      "remove-permission", 
      "send-message", 
      "send-message-batch", 
      "set-queue-attributes", 
      "tag-queue", 
      "untag-queue"
    );
   return $commands;
}
function Get-sqs-add-permission{
   $flags=(
      "--queue-url", 
      "--label", 
      "--aws-account-ids", 
      "--actions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-change-message-visibility{
   $flags=(
      "--queue-url", 
      "--receipt-handle", 
      "--visibility-timeout", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-change-message-visibility-batch{
   $flags=(
      "--queue-url", 
      "--entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-create-queue{
   $flags=(
      "--queue-name", 
      "--attributes", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-delete-message{
   $flags=(
      "--queue-url", 
      "--receipt-handle", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-delete-message-batch{
   $flags=(
      "--queue-url", 
      "--entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-delete-queue{
   $flags=(
      "--queue-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-get-queue-attributes{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-get-queue-url{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-list-dead-letter-source-queues{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-list-queue-tags{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-list-queues{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-purge-queue{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-receive-message{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-remove-permission{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-send-message{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-send-message-batch{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-set-queue-attributes{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-tag-queue{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sqs-untag-queue{
   $flags=(
      "--queue-url", 
      "--attribute-names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm{
   $commands=(
      "add-tags-to-resource", 
      "cancel-command", 
      "cancel-maintenance-window-execution", 
      "create-activation", 
      "create-association", 
      "create-association-batch", 
      "create-document", 
      "create-maintenance-window", 
      "create-ops-item", 
      "create-patch-baseline", 
      "create-resource-data-sync", 
      "delete-activation", 
      "delete-association", 
      "delete-document", 
      "delete-inventory", 
      "delete-maintenance-window", 
      "delete-parameter", 
      "delete-parameters", 
      "delete-patch-baseline", 
      "delete-resource-data-sync", 
      "deregister-managed-instance", 
      "deregister-patch-baseline-for-patch-group", 
      "deregister-target-from-maintenance-window", 
      "deregister-task-from-maintenance-window", 
      "describe-activations", 
      "describe-association", 
      "describe-association-execution-targets", 
      "describe-association-executions", 
      "describe-automation-executions", 
      "describe-automation-step-executions", 
      "describe-available-patches", 
      "describe-document", 
      "describe-document-permission", 
      "describe-effective-instance-associations", 
      "describe-effective-patches-for-patch-baseline", 
      "describe-instance-associations-status", 
      "describe-instance-information", 
      "describe-instance-patch-states", 
      "describe-instance-patch-states-for-patch-group", 
      "describe-instance-patches", 
      "describe-inventory-deletions", 
      "describe-maintenance-window-execution-task-invocations", 
      "describe-maintenance-window-execution-tasks", 
      "describe-maintenance-window-executions", 
      "describe-maintenance-window-schedule", 
      "describe-maintenance-window-targets", 
      "describe-maintenance-window-tasks", 
      "describe-maintenance-windows", 
      "describe-maintenance-windows-for-target", 
      "describe-ops-items", 
      "describe-parameters", 
      "describe-patch-baselines", 
      "describe-patch-group-state", 
      "describe-patch-groups", 
      "describe-patch-properties", 
      "describe-sessions", 
      "get-automation-execution", 
      "get-calendar-state", 
      "get-command-invocation", 
      "get-connection-status", 
      "get-default-patch-baseline", 
      "get-deployable-patch-snapshot-for-instance", 
      "get-document", 
      "get-inventory", 
      "get-inventory-schema", 
      "get-maintenance-window", 
      "get-maintenance-window-execution", 
      "get-maintenance-window-execution-task", 
      "get-maintenance-window-execution-task-invocation", 
      "get-maintenance-window-task", 
      "get-ops-item", 
      "get-ops-summary", 
      "get-parameter", 
      "get-parameter-history", 
      "get-parameters", 
      "get-parameters-by-path", 
      "get-patch-baseline", 
      "get-patch-baseline-for-patch-group", 
      "get-service-setting", 
      "label-parameter-version", 
      "list-association-versions", 
      "list-associations", 
      "list-command-invocations", 
      "list-commands", 
      "list-compliance-items", 
      "list-compliance-summaries", 
      "list-document-versions", 
      "list-documents", 
      "list-inventory-entries", 
      "list-resource-compliance-summaries", 
      "list-resource-data-sync", 
      "list-tags-for-resource", 
      "modify-document-permission", 
      "put-compliance-items", 
      "put-inventory", 
      "put-parameter", 
      "register-default-patch-baseline", 
      "register-patch-baseline-for-patch-group", 
      "register-target-with-maintenance-window", 
      "register-task-with-maintenance-window", 
      "remove-tags-from-resource", 
      "reset-service-setting", 
      "resume-session", 
      "send-automation-signal", 
      "send-command", 
      "start-associations-once", 
      "start-automation-execution", 
      "start-session", 
      "stop-automation-execution", 
      "terminate-session", 
      "update-association", 
      "update-association-status", 
      "update-document", 
      "update-document-default-version", 
      "update-maintenance-window", 
      "update-maintenance-window-target", 
      "update-maintenance-window-task", 
      "update-managed-instance-role", 
      "update-ops-item", 
      "update-patch-baseline", 
      "update-resource-data-sync", 
      "update-service-setting"
    );
   return $commands;
}
function Get-ssm-add-tags-to-resource{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-cancel-command{
   $flags=(
      "--command-id", 
      "--instance-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-cancel-maintenance-window-execution{
   $flags=(
      "--window-execution-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-create-activation{
   $flags=(
      "--description", 
      "--default-instance-name", 
      "--iam-role", 
      "--registration-limit", 
      "--expiration-date", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-create-association{
   $flags=(
      "--name", 
      "--document-version", 
      "--instance-id", 
      "--parameters", 
      "--targets", 
      "--schedule-expression", 
      "--output-location", 
      "--association-name", 
      "--automation-target-parameter-name", 
      "--max-errors", 
      "--max-concurrency", 
      "--compliance-severity", 
      "--sync-compliance", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-create-association-batch{
   $flags=(
      "--entries", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-create-document{
   $flags=(
      "--content", 
      "--requires", 
      "--attachments", 
      "--name", 
      "--version-name", 
      "--document-type", 
      "--document-format", 
      "--target-type", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-create-maintenance-window{
   $flags=(
      "--name", 
      "--description", 
      "--start-date", 
      "--end-date", 
      "--schedule", 
      "--schedule-timezone", 
      "--duration", 
      "--cutoff", 
      "--allow-unassociated-targets", 
      "--no-allow-unassociated-targets", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-create-ops-item{
   $flags=(
      "--description", 
      "--operational-data", 
      "--notifications", 
      "--priority", 
      "--related-ops-items", 
      "--source", 
      "--title", 
      "--tags", 
      "--category", 
      "--severity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-create-patch-baseline{
   $flags=(
      "--operating-system", 
      "--name", 
      "--global-filters", 
      "--approval-rules", 
      "--approved-patches", 
      "--approved-patches-compliance-level", 
      "--approved-patches-enable-non-security", 
      "--no-approved-patches-enable-non-security", 
      "--rejected-patches", 
      "--rejected-patches-action", 
      "--description", 
      "--sources", 
      "--client-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-create-resource-data-sync{
   $flags=(
      "--sync-name", 
      "--s3-destination", 
      "--sync-type", 
      "--sync-source", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-activation{
   $flags=(
      "--activation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-association{
   $flags=(
      "--name", 
      "--instance-id", 
      "--association-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-document{
   $flags=(
      "--name", 
      "--document-version", 
      "--version-name", 
      "--force", 
      "--no-force", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-inventory{
   $flags=(
      "--type-name", 
      "--schema-delete-option", 
      "--dry-run", 
      "--no-dry-run", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-maintenance-window{
   $flags=(
      "--window-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-parameter{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-parameters{
   $flags=(
      "--names", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-patch-baseline{
   $flags=(
      "--baseline-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-delete-resource-data-sync{
   $flags=(
      "--sync-name", 
      "--sync-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-deregister-managed-instance{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-deregister-patch-baseline-for-patch-group{
   $flags=(
      "--baseline-id", 
      "--patch-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-deregister-target-from-maintenance-window{
   $flags=(
      "--window-id", 
      "--window-target-id", 
      "--safe", 
      "--no-safe", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-deregister-task-from-maintenance-window{
   $flags=(
      "--window-id", 
      "--window-task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-activations{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-association{
   $flags=(
      "--name", 
      "--instance-id", 
      "--association-id", 
      "--association-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-association-execution-targets{
   $flags=(
      "--association-id", 
      "--execution-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-association-executions{
   $flags=(
      "--association-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-automation-executions{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-automation-step-executions{
   $flags=(
      "--automation-execution-id", 
      "--filters", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-available-patches{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-document{
   $flags=(
      "--name", 
      "--document-version", 
      "--version-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-document-permission{
   $flags=(
      "--name", 
      "--permission-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-effective-instance-associations{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-effective-patches-for-patch-baseline{
   $flags=(
      "--baseline-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-instance-associations-status{
   $flags=(
      "--instance-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-instance-information{
   $flags=(
      "--instance-information-filter-list", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-instance-patch-states{
   $flags=(
      "--instance-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-instance-patch-states-for-patch-group{
   $flags=(
      "--patch-group", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-instance-patches{
   $flags=(
      "--instance-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-inventory-deletions{
   $flags=(
      "--deletion-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-maintenance-window-execution-task-invocations{
   $flags=(
      "--window-execution-id", 
      "--task-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-maintenance-window-execution-tasks{
   $flags=(
      "--window-execution-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-maintenance-window-executions{
   $flags=(
      "--window-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-maintenance-window-schedule{
   $flags=(
      "--window-id", 
      "--targets", 
      "--resource-type", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-maintenance-window-targets{
   $flags=(
      "--window-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-maintenance-window-tasks{
   $flags=(
      "--window-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-maintenance-windows{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-maintenance-windows-for-target{
   $flags=(
      "--targets", 
      "--resource-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-ops-items{
   $flags=(
      "--ops-item-filters", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-parameters{
   $flags=(
      "--filters", 
      "--parameter-filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-patch-baselines{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-patch-group-state{
   $flags=(
      "--patch-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-patch-groups{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-patch-properties{
   $flags=(
      "--operating-system", 
      "--property", 
      "--patch-set", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-describe-sessions{
   $flags=(
      "--state", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-automation-execution{
   $flags=(
      "--automation-execution-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-calendar-state{
   $flags=(
      "--calendar-names", 
      "--at-time", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-command-invocation{
   $flags=(
      "--command-id", 
      "--instance-id", 
      "--plugin-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-connection-status{
   $flags=(
      "--target", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-default-patch-baseline{
   $flags=(
      "--operating-system", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-deployable-patch-snapshot-for-instance{
   $flags=(
      "--instance-id", 
      "--snapshot-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-document{
   $flags=(
      "--name", 
      "--version-name", 
      "--document-version", 
      "--document-format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-inventory{
   $flags=(
      "--filters", 
      "--aggregators", 
      "--result-attributes", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-inventory-schema{
   $flags=(
      "--type-name", 
      "--aggregator", 
      "--no-aggregator", 
      "--sub-type", 
      "--no-sub-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-maintenance-window{
   $flags=(
      "--window-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-maintenance-window-execution{
   $flags=(
      "--window-execution-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-maintenance-window-execution-task{
   $flags=(
      "--window-execution-id", 
      "--task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-maintenance-window-execution-task-invocation{
   $flags=(
      "--window-execution-id", 
      "--task-id", 
      "--invocation-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-maintenance-window-task{
   $flags=(
      "--window-id", 
      "--window-task-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-ops-item{
   $flags=(
      "--ops-item-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-ops-summary{
   $flags=(
      "--sync-name", 
      "--filters", 
      "--aggregators", 
      "--result-attributes", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-parameter{
   $flags=(
      "--name", 
      "--with-decryption", 
      "--no-with-decryption", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-parameter-history{
   $flags=(
      "--name", 
      "--with-decryption", 
      "--no-with-decryption", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-parameters{
   $flags=(
      "--names", 
      "--with-decryption", 
      "--no-with-decryption", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-parameters-by-path{
   $flags=(
      "--path", 
      "--recursive", 
      "--no-recursive", 
      "--parameter-filters", 
      "--with-decryption", 
      "--no-with-decryption", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-patch-baseline{
   $flags=(
      "--baseline-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-patch-baseline-for-patch-group{
   $flags=(
      "--patch-group", 
      "--operating-system", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-get-service-setting{
   $flags=(
      "--setting-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-label-parameter-version{
   $flags=(
      "--name", 
      "--parameter-version", 
      "--labels", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-association-versions{
   $flags=(
      "--association-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-associations{
   $flags=(
      "--association-filter-list", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-command-invocations{
   $flags=(
      "--command-id", 
      "--instance-id", 
      "--filters", 
      "--details", 
      "--no-details", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-commands{
   $flags=(
      "--command-id", 
      "--instance-id", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-compliance-items{
   $flags=(
      "--filters", 
      "--resource-ids", 
      "--resource-types", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-compliance-summaries{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-document-versions{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-documents{
   $flags=(
      "--document-filter-list", 
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-inventory-entries{
   $flags=(
      "--instance-id", 
      "--type-name", 
      "--filters", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-resource-compliance-summaries{
   $flags=(
      "--filters", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-resource-data-sync{
   $flags=(
      "--sync-type", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-list-tags-for-resource{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-modify-document-permission{
   $flags=(
      "--name", 
      "--permission-type", 
      "--account-ids-to-add", 
      "--account-ids-to-remove", 
      "--shared-document-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-put-compliance-items{
   $flags=(
      "--resource-id", 
      "--resource-type", 
      "--compliance-type", 
      "--execution-summary", 
      "--items", 
      "--item-content-hash", 
      "--upload-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-put-inventory{
   $flags=(
      "--instance-id", 
      "--items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-put-parameter{
   $flags=(
      "--name", 
      "--description", 
      "--value", 
      "--type", 
      "--key-id", 
      "--overwrite", 
      "--no-overwrite", 
      "--allowed-pattern", 
      "--tags", 
      "--tier", 
      "--policies", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-register-default-patch-baseline{
   $flags=(
      "--baseline-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-register-patch-baseline-for-patch-group{
   $flags=(
      "--baseline-id", 
      "--patch-group", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-register-target-with-maintenance-window{
   $flags=(
      "--window-id", 
      "--resource-type", 
      "--targets", 
      "--owner-information", 
      "--name", 
      "--description", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-register-task-with-maintenance-window{
   $flags=(
      "--window-id", 
      "--targets", 
      "--task-arn", 
      "--service-role-arn", 
      "--task-type", 
      "--task-parameters", 
      "--task-invocation-parameters", 
      "--priority", 
      "--max-concurrency", 
      "--max-errors", 
      "--logging-info", 
      "--name", 
      "--description", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-remove-tags-from-resource{
   $flags=(
      "--resource-type", 
      "--resource-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-reset-service-setting{
   $flags=(
      "--setting-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-resume-session{
   $flags=(
      "--session-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-send-automation-signal{
   $flags=(
      "--automation-execution-id", 
      "--signal-type", 
      "--payload", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-send-command{
   $flags=(
      "--instance-ids", 
      "--targets", 
      "--document-name", 
      "--document-version", 
      "--document-hash", 
      "--document-hash-type", 
      "--timeout-seconds", 
      "--comment", 
      "--parameters", 
      "--output-s3-region", 
      "--output-s3-bucket-name", 
      "--output-s3-key-prefix", 
      "--max-concurrency", 
      "--max-errors", 
      "--service-role-arn", 
      "--notification-config", 
      "--cloud-watch-output-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-start-associations-once{
   $flags=(
      "--association-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-start-automation-execution{
   $flags=(
      "--document-name", 
      "--document-version", 
      "--parameters", 
      "--client-token", 
      "--mode", 
      "--target-parameter-name", 
      "--targets", 
      "--target-maps", 
      "--max-concurrency", 
      "--max-errors", 
      "--target-locations", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-start-session{
   $flags=(
      "--target", 
      "--document-name", 
      "--parameters", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-stop-automation-execution{
   $flags=(
      "--automation-execution-id", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-terminate-session{
   $flags=(
      "--session-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-association{
   $flags=(
      "--association-id", 
      "--parameters", 
      "--document-version", 
      "--schedule-expression", 
      "--output-location", 
      "--name", 
      "--targets", 
      "--association-name", 
      "--association-version", 
      "--automation-target-parameter-name", 
      "--max-errors", 
      "--max-concurrency", 
      "--compliance-severity", 
      "--sync-compliance", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-association-status{
   $flags=(
      "--name", 
      "--instance-id", 
      "--association-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-document{
   $flags=(
      "--content", 
      "--attachments", 
      "--name", 
      "--version-name", 
      "--document-version", 
      "--document-format", 
      "--target-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-document-default-version{
   $flags=(
      "--name", 
      "--document-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-maintenance-window{
   $flags=(
      "--window-id", 
      "--name", 
      "--description", 
      "--start-date", 
      "--end-date", 
      "--schedule", 
      "--schedule-timezone", 
      "--duration", 
      "--cutoff", 
      "--allow-unassociated-targets", 
      "--no-allow-unassociated-targets", 
      "--enabled", 
      "--no-enabled", 
      "--replace", 
      "--no-replace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-maintenance-window-target{
   $flags=(
      "--window-id", 
      "--window-target-id", 
      "--targets", 
      "--owner-information", 
      "--name", 
      "--description", 
      "--replace", 
      "--no-replace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-maintenance-window-task{
   $flags=(
      "--window-id", 
      "--window-task-id", 
      "--targets", 
      "--task-arn", 
      "--service-role-arn", 
      "--task-parameters", 
      "--task-invocation-parameters", 
      "--priority", 
      "--max-concurrency", 
      "--max-errors", 
      "--logging-info", 
      "--name", 
      "--description", 
      "--replace", 
      "--no-replace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-managed-instance-role{
   $flags=(
      "--instance-id", 
      "--iam-role", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-ops-item{
   $flags=(
      "--description", 
      "--operational-data", 
      "--operational-data-to-delete", 
      "--notifications", 
      "--priority", 
      "--related-ops-items", 
      "--status", 
      "--ops-item-id", 
      "--title", 
      "--category", 
      "--severity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-patch-baseline{
   $flags=(
      "--baseline-id", 
      "--name", 
      "--global-filters", 
      "--approval-rules", 
      "--approved-patches", 
      "--approved-patches-compliance-level", 
      "--approved-patches-enable-non-security", 
      "--no-approved-patches-enable-non-security", 
      "--rejected-patches", 
      "--rejected-patches-action", 
      "--description", 
      "--sources", 
      "--replace", 
      "--no-replace", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-resource-data-sync{
   $flags=(
      "--sync-name", 
      "--sync-type", 
      "--sync-source", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-ssm-update-service-setting{
   $flags=(
      "--setting-id", 
      "--setting-value", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sso{
   $commands=(
      "get-role-credentials", 
      "list-account-roles", 
      "list-accounts", 
      "logout"
    );
   return $commands;
}
function Get-sso-get-role-credentials{
   $flags=(
      "--role-name", 
      "--account-id", 
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sso-list-account-roles{
   $flags=(
      "--access-token", 
      "--account-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sso-list-accounts{
   $flags=(
      "--access-token", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sso-logout{
   $flags=(
      "--access-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sso-oidc{
   $commands=(
      "create-token", 
      "register-client", 
      "start-device-authorization"
    );
   return $commands;
}
function Get-sso-oidc-create-token{
   $flags=(
      "--client-id", 
      "--client-secret", 
      "--grant-type", 
      "--device-code", 
      "--code", 
      "--refresh-token", 
      "--scope", 
      "--redirect-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sso-oidc-register-client{
   $flags=(
      "--client-name", 
      "--client-type", 
      "--scopes", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sso-oidc-start-device-authorization{
   $flags=(
      "--client-id", 
      "--client-secret", 
      "--start-url", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps{
   $commands=(
      "create-activity", 
      "create-state-machine", 
      "delete-activity", 
      "delete-state-machine", 
      "describe-activity", 
      "describe-execution", 
      "describe-state-machine", 
      "describe-state-machine-for-execution", 
      "get-activity-task", 
      "get-execution-history", 
      "list-activities", 
      "list-executions", 
      "list-state-machines", 
      "list-tags-for-resource", 
      "send-task-failure", 
      "send-task-heartbeat", 
      "send-task-success", 
      "start-execution", 
      "stop-execution", 
      "tag-resource", 
      "untag-resource", 
      "update-state-machine"
    );
   return $commands;
}
function Get-steps-create-activity{
   $flags=(
      "--name", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-create-state-machine{
   $flags=(
      "--name", 
      "--definition", 
      "--role-arn", 
      "--type", 
      "--logging-configuration", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-delete-activity{
   $flags=(
      "--activity-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-delete-state-machine{
   $flags=(
      "--state-machine-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-describe-activity{
   $flags=(
      "--activity-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-describe-execution{
   $flags=(
      "--execution-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-describe-state-machine{
   $flags=(
      "--state-machine-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-describe-state-machine-for-execution{
   $flags=(
      "--execution-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-get-activity-task{
   $flags=(
      "--activity-arn", 
      "--worker-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-get-execution-history{
   $flags=(
      "--execution-arn", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-list-activities{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-list-executions{
   $flags=(
      "--state-machine-arn", 
      "--status-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-list-state-machines{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-send-task-failure{
   $flags=(
      "--task-token", 
      "--error", 
      "--cause", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-send-task-heartbeat{
   $flags=(
      "--task-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-send-task-success{
   $flags=(
      "--task-token", 
      "--task-output", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-start-execution{
   $flags=(
      "--state-machine-arn", 
      "--name", 
      "--input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-stop-execution{
   $flags=(
      "--execution-arn", 
      "--error", 
      "--cause", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-steps-update-state-machine{
   $flags=(
      "--state-machine-arn", 
      "--definition", 
      "--role-arn", 
      "--logging-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway{
   $commands=(
      "activate-gateway", 
      "add-cache", 
      "add-tags-to-resource", 
      "add-upload-buffer", 
      "add-working-storage", 
      "assign-tape-pool", 
      "attach-volume", 
      "cancel-archival", 
      "cancel-retrieval", 
      "create-cached-iscsi-volume", 
      "create-nfs-file-share", 
      "create-smb-file-share", 
      "create-snapshot", 
      "create-snapshot-from-volume-recovery-point", 
      "create-stored-iscsi-volume", 
      "create-tape-with-barcode", 
      "create-tapes", 
      "delete-automatic-tape-creation-policy", 
      "delete-bandwidth-rate-limit", 
      "delete-chap-credentials", 
      "delete-file-share", 
      "delete-gateway", 
      "delete-snapshot-schedule", 
      "delete-tape", 
      "delete-tape-archive", 
      "delete-volume", 
      "describe-availability-monitor-test", 
      "describe-bandwidth-rate-limit", 
      "describe-cache", 
      "describe-cached-iscsi-volumes", 
      "describe-chap-credentials", 
      "describe-gateway-information", 
      "describe-maintenance-start-time", 
      "describe-nfs-file-shares", 
      "describe-smb-file-shares", 
      "describe-smb-settings", 
      "describe-snapshot-schedule", 
      "describe-stored-iscsi-volumes", 
      "describe-tape-archives", 
      "describe-tape-recovery-points", 
      "describe-tapes", 
      "describe-upload-buffer", 
      "describe-vtl-devices", 
      "describe-working-storage", 
      "detach-volume", 
      "disable-gateway", 
      "join-domain", 
      "list-automatic-tape-creation-policies", 
      "list-file-shares", 
      "list-gateways", 
      "list-local-disks", 
      "list-tags-for-resource", 
      "list-tapes", 
      "list-volume-initiators", 
      "list-volume-recovery-points", 
      "list-volumes", 
      "notify-when-uploaded", 
      "refresh-cache", 
      "remove-tags-from-resource", 
      "reset-cache", 
      "retrieve-tape-archive", 
      "retrieve-tape-recovery-point", 
      "set-local-console-password", 
      "set-smb-guest-password", 
      "shutdown-gateway", 
      "start-availability-monitor-test", 
      "start-gateway", 
      "update-automatic-tape-creation-policy", 
      "update-bandwidth-rate-limit", 
      "update-chap-credentials", 
      "update-gateway-information", 
      "update-gateway-software-now", 
      "update-maintenance-start-time", 
      "update-nfs-file-share", 
      "update-smb-file-share", 
      "update-smb-security-strategy", 
      "update-snapshot-schedule", 
      "update-vtl-device-type"
    );
   return $commands;
}
function Get-storagegateway-activate-gateway{
   $flags=(
      "--activation-key", 
      "--gateway-name", 
      "--gateway-timezone", 
      "--gateway-region", 
      "--gateway-type", 
      "--tape-drive-type", 
      "--medium-changer-type", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-add-cache{
   $flags=(
      "--gateway-arn", 
      "--disk-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-add-tags-to-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-add-upload-buffer{
   $flags=(
      "--gateway-arn", 
      "--disk-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-add-working-storage{
   $flags=(
      "--gateway-arn", 
      "--disk-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-assign-tape-pool{
   $flags=(
      "--tape-arn", 
      "--pool-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-attach-volume{
   $flags=(
      "--gateway-arn", 
      "--target-name", 
      "--volume-arn", 
      "--network-interface-id", 
      "--disk-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-cancel-archival{
   $flags=(
      "--gateway-arn", 
      "--tape-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-cancel-retrieval{
   $flags=(
      "--gateway-arn", 
      "--tape-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-create-cached-iscsi-volume{
   $flags=(
      "--gateway-arn", 
      "--volume-size-in-bytes", 
      "--snapshot-id", 
      "--target-name", 
      "--source-volume-arn", 
      "--network-interface-id", 
      "--client-token", 
      "--kms-encrypted", 
      "--no-kms-encrypted", 
      "--kms-key", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-create-nfs-file-share{
   $flags=(
      "--client-token", 
      "--nfs-file-share-defaults", 
      "--gateway-arn", 
      "--kms-encrypted", 
      "--no-kms-encrypted", 
      "--kms-key", 
      "--role", 
      "--location-arn", 
      "--default-storage-class", 
      "--object-acl", 
      "--client-list", 
      "--squash", 
      "--read-only", 
      "--no-read-only", 
      "--guess-mime-type-enabled", 
      "--no-guess-mime-type-enabled", 
      "--requester-pays", 
      "--no-requester-pays", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-create-smb-file-share{
   $flags=(
      "--client-token", 
      "--gateway-arn", 
      "--kms-encrypted", 
      "--no-kms-encrypted", 
      "--kms-key", 
      "--role", 
      "--location-arn", 
      "--default-storage-class", 
      "--object-acl", 
      "--read-only", 
      "--no-read-only", 
      "--guess-mime-type-enabled", 
      "--no-guess-mime-type-enabled", 
      "--requester-pays", 
      "--no-requester-pays", 
      "--smbacl-enabled", 
      "--no-smbacl-enabled", 
      "--admin-user-list", 
      "--valid-user-list", 
      "--invalid-user-list", 
      "--audit-destination-arn", 
      "--authentication", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-create-snapshot{
   $flags=(
      "--volume-arn", 
      "--snapshot-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-create-snapshot-from-volume-recovery-point{
   $flags=(
      "--volume-arn", 
      "--snapshot-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-create-stored-iscsi-volume{
   $flags=(
      "--gateway-arn", 
      "--disk-id", 
      "--snapshot-id", 
      "--preserve-existing-data", 
      "--no-preserve-existing-data", 
      "--target-name", 
      "--network-interface-id", 
      "--kms-encrypted", 
      "--no-kms-encrypted", 
      "--kms-key", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-create-tape-with-barcode{
   $flags=(
      "--gateway-arn", 
      "--tape-size-in-bytes", 
      "--tape-barcode", 
      "--kms-encrypted", 
      "--no-kms-encrypted", 
      "--kms-key", 
      "--pool-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-create-tapes{
   $flags=(
      "--gateway-arn", 
      "--tape-size-in-bytes", 
      "--client-token", 
      "--num-tapes-to-create", 
      "--tape-barcode-prefix", 
      "--kms-encrypted", 
      "--no-kms-encrypted", 
      "--kms-key", 
      "--pool-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-automatic-tape-creation-policy{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-bandwidth-rate-limit{
   $flags=(
      "--gateway-arn", 
      "--bandwidth-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-chap-credentials{
   $flags=(
      "--target-arn", 
      "--initiator-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-file-share{
   $flags=(
      "--file-share-arn", 
      "--force-delete", 
      "--no-force-delete", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-gateway{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-snapshot-schedule{
   $flags=(
      "--volume-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-tape{
   $flags=(
      "--gateway-arn", 
      "--tape-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-tape-archive{
   $flags=(
      "--tape-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-delete-volume{
   $flags=(
      "--volume-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-availability-monitor-test{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-bandwidth-rate-limit{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-cache{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-cached-iscsi-volumes{
   $flags=(
      "--volume-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-chap-credentials{
   $flags=(
      "--target-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-gateway-information{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-maintenance-start-time{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-nfs-file-shares{
   $flags=(
      "--file-share-arn-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-smb-file-shares{
   $flags=(
      "--file-share-arn-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-smb-settings{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-snapshot-schedule{
   $flags=(
      "--volume-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-stored-iscsi-volumes{
   $flags=(
      "--volume-arns", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-tape-archives{
   $flags=(
      "--tape-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-tape-recovery-points{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-tapes{
   $flags=(
      "--gateway-arn", 
      "--tape-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-upload-buffer{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-vtl-devices{
   $flags=(
      "--gateway-arn", 
      "--vtl-device-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-describe-working-storage{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-detach-volume{
   $flags=(
      "--volume-arn", 
      "--force-detach", 
      "--no-force-detach", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-disable-gateway{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-join-domain{
   $flags=(
      "--gateway-arn", 
      "--domain-name", 
      "--organizational-unit", 
      "--domain-controllers", 
      "--timeout-in-seconds", 
      "--user-name", 
      "--password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-automatic-tape-creation-policies{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-file-shares{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-gateways{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-local-disks{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-tapes{
   $flags=(
      "--tape-arns", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-volume-initiators{
   $flags=(
      "--volume-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-volume-recovery-points{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-list-volumes{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-notify-when-uploaded{
   $flags=(
      "--file-share-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-refresh-cache{
   $flags=(
      "--file-share-arn", 
      "--folder-list", 
      "--recursive", 
      "--no-recursive", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-remove-tags-from-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-reset-cache{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-retrieve-tape-archive{
   $flags=(
      "--tape-arn", 
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-retrieve-tape-recovery-point{
   $flags=(
      "--tape-arn", 
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-set-local-console-password{
   $flags=(
      "--gateway-arn", 
      "--local-console-password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-set-smb-guest-password{
   $flags=(
      "--gateway-arn", 
      "--password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-shutdown-gateway{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-start-availability-monitor-test{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-start-gateway{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-automatic-tape-creation-policy{
   $flags=(
      "--automatic-tape-creation-rules", 
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-bandwidth-rate-limit{
   $flags=(
      "--gateway-arn", 
      "--average-upload-rate-limit-in-bits-per-sec", 
      "--average-download-rate-limit-in-bits-per-sec", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-chap-credentials{
   $flags=(
      "--target-arn", 
      "--secret-to-authenticate-initiator", 
      "--initiator-name", 
      "--secret-to-authenticate-target", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-gateway-information{
   $flags=(
      "--gateway-arn", 
      "--gateway-name", 
      "--gateway-timezone", 
      "--cloud-watch-log-group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-gateway-software-now{
   $flags=(
      "--gateway-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-maintenance-start-time{
   $flags=(
      "--gateway-arn", 
      "--hour-of-day", 
      "--minute-of-hour", 
      "--day-of-week", 
      "--day-of-month", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-nfs-file-share{
   $flags=(
      "--file-share-arn", 
      "--kms-encrypted", 
      "--no-kms-encrypted", 
      "--kms-key", 
      "--nfs-file-share-defaults", 
      "--default-storage-class", 
      "--object-acl", 
      "--client-list", 
      "--squash", 
      "--read-only", 
      "--no-read-only", 
      "--guess-mime-type-enabled", 
      "--no-guess-mime-type-enabled", 
      "--requester-pays", 
      "--no-requester-pays", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-smb-file-share{
   $flags=(
      "--file-share-arn", 
      "--kms-encrypted", 
      "--no-kms-encrypted", 
      "--kms-key", 
      "--default-storage-class", 
      "--object-acl", 
      "--read-only", 
      "--no-read-only", 
      "--guess-mime-type-enabled", 
      "--no-guess-mime-type-enabled", 
      "--requester-pays", 
      "--no-requester-pays", 
      "--smbacl-enabled", 
      "--no-smbacl-enabled", 
      "--admin-user-list", 
      "--valid-user-list", 
      "--invalid-user-list", 
      "--audit-destination-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-smb-security-strategy{
   $flags=(
      "--gateway-arn", 
      "--smb-security-strategy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-snapshot-schedule{
   $flags=(
      "--volume-arn", 
      "--start-at", 
      "--recurrence-in-hours", 
      "--description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-storagegateway-update-vtl-device-type{
   $flags=(
      "--vtl-device-arn", 
      "--device-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sts{
   $commands=(
      "assume-role", 
      "assume-role-with-saml", 
      "assume-role-with-web-identity", 
      "decode-authorization-message", 
      "get-access-key-info", 
      "get-caller-identity", 
      "get-federation-token", 
      "get-session-token"
    );
   return $commands;
}
function Get-sts-assume-role{
   $flags=(
      "--role-arn", 
      "--role-session-name", 
      "--policy-arns", 
      "--policy", 
      "--duration-seconds", 
      "--tags", 
      "--transitive-tag-keys", 
      "--external-id", 
      "--serial-number", 
      "--token-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sts-assume-role-with-saml{
   $flags=(
      "--role-arn", 
      "--principal-arn", 
      "--saml-assertion", 
      "--policy-arns", 
      "--policy", 
      "--duration-seconds", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sts-assume-role-with-web-identity{
   $flags=(
      "--role-arn", 
      "--role-session-name", 
      "--web-identity-token", 
      "--provider-id", 
      "--policy-arns", 
      "--policy", 
      "--duration-seconds", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sts-decode-authorization-message{
   $flags=(
      "--encoded-message", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sts-get-access-key-info{
   $flags=(
      "--access-key-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sts-get-caller-identity{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sts-get-federation-token{
   $flags=(
      "--name", 
      "--policy", 
      "--policy-arns", 
      "--duration-seconds", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-sts-get-session-token{
   $flags=(
      "--duration-seconds", 
      "--serial-number", 
      "--token-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support{
   $commands=(
      "add-attachments-to-set", 
      "add-communication-to-case", 
      "create-case", 
      "describe-attachment", 
      "describe-cases", 
      "describe-communications", 
      "describe-services", 
      "describe-severity-levels", 
      "describe-trusted-advisor-check-refresh-statuses", 
      "describe-trusted-advisor-check-result", 
      "describe-trusted-advisor-check-summaries", 
      "describe-trusted-advisor-checks", 
      "refresh-trusted-advisor-check", 
      "resolve-case"
    );
   return $commands;
}
function Get-support-add-attachments-to-set{
   $flags=(
      "--attachment-set-id", 
      "--attachments", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-add-communication-to-case{
   $flags=(
      "--case-id", 
      "--communication-body", 
      "--cc-email-addresses", 
      "--attachment-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-create-case{
   $flags=(
      "--subject", 
      "--service-code", 
      "--severity-code", 
      "--category-code", 
      "--communication-body", 
      "--cc-email-addresses", 
      "--language", 
      "--issue-type", 
      "--attachment-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-attachment{
   $flags=(
      "--attachment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-cases{
   $flags=(
      "--case-id-list", 
      "--display-id", 
      "--after-time", 
      "--before-time", 
      "--include-resolved-cases", 
      "--no-include-resolved-cases", 
      "--language", 
      "--include-communications", 
      "--no-include-communications", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-communications{
   $flags=(
      "--case-id", 
      "--before-time", 
      "--after-time", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-services{
   $flags=(
      "--service-code-list", 
      "--language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-severity-levels{
   $flags=(
      "--language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-trusted-advisor-check-refresh-statuses{
   $flags=(
      "--check-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-trusted-advisor-check-result{
   $flags=(
      "--check-id", 
      "--language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-trusted-advisor-check-summaries{
   $flags=(
      "--check-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-describe-trusted-advisor-checks{
   $flags=(
      "--language", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-refresh-trusted-advisor-check{
   $flags=(
      "--check-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-support-resolve-case{
   $flags=(
      "--case-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf{
   $commands=(
      "count-closed-workflow-executions", 
      "count-open-workflow-executions", 
      "count-pending-activity-tasks", 
      "count-pending-decision-tasks", 
      "deprecate-activity-type", 
      "deprecate-domain", 
      "deprecate-workflow-type", 
      "describe-activity-type", 
      "describe-domain", 
      "describe-workflow-execution", 
      "describe-workflow-type", 
      "get-workflow-execution-history", 
      "list-activity-types", 
      "list-closed-workflow-executions", 
      "list-domains", 
      "list-open-workflow-executions", 
      "list-tags-for-resource", 
      "list-workflow-types", 
      "poll-for-activity-task", 
      "poll-for-decision-task", 
      "record-activity-task-heartbeat", 
      "register-activity-type", 
      "register-domain", 
      "register-workflow-type", 
      "request-cancel-workflow-execution", 
      "respond-activity-task-canceled", 
      "respond-activity-task-completed", 
      "respond-activity-task-failed", 
      "respond-decision-task-completed", 
      "signal-workflow-execution", 
      "start-workflow-execution", 
      "tag-resource", 
      "terminate-workflow-execution", 
      "undeprecate-activity-type", 
      "undeprecate-domain", 
      "undeprecate-workflow-type", 
      "untag-resource"
    );
   return $commands;
}
function Get-swf-count-closed-workflow-executions{
   $flags=(
      "--domain", 
      "--start-time-filter", 
      "--close-time-filter", 
      "--execution-filter", 
      "--type-filter", 
      "--tag-filter", 
      "--close-status-filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-count-open-workflow-executions{
   $flags=(
      "--domain", 
      "--start-time-filter", 
      "--type-filter", 
      "--tag-filter", 
      "--execution-filter", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-count-pending-activity-tasks{
   $flags=(
      "--domain", 
      "--task-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-count-pending-decision-tasks{
   $flags=(
      "--domain", 
      "--task-list", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-deprecate-activity-type{
   $flags=(
      "--domain", 
      "--activity-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-deprecate-domain{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-deprecate-workflow-type{
   $flags=(
      "--domain", 
      "--workflow-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-describe-activity-type{
   $flags=(
      "--domain", 
      "--activity-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-describe-domain{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-describe-workflow-execution{
   $flags=(
      "--domain", 
      "--execution", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-describe-workflow-type{
   $flags=(
      "--domain", 
      "--workflow-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-get-workflow-execution-history{
   $flags=(
      "--domain", 
      "--execution", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-list-activity-types{
   $flags=(
      "--domain", 
      "--name", 
      "--registration-status", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-list-closed-workflow-executions{
   $flags=(
      "--domain", 
      "--start-time-filter", 
      "--close-time-filter", 
      "--execution-filter", 
      "--close-status-filter", 
      "--type-filter", 
      "--tag-filter", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-list-domains{
   $flags=(
      "--registration-status", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-list-open-workflow-executions{
   $flags=(
      "--domain", 
      "--start-time-filter", 
      "--type-filter", 
      "--tag-filter", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--execution-filter", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-list-workflow-types{
   $flags=(
      "--domain", 
      "--name", 
      "--registration-status", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-poll-for-activity-task{
   $flags=(
      "--domain", 
      "--task-list", 
      "--identity", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-poll-for-decision-task{
   $flags=(
      "--domain", 
      "--task-list", 
      "--identity", 
      "--reverse-order", 
      "--no-reverse-order", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-record-activity-task-heartbeat{
   $flags=(
      "--task-token", 
      "--details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-register-activity-type{
   $flags=(
      "--domain", 
      "--name", 
      "--description", 
      "--default-task-start-to-close-timeout", 
      "--default-task-heartbeat-timeout", 
      "--default-task-list", 
      "--default-task-priority", 
      "--default-task-schedule-to-start-timeout", 
      "--default-task-schedule-to-close-timeout", 
      "--activity-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-register-domain{
   $flags=(
      "--name", 
      "--description", 
      "--workflow-execution-retention-period-in-days", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-register-workflow-type{
   $flags=(
      "--domain", 
      "--name", 
      "--description", 
      "--default-task-start-to-close-timeout", 
      "--default-execution-start-to-close-timeout", 
      "--default-task-list", 
      "--default-task-priority", 
      "--default-child-policy", 
      "--default-lambda-role", 
      "--workflow-version", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-request-cancel-workflow-execution{
   $flags=(
      "--domain", 
      "--workflow-id", 
      "--run-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-respond-activity-task-canceled{
   $flags=(
      "--task-token", 
      "--details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-respond-activity-task-completed{
   $flags=(
      "--task-token", 
      "--result", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-respond-activity-task-failed{
   $flags=(
      "--task-token", 
      "--reason", 
      "--details", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-respond-decision-task-completed{
   $flags=(
      "--task-token", 
      "--decisions", 
      "--execution-context", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-signal-workflow-execution{
   $flags=(
      "--domain", 
      "--workflow-id", 
      "--run-id", 
      "--signal-name", 
      "--input", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-start-workflow-execution{
   $flags=(
      "--domain", 
      "--workflow-id", 
      "--workflow-type", 
      "--task-list", 
      "--task-priority", 
      "--input", 
      "--execution-start-to-close-timeout", 
      "--tag-list", 
      "--task-start-to-close-timeout", 
      "--child-policy", 
      "--lambda-role", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-terminate-workflow-execution{
   $flags=(
      "--domain", 
      "--workflow-id", 
      "--run-id", 
      "--reason", 
      "--details", 
      "--child-policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-undeprecate-activity-type{
   $flags=(
      "--domain", 
      "--activity-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-undeprecate-domain{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-undeprecate-workflow-type{
   $flags=(
      "--domain", 
      "--workflow-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-swf-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics{
   $commands=(
      "create-canary", 
      "delete-canary", 
      "describe-canaries", 
      "describe-canaries-last-run", 
      "describe-runtime-versions", 
      "get-canary", 
      "get-canary-runs", 
      "list-tags-for-resource", 
      "start-canary", 
      "stop-canary", 
      "tag-resource", 
      "untag-resource", 
      "update-canary"
    );
   return $commands;
}
function Get-synthetics-create-canary{
   $flags=(
      "--name", 
      "--code", 
      "--artifact-s3-location", 
      "--execution-role-arn", 
      "--schedule", 
      "--run-config", 
      "--success-retention-period-in-days", 
      "--failure-retention-period-in-days", 
      "--runtime-version", 
      "--vpc-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-delete-canary{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-describe-canaries{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-describe-canaries-last-run{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-describe-runtime-versions{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-get-canary{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-get-canary-runs{
   $flags=(
      "--name", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-start-canary{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-stop-canary{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-synthetics-update-canary{
   $flags=(
      "--name", 
      "--code", 
      "--execution-role-arn", 
      "--runtime-version", 
      "--schedule", 
      "--run-config", 
      "--success-retention-period-in-days", 
      "--failure-retention-period-in-days", 
      "--vpc-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-textract{
   $commands=(
      "analyze-document", 
      "detect-document-text", 
      "get-document-analysis", 
      "get-document-text-detection", 
      "start-document-analysis", 
      "start-document-text-detection"
    );
   return $commands;
}
function Get-textract-analyze-document{
   $flags=(
      "--document", 
      "--feature-types", 
      "--human-loop-config", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-textract-detect-document-text{
   $flags=(
      "--document", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-textract-get-document-analysis{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-textract-get-document-text-detection{
   $flags=(
      "--job-id", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-textract-start-document-analysis{
   $flags=(
      "--document-location", 
      "--feature-types", 
      "--client-request-token", 
      "--job-tag", 
      "--notification-channel", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-textract-start-document-text-detection{
   $flags=(
      "--document-location", 
      "--client-request-token", 
      "--job-tag", 
      "--notification-channel", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe{
   $commands=(
      "create-medical-vocabulary", 
      "create-vocabulary", 
      "create-vocabulary-filter", 
      "delete-medical-transcription-job", 
      "delete-medical-vocabulary", 
      "delete-transcription-job", 
      "delete-vocabulary", 
      "delete-vocabulary-filter", 
      "get-medical-transcription-job", 
      "get-medical-vocabulary", 
      "get-transcription-job", 
      "get-vocabulary", 
      "get-vocabulary-filter", 
      "list-medical-transcription-jobs", 
      "list-medical-vocabularies", 
      "list-transcription-jobs", 
      "list-vocabularies", 
      "list-vocabulary-filters", 
      "start-medical-transcription-job", 
      "start-transcription-job", 
      "update-medical-vocabulary", 
      "update-vocabulary", 
      "update-vocabulary-filter"
    );
   return $commands;
}
function Get-transcribe-create-medical-vocabulary{
   $flags=(
      "--vocabulary-name", 
      "--language-code", 
      "--vocabulary-file-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-create-vocabulary{
   $flags=(
      "--vocabulary-name", 
      "--language-code", 
      "--phrases", 
      "--vocabulary-file-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-create-vocabulary-filter{
   $flags=(
      "--vocabulary-filter-name", 
      "--language-code", 
      "--words", 
      "--vocabulary-filter-file-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-delete-medical-transcription-job{
   $flags=(
      "--medical-transcription-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-delete-medical-vocabulary{
   $flags=(
      "--vocabulary-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-delete-transcription-job{
   $flags=(
      "--transcription-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-delete-vocabulary{
   $flags=(
      "--vocabulary-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-delete-vocabulary-filter{
   $flags=(
      "--vocabulary-filter-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-get-medical-transcription-job{
   $flags=(
      "--medical-transcription-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-get-medical-vocabulary{
   $flags=(
      "--vocabulary-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-get-transcription-job{
   $flags=(
      "--transcription-job-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-get-vocabulary{
   $flags=(
      "--vocabulary-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-get-vocabulary-filter{
   $flags=(
      "--vocabulary-filter-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-list-medical-transcription-jobs{
   $flags=(
      "--status", 
      "--job-name-contains", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-list-medical-vocabularies{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--state-equals", 
      "--name-contains", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-list-transcription-jobs{
   $flags=(
      "--status", 
      "--job-name-contains", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-list-vocabularies{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--state-equals", 
      "--name-contains", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-list-vocabulary-filters{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--name-contains", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-start-medical-transcription-job{
   $flags=(
      "--medical-transcription-job-name", 
      "--language-code", 
      "--media-sample-rate-hertz", 
      "--media-format", 
      "--media", 
      "--output-bucket-name", 
      "--output-encryption-kms-key-id", 
      "--settings", 
      "--specialty", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-start-transcription-job{
   $flags=(
      "--transcription-job-name", 
      "--language-code", 
      "--media-sample-rate-hertz", 
      "--media-format", 
      "--media", 
      "--output-bucket-name", 
      "--output-encryption-kms-key-id", 
      "--settings", 
      "--job-execution-settings", 
      "--content-redaction", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-update-medical-vocabulary{
   $flags=(
      "--vocabulary-name", 
      "--language-code", 
      "--vocabulary-file-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-update-vocabulary{
   $flags=(
      "--vocabulary-name", 
      "--language-code", 
      "--phrases", 
      "--vocabulary-file-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transcribe-update-vocabulary-filter{
   $flags=(
      "--vocabulary-filter-name", 
      "--words", 
      "--vocabulary-filter-file-uri", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer{
   $commands=(
      "create-server", 
      "create-user", 
      "delete-server", 
      "delete-ssh-public-key", 
      "delete-user", 
      "describe-server", 
      "describe-user", 
      "import-ssh-public-key", 
      "list-servers", 
      "list-tags-for-resource", 
      "list-users", 
      "start-server", 
      "stop-server", 
      "tag-resource", 
      "test-identity-provider", 
      "untag-resource", 
      "update-server", 
      "update-user"
    );
   return $commands;
}
function Get-transfer-create-server{
   $flags=(
      "--certificate", 
      "--endpoint-details", 
      "--endpoint-type", 
      "--host-key", 
      "--identity-provider-details", 
      "--identity-provider-type", 
      "--logging-role", 
      "--protocols", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-create-user{
   $flags=(
      "--home-directory", 
      "--home-directory-type", 
      "--home-directory-mappings", 
      "--policy", 
      "--role", 
      "--server-id", 
      "--ssh-public-key-body", 
      "--tags", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-delete-server{
   $flags=(
      "--server-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-delete-ssh-public-key{
   $flags=(
      "--server-id", 
      "--ssh-public-key-id", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-delete-user{
   $flags=(
      "--server-id", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-describe-server{
   $flags=(
      "--server-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-describe-user{
   $flags=(
      "--server-id", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-import-ssh-public-key{
   $flags=(
      "--server-id", 
      "--ssh-public-key-body", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-list-servers{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-list-tags-for-resource{
   $flags=(
      "--arn", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-list-users{
   $flags=(
      "--max-results", 
      "--next-token", 
      "--server-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-start-server{
   $flags=(
      "--server-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-stop-server{
   $flags=(
      "--server-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-tag-resource{
   $flags=(
      "--arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-test-identity-provider{
   $flags=(
      "--server-id", 
      "--user-name", 
      "--user-password", 
      "--server-protocol", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-untag-resource{
   $flags=(
      "--arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-update-server{
   $flags=(
      "--certificate", 
      "--endpoint-details", 
      "--endpoint-type", 
      "--host-key", 
      "--identity-provider-details", 
      "--logging-role", 
      "--protocols", 
      "--server-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-transfer-update-user{
   $flags=(
      "--home-directory", 
      "--home-directory-type", 
      "--home-directory-mappings", 
      "--policy", 
      "--role", 
      "--server-id", 
      "--user-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate{
   $commands=(
      "delete-terminology", 
      "describe-text-translation-job", 
      "get-terminology", 
      "import-terminology", 
      "list-terminologies", 
      "list-text-translation-jobs", 
      "start-text-translation-job", 
      "stop-text-translation-job", 
      "translate-text"
    );
   return $commands;
}
function Get-translate-delete-terminology{
   $flags=(
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate-describe-text-translation-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate-get-terminology{
   $flags=(
      "--name", 
      "--terminology-data-format", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate-import-terminology{
   $flags=(
      "--name", 
      "--merge-strategy", 
      "--description", 
      "--terminology-data", 
      "--encryption-key", 
      "--data-file", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate-list-terminologies{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate-list-text-translation-jobs{
   $flags=(
      "--filter", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate-start-text-translation-job{
   $flags=(
      "--job-name", 
      "--input-data-config", 
      "--output-data-config", 
      "--data-access-role-arn", 
      "--source-language-code", 
      "--target-language-codes", 
      "--terminology-names", 
      "--client-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate-stop-text-translation-job{
   $flags=(
      "--job-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-translate-translate-text{
   $flags=(
      "--text", 
      "--terminology-names", 
      "--source-language-code", 
      "--target-language-code", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf{
   $commands=(
      "create-byte-match-set", 
      "create-geo-match-set", 
      "create-ip-set", 
      "create-rate-based-rule", 
      "create-regex-match-set", 
      "create-regex-pattern-set", 
      "create-rule", 
      "create-rule-group", 
      "create-size-constraint-set", 
      "create-sql-injection-match-set", 
      "create-web-acl", 
      "create-web-acl-migration-stack", 
      "create-xss-match-set", 
      "delete-byte-match-set", 
      "delete-geo-match-set", 
      "delete-ip-set", 
      "delete-logging-configuration", 
      "delete-permission-policy", 
      "delete-rate-based-rule", 
      "delete-regex-match-set", 
      "delete-regex-pattern-set", 
      "delete-rule", 
      "delete-rule-group", 
      "delete-size-constraint-set", 
      "delete-sql-injection-match-set", 
      "delete-web-acl", 
      "delete-xss-match-set", 
      "get-byte-match-set", 
      "get-change-token", 
      "get-change-token-status", 
      "get-geo-match-set", 
      "get-ip-set", 
      "get-logging-configuration", 
      "get-permission-policy", 
      "get-rate-based-rule", 
      "get-rate-based-rule-managed-keys", 
      "get-regex-match-set", 
      "get-regex-pattern-set", 
      "get-rule", 
      "get-rule-group", 
      "get-sampled-requests", 
      "get-size-constraint-set", 
      "get-sql-injection-match-set", 
      "get-web-acl", 
      "get-xss-match-set", 
      "list-activated-rules-in-rule-group", 
      "list-byte-match-sets", 
      "list-geo-match-sets", 
      "list-ip-sets", 
      "list-logging-configurations", 
      "list-rate-based-rules", 
      "list-regex-match-sets", 
      "list-regex-pattern-sets", 
      "list-rule-groups", 
      "list-rules", 
      "list-size-constraint-sets", 
      "list-sql-injection-match-sets", 
      "list-subscribed-rule-groups", 
      "list-tags-for-resource", 
      "list-web-acls", 
      "list-xss-match-sets", 
      "put-logging-configuration", 
      "put-permission-policy", 
      "tag-resource", 
      "untag-resource", 
      "update-byte-match-set", 
      "update-geo-match-set", 
      "update-ip-set", 
      "update-rate-based-rule", 
      "update-regex-match-set", 
      "update-regex-pattern-set", 
      "update-rule", 
      "update-rule-group", 
      "update-size-constraint-set", 
      "update-sql-injection-match-set", 
      "update-web-acl", 
      "update-xss-match-set"
    );
   return $commands;
}
function Get-waf-create-byte-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-geo-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-ip-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-rate-based-rule{
   $flags=(
      "--name", 
      "--metric-name", 
      "--rate-key", 
      "--rate-limit", 
      "--change-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-regex-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-regex-pattern-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-rule{
   $flags=(
      "--name", 
      "--metric-name", 
      "--change-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-rule-group{
   $flags=(
      "--name", 
      "--metric-name", 
      "--change-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-size-constraint-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-sql-injection-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-web-acl{
   $flags=(
      "--name", 
      "--metric-name", 
      "--default-action", 
      "--change-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-web-acl-migration-stack{
   $flags=(
      "--web-acl-id", 
      "--s3-bucket-name", 
      "--ignore-unsupported-type", 
      "--no-ignore-unsupported-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-create-xss-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-byte-match-set{
   $flags=(
      "--byte-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-geo-match-set{
   $flags=(
      "--geo-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-ip-set{
   $flags=(
      "--ip-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-logging-configuration{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-permission-policy{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-rate-based-rule{
   $flags=(
      "--rule-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-regex-match-set{
   $flags=(
      "--regex-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-regex-pattern-set{
   $flags=(
      "--regex-pattern-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-rule{
   $flags=(
      "--rule-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-rule-group{
   $flags=(
      "--rule-group-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-size-constraint-set{
   $flags=(
      "--size-constraint-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-sql-injection-match-set{
   $flags=(
      "--sql-injection-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-web-acl{
   $flags=(
      "--web-acl-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-delete-xss-match-set{
   $flags=(
      "--xss-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-byte-match-set{
   $flags=(
      "--byte-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-change-token{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-change-token-status{
   $flags=(
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-geo-match-set{
   $flags=(
      "--geo-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-ip-set{
   $flags=(
      "--ip-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-logging-configuration{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-permission-policy{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-rate-based-rule{
   $flags=(
      "--rule-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-rate-based-rule-managed-keys{
   $flags=(
      "--rule-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-regex-match-set{
   $flags=(
      "--regex-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-regex-pattern-set{
   $flags=(
      "--regex-pattern-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-rule{
   $flags=(
      "--rule-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-rule-group{
   $flags=(
      "--rule-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-sampled-requests{
   $flags=(
      "--web-acl-id", 
      "--rule-id", 
      "--time-window", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-size-constraint-set{
   $flags=(
      "--size-constraint-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-sql-injection-match-set{
   $flags=(
      "--sql-injection-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-web-acl{
   $flags=(
      "--web-acl-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-get-xss-match-set{
   $flags=(
      "--xss-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-activated-rules-in-rule-group{
   $flags=(
      "--rule-group-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-byte-match-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-geo-match-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-ip-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-logging-configurations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-rate-based-rules{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-regex-match-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-regex-pattern-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-rule-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-rules{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-size-constraint-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-sql-injection-match-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-subscribed-rule-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-tags-for-resource{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-web-acls{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-list-xss-match-sets{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-put-logging-configuration{
   $flags=(
      "--logging-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-put-permission-policy{
   $flags=(
      "--resource-arn", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-byte-match-set{
   $flags=(
      "--byte-match-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-geo-match-set{
   $flags=(
      "--geo-match-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-ip-set{
   $flags=(
      "--ip-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-rate-based-rule{
   $flags=(
      "--rule-id", 
      "--change-token", 
      "--updates", 
      "--rate-limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-regex-match-set{
   $flags=(
      "--regex-match-set-id", 
      "--updates", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-regex-pattern-set{
   $flags=(
      "--regex-pattern-set-id", 
      "--updates", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-rule{
   $flags=(
      "--rule-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-rule-group{
   $flags=(
      "--rule-group-id", 
      "--updates", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-size-constraint-set{
   $flags=(
      "--size-constraint-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-sql-injection-match-set{
   $flags=(
      "--sql-injection-match-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-web-acl{
   $flags=(
      "--web-acl-id", 
      "--change-token", 
      "--updates", 
      "--default-action", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-update-xss-match-set{
   $flags=(
      "--xss-match-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional{
   $commands=(
      "associate-web-acl", 
      "create-byte-match-set", 
      "create-geo-match-set", 
      "create-ip-set", 
      "create-rate-based-rule", 
      "create-regex-match-set", 
      "create-regex-pattern-set", 
      "create-rule", 
      "create-rule-group", 
      "create-size-constraint-set", 
      "create-sql-injection-match-set", 
      "create-web-acl", 
      "create-web-acl-migration-stack", 
      "create-xss-match-set", 
      "delete-byte-match-set", 
      "delete-geo-match-set", 
      "delete-ip-set", 
      "delete-logging-configuration", 
      "delete-permission-policy", 
      "delete-rate-based-rule", 
      "delete-regex-match-set", 
      "delete-regex-pattern-set", 
      "delete-rule", 
      "delete-rule-group", 
      "delete-size-constraint-set", 
      "delete-sql-injection-match-set", 
      "delete-web-acl", 
      "delete-xss-match-set", 
      "disassociate-web-acl", 
      "get-byte-match-set", 
      "get-change-token", 
      "get-change-token-status", 
      "get-geo-match-set", 
      "get-ip-set", 
      "get-logging-configuration", 
      "get-permission-policy", 
      "get-rate-based-rule", 
      "get-rate-based-rule-managed-keys", 
      "get-regex-match-set", 
      "get-regex-pattern-set", 
      "get-rule", 
      "get-rule-group", 
      "get-sampled-requests", 
      "get-size-constraint-set", 
      "get-sql-injection-match-set", 
      "get-web-acl", 
      "get-web-acl-for-resource", 
      "get-xss-match-set", 
      "list-activated-rules-in-rule-group", 
      "list-byte-match-sets", 
      "list-geo-match-sets", 
      "list-ip-sets", 
      "list-logging-configurations", 
      "list-rate-based-rules", 
      "list-regex-match-sets", 
      "list-regex-pattern-sets", 
      "list-resources-for-web-acl", 
      "list-rule-groups", 
      "list-rules", 
      "list-size-constraint-sets", 
      "list-sql-injection-match-sets", 
      "list-subscribed-rule-groups", 
      "list-tags-for-resource", 
      "list-web-acls", 
      "list-xss-match-sets", 
      "put-logging-configuration", 
      "put-permission-policy", 
      "tag-resource", 
      "untag-resource", 
      "update-byte-match-set", 
      "update-geo-match-set", 
      "update-ip-set", 
      "update-rate-based-rule", 
      "update-regex-match-set", 
      "update-regex-pattern-set", 
      "update-rule", 
      "update-rule-group", 
      "update-size-constraint-set", 
      "update-sql-injection-match-set", 
      "update-web-acl", 
      "update-xss-match-set"
    );
   return $commands;
}
function Get-waf-regional-associate-web-acl{
   $flags=(
      "--web-acl-id", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-byte-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-geo-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-ip-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-rate-based-rule{
   $flags=(
      "--name", 
      "--metric-name", 
      "--rate-key", 
      "--rate-limit", 
      "--change-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-regex-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-regex-pattern-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-rule{
   $flags=(
      "--name", 
      "--metric-name", 
      "--change-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-rule-group{
   $flags=(
      "--name", 
      "--metric-name", 
      "--change-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-size-constraint-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-sql-injection-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-web-acl{
   $flags=(
      "--name", 
      "--metric-name", 
      "--default-action", 
      "--change-token", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-web-acl-migration-stack{
   $flags=(
      "--web-acl-id", 
      "--s3-bucket-name", 
      "--ignore-unsupported-type", 
      "--no-ignore-unsupported-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-create-xss-match-set{
   $flags=(
      "--name", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-byte-match-set{
   $flags=(
      "--byte-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-geo-match-set{
   $flags=(
      "--geo-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-ip-set{
   $flags=(
      "--ip-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-logging-configuration{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-permission-policy{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-rate-based-rule{
   $flags=(
      "--rule-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-regex-match-set{
   $flags=(
      "--regex-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-regex-pattern-set{
   $flags=(
      "--regex-pattern-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-rule{
   $flags=(
      "--rule-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-rule-group{
   $flags=(
      "--rule-group-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-size-constraint-set{
   $flags=(
      "--size-constraint-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-sql-injection-match-set{
   $flags=(
      "--sql-injection-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-web-acl{
   $flags=(
      "--web-acl-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-delete-xss-match-set{
   $flags=(
      "--xss-match-set-id", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-disassociate-web-acl{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-byte-match-set{
   $flags=(
      "--byte-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-change-token{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-change-token-status{
   $flags=(
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-geo-match-set{
   $flags=(
      "--geo-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-ip-set{
   $flags=(
      "--ip-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-logging-configuration{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-permission-policy{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-rate-based-rule{
   $flags=(
      "--rule-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-rate-based-rule-managed-keys{
   $flags=(
      "--rule-id", 
      "--next-marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-regex-match-set{
   $flags=(
      "--regex-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-regex-pattern-set{
   $flags=(
      "--regex-pattern-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-rule{
   $flags=(
      "--rule-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-rule-group{
   $flags=(
      "--rule-group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-sampled-requests{
   $flags=(
      "--web-acl-id", 
      "--rule-id", 
      "--time-window", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-size-constraint-set{
   $flags=(
      "--size-constraint-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-sql-injection-match-set{
   $flags=(
      "--sql-injection-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-web-acl{
   $flags=(
      "--web-acl-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-web-acl-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-get-xss-match-set{
   $flags=(
      "--xss-match-set-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-activated-rules-in-rule-group{
   $flags=(
      "--rule-group-id", 
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-byte-match-sets{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-geo-match-sets{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-ip-sets{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-logging-configurations{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-rate-based-rules{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-regex-match-sets{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-regex-pattern-sets{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-resources-for-web-acl{
   $flags=(
      "--web-acl-id", 
      "--resource-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-rule-groups{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-rules{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-size-constraint-sets{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-sql-injection-match-sets{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-subscribed-rule-groups{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-tags-for-resource{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-web-acls{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-list-xss-match-sets{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-put-logging-configuration{
   $flags=(
      "--logging-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-put-permission-policy{
   $flags=(
      "--resource-arn", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-byte-match-set{
   $flags=(
      "--byte-match-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-geo-match-set{
   $flags=(
      "--geo-match-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-ip-set{
   $flags=(
      "--ip-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-rate-based-rule{
   $flags=(
      "--rule-id", 
      "--change-token", 
      "--updates", 
      "--rate-limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-regex-match-set{
   $flags=(
      "--regex-match-set-id", 
      "--updates", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-regex-pattern-set{
   $flags=(
      "--regex-pattern-set-id", 
      "--updates", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-rule{
   $flags=(
      "--rule-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-rule-group{
   $flags=(
      "--rule-group-id", 
      "--updates", 
      "--change-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-size-constraint-set{
   $flags=(
      "--size-constraint-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-sql-injection-match-set{
   $flags=(
      "--sql-injection-match-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-web-acl{
   $flags=(
      "--web-acl-id", 
      "--change-token", 
      "--updates", 
      "--default-action", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-waf-regional-update-xss-match-set{
   $flags=(
      "--xss-match-set-id", 
      "--change-token", 
      "--updates", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2{
   $commands=(
      "associate-web-acl", 
      "check-capacity", 
      "create-ip-set", 
      "create-regex-pattern-set", 
      "create-rule-group", 
      "create-web-acl", 
      "delete-firewall-manager-rule-groups", 
      "delete-ip-set", 
      "delete-logging-configuration", 
      "delete-permission-policy", 
      "delete-regex-pattern-set", 
      "delete-rule-group", 
      "delete-web-acl", 
      "describe-managed-rule-group", 
      "disassociate-web-acl", 
      "get-ip-set", 
      "get-logging-configuration", 
      "get-permission-policy", 
      "get-rate-based-statement-managed-keys", 
      "get-regex-pattern-set", 
      "get-rule-group", 
      "get-sampled-requests", 
      "get-web-acl", 
      "get-web-acl-for-resource", 
      "list-available-managed-rule-groups", 
      "list-ip-sets", 
      "list-logging-configurations", 
      "list-regex-pattern-sets", 
      "list-resources-for-web-acl", 
      "list-rule-groups", 
      "list-tags-for-resource", 
      "list-web-acls", 
      "put-logging-configuration", 
      "put-permission-policy", 
      "tag-resource", 
      "untag-resource", 
      "update-ip-set", 
      "update-regex-pattern-set", 
      "update-rule-group", 
      "update-web-acl"
    );
   return $commands;
}
function Get-wafv2-associate-web-acl{
   $flags=(
      "--web-acl-arn", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-check-capacity{
   $flags=(
      "--scope", 
      "--rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-create-ip-set{
   $flags=(
      "--name", 
      "--scope", 
      "--description", 
      "--ip-address-version", 
      "--addresses", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-create-regex-pattern-set{
   $flags=(
      "--name", 
      "--scope", 
      "--description", 
      "--regular-expression-list", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-create-rule-group{
   $flags=(
      "--name", 
      "--scope", 
      "--capacity", 
      "--description", 
      "--rules", 
      "--visibility-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-create-web-acl{
   $flags=(
      "--name", 
      "--scope", 
      "--default-action", 
      "--description", 
      "--rules", 
      "--visibility-config", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-delete-firewall-manager-rule-groups{
   $flags=(
      "--web-acl-arn", 
      "--web-acl-lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-delete-ip-set{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-delete-logging-configuration{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-delete-permission-policy{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-delete-regex-pattern-set{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-delete-rule-group{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-delete-web-acl{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-describe-managed-rule-group{
   $flags=(
      "--vendor-name", 
      "--name", 
      "--scope", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-disassociate-web-acl{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-ip-set{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-logging-configuration{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-permission-policy{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-rate-based-statement-managed-keys{
   $flags=(
      "--scope", 
      "--web-acl-name", 
      "--web-acl-id", 
      "--rule-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-regex-pattern-set{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-rule-group{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-sampled-requests{
   $flags=(
      "--web-acl-arn", 
      "--rule-metric-name", 
      "--scope", 
      "--time-window", 
      "--max-items", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-web-acl{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-get-web-acl-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-list-available-managed-rule-groups{
   $flags=(
      "--scope", 
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-list-ip-sets{
   $flags=(
      "--scope", 
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-list-logging-configurations{
   $flags=(
      "--scope", 
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-list-regex-pattern-sets{
   $flags=(
      "--scope", 
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-list-resources-for-web-acl{
   $flags=(
      "--web-acl-arn", 
      "--resource-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-list-rule-groups{
   $flags=(
      "--scope", 
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-list-tags-for-resource{
   $flags=(
      "--next-marker", 
      "--limit", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-list-web-acls{
   $flags=(
      "--scope", 
      "--next-marker", 
      "--limit", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-put-logging-configuration{
   $flags=(
      "--logging-configuration", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-put-permission-policy{
   $flags=(
      "--resource-arn", 
      "--policy", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-update-ip-set{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--description", 
      "--addresses", 
      "--lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-update-regex-pattern-set{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--description", 
      "--regular-expression-list", 
      "--lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-update-rule-group{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--description", 
      "--rules", 
      "--visibility-config", 
      "--lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-wafv2-update-web-acl{
   $flags=(
      "--name", 
      "--scope", 
      "--id", 
      "--default-action", 
      "--description", 
      "--rules", 
      "--visibility-config", 
      "--lock-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs{
   $commands=(
      "abort-document-version-upload", 
      "activate-user", 
      "add-resource-permissions", 
      "create-comment", 
      "create-custom-metadata", 
      "create-folder", 
      "create-labels", 
      "create-notification-subscription", 
      "create-user", 
      "deactivate-user", 
      "delete-comment", 
      "delete-custom-metadata", 
      "delete-document", 
      "delete-folder", 
      "delete-folder-contents", 
      "delete-labels", 
      "delete-notification-subscription", 
      "delete-user", 
      "describe-activities", 
      "describe-comments", 
      "describe-document-versions", 
      "describe-folder-contents", 
      "describe-groups", 
      "describe-notification-subscriptions", 
      "describe-resource-permissions", 
      "describe-root-folders", 
      "describe-users", 
      "get-current-user", 
      "get-document", 
      "get-document-path", 
      "get-document-version", 
      "get-folder", 
      "get-folder-path", 
      "get-resources", 
      "initiate-document-version-upload", 
      "remove-all-resource-permissions", 
      "remove-resource-permission", 
      "update-document", 
      "update-document-version", 
      "update-folder", 
      "update-user"
    );
   return $commands;
}
function Get-workdocs-abort-document-version-upload{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--version-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-activate-user{
   $flags=(
      "--user-id", 
      "--authentication-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-add-resource-permissions{
   $flags=(
      "--authentication-token", 
      "--resource-id", 
      "--principals", 
      "--notification-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-create-comment{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--version-id", 
      "--parent-id", 
      "--thread-id", 
      "--text", 
      "--visibility", 
      "--notify-collaborators", 
      "--no-notify-collaborators", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-create-custom-metadata{
   $flags=(
      "--authentication-token", 
      "--resource-id", 
      "--version-id", 
      "--custom-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-create-folder{
   $flags=(
      "--authentication-token", 
      "--name", 
      "--parent-folder-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-create-labels{
   $flags=(
      "--resource-id", 
      "--labels", 
      "--authentication-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-create-notification-subscription{
   $flags=(
      "--organization-id", 
      "--protocol", 
      "--subscription-type", 
      "--notification-endpoint", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-create-user{
   $flags=(
      "--organization-id", 
      "--username", 
      "--email-address", 
      "--given-name", 
      "--surname", 
      "--password", 
      "--time-zone-id", 
      "--storage-rule", 
      "--authentication-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-deactivate-user{
   $flags=(
      "--user-id", 
      "--authentication-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-delete-comment{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--version-id", 
      "--comment-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-delete-custom-metadata{
   $flags=(
      "--authentication-token", 
      "--resource-id", 
      "--version-id", 
      "--keys", 
      "--delete-all", 
      "--no-delete-all", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-delete-document{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-delete-folder{
   $flags=(
      "--authentication-token", 
      "--folder-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-delete-folder-contents{
   $flags=(
      "--authentication-token", 
      "--folder-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-delete-labels{
   $flags=(
      "--resource-id", 
      "--authentication-token", 
      "--labels", 
      "--delete-all", 
      "--no-delete-all", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-delete-notification-subscription{
   $flags=(
      "--subscription-id", 
      "--organization-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-delete-user{
   $flags=(
      "--authentication-token", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-activities{
   $flags=(
      "--authentication-token", 
      "--start-time", 
      "--end-time", 
      "--organization-id", 
      "--activity-types", 
      "--resource-id", 
      "--user-id", 
      "--include-indirect-activities", 
      "--no-include-indirect-activities", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-comments{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--version-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-document-versions{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--include", 
      "--fields", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-folder-contents{
   $flags=(
      "--authentication-token", 
      "--folder-id", 
      "--sort", 
      "--order", 
      "--type", 
      "--include", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-groups{
   $flags=(
      "--authentication-token", 
      "--search-query", 
      "--organization-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-notification-subscriptions{
   $flags=(
      "--organization-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-resource-permissions{
   $flags=(
      "--authentication-token", 
      "--resource-id", 
      "--principal-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-root-folders{
   $flags=(
      "--authentication-token", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-describe-users{
   $flags=(
      "--authentication-token", 
      "--organization-id", 
      "--user-ids", 
      "--include", 
      "--order", 
      "--sort", 
      "--fields", 
      "--user-query", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-get-current-user{
   $flags=(
      "--authentication-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-get-document{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--include-custom-metadata", 
      "--no-include-custom-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-get-document-path{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--limit", 
      "--fields", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-get-document-version{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--version-id", 
      "--fields", 
      "--include-custom-metadata", 
      "--no-include-custom-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-get-folder{
   $flags=(
      "--authentication-token", 
      "--folder-id", 
      "--include-custom-metadata", 
      "--no-include-custom-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-get-folder-path{
   $flags=(
      "--authentication-token", 
      "--folder-id", 
      "--limit", 
      "--fields", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-get-resources{
   $flags=(
      "--authentication-token", 
      "--user-id", 
      "--collection-type", 
      "--limit", 
      "--marker", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-initiate-document-version-upload{
   $flags=(
      "--authentication-token", 
      "--id", 
      "--name", 
      "--content-created-timestamp", 
      "--content-modified-timestamp", 
      "--content-type", 
      "--document-size-in-bytes", 
      "--parent-folder-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-remove-all-resource-permissions{
   $flags=(
      "--authentication-token", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-remove-resource-permission{
   $flags=(
      "--authentication-token", 
      "--resource-id", 
      "--principal-id", 
      "--principal-type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-update-document{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--name", 
      "--parent-folder-id", 
      "--resource-state", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-update-document-version{
   $flags=(
      "--authentication-token", 
      "--document-id", 
      "--version-id", 
      "--version-status", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-update-folder{
   $flags=(
      "--authentication-token", 
      "--folder-id", 
      "--name", 
      "--parent-folder-id", 
      "--resource-state", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workdocs-update-user{
   $flags=(
      "--authentication-token", 
      "--user-id", 
      "--given-name", 
      "--surname", 
      "--type", 
      "--storage-rule", 
      "--time-zone-id", 
      "--locale", 
      "--grant-poweruser-privileges", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink{
   $commands=(
      "associate-domain", 
      "associate-website-authorization-provider", 
      "associate-website-certificate-authority", 
      "create-fleet", 
      "delete-fleet", 
      "describe-audit-stream-configuration", 
      "describe-company-network-configuration", 
      "describe-device", 
      "describe-device-policy-configuration", 
      "describe-domain", 
      "describe-fleet-metadata", 
      "describe-identity-provider-configuration", 
      "describe-website-certificate-authority", 
      "disassociate-domain", 
      "disassociate-website-authorization-provider", 
      "disassociate-website-certificate-authority", 
      "list-devices", 
      "list-domains", 
      "list-fleets", 
      "list-website-authorization-providers", 
      "list-website-certificate-authorities", 
      "restore-domain-access", 
      "revoke-domain-access", 
      "sign-out-user", 
      "update-audit-stream-configuration", 
      "update-company-network-configuration", 
      "update-device-policy-configuration", 
      "update-domain-metadata", 
      "update-fleet-metadata", 
      "update-identity-provider-configuration"
    );
   return $commands;
}
function Get-worklink-associate-domain{
   $flags=(
      "--fleet-arn", 
      "--domain-name", 
      "--display-name", 
      "--acm-certificate-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-associate-website-authorization-provider{
   $flags=(
      "--fleet-arn", 
      "--authorization-provider-type", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-associate-website-certificate-authority{
   $flags=(
      "--fleet-arn", 
      "--certificate", 
      "--display-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-create-fleet{
   $flags=(
      "--fleet-name", 
      "--display-name", 
      "--optimize-for-end-user-location", 
      "--no-optimize-for-end-user-location", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-delete-fleet{
   $flags=(
      "--fleet-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-describe-audit-stream-configuration{
   $flags=(
      "--fleet-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-describe-company-network-configuration{
   $flags=(
      "--fleet-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-describe-device{
   $flags=(
      "--fleet-arn", 
      "--device-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-describe-device-policy-configuration{
   $flags=(
      "--fleet-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-describe-domain{
   $flags=(
      "--fleet-arn", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-describe-fleet-metadata{
   $flags=(
      "--fleet-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-describe-identity-provider-configuration{
   $flags=(
      "--fleet-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-describe-website-certificate-authority{
   $flags=(
      "--fleet-arn", 
      "--website-ca-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-disassociate-domain{
   $flags=(
      "--fleet-arn", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-disassociate-website-authorization-provider{
   $flags=(
      "--fleet-arn", 
      "--authorization-provider-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-disassociate-website-certificate-authority{
   $flags=(
      "--fleet-arn", 
      "--website-ca-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-list-devices{
   $flags=(
      "--fleet-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-list-domains{
   $flags=(
      "--fleet-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-list-fleets{
   $flags=(
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-list-website-authorization-providers{
   $flags=(
      "--fleet-arn", 
      "--next-token", 
      "--max-results", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-list-website-certificate-authorities{
   $flags=(
      "--fleet-arn", 
      "--max-results", 
      "--next-token", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-restore-domain-access{
   $flags=(
      "--fleet-arn", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-revoke-domain-access{
   $flags=(
      "--fleet-arn", 
      "--domain-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-sign-out-user{
   $flags=(
      "--fleet-arn", 
      "--username", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-update-audit-stream-configuration{
   $flags=(
      "--fleet-arn", 
      "--audit-stream-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-update-company-network-configuration{
   $flags=(
      "--fleet-arn", 
      "--vpc-id", 
      "--subnet-ids", 
      "--security-group-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-update-device-policy-configuration{
   $flags=(
      "--fleet-arn", 
      "--device-ca-certificate", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-update-domain-metadata{
   $flags=(
      "--fleet-arn", 
      "--domain-name", 
      "--display-name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-update-fleet-metadata{
   $flags=(
      "--fleet-arn", 
      "--display-name", 
      "--optimize-for-end-user-location", 
      "--no-optimize-for-end-user-location", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-worklink-update-identity-provider-configuration{
   $flags=(
      "--fleet-arn", 
      "--identity-provider-type", 
      "--identity-provider-saml-metadata", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail{
   $commands=(
      "associate-delegate-to-resource", 
      "associate-member-to-group", 
      "create-alias", 
      "create-group", 
      "create-resource", 
      "create-user", 
      "delete-access-control-rule", 
      "delete-alias", 
      "delete-group", 
      "delete-mailbox-permissions", 
      "delete-resource", 
      "delete-user", 
      "deregister-from-work-mail", 
      "describe-group", 
      "describe-organization", 
      "describe-resource", 
      "describe-user", 
      "disassociate-delegate-from-resource", 
      "disassociate-member-from-group", 
      "get-access-control-effect", 
      "get-mailbox-details", 
      "list-access-control-rules", 
      "list-aliases", 
      "list-group-members", 
      "list-groups", 
      "list-mailbox-permissions", 
      "list-organizations", 
      "list-resource-delegates", 
      "list-resources", 
      "list-tags-for-resource", 
      "list-users", 
      "put-access-control-rule", 
      "put-mailbox-permissions", 
      "register-to-work-mail", 
      "reset-password", 
      "tag-resource", 
      "untag-resource", 
      "update-mailbox-quota", 
      "update-primary-email-address", 
      "update-resource"
    );
   return $commands;
}
function Get-workmail-associate-delegate-to-resource{
   $flags=(
      "--organization-id", 
      "--resource-id", 
      "--entity-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-associate-member-to-group{
   $flags=(
      "--organization-id", 
      "--group-id", 
      "--member-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-create-alias{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-create-group{
   $flags=(
      "--organization-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-create-resource{
   $flags=(
      "--organization-id", 
      "--name", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-create-user{
   $flags=(
      "--organization-id", 
      "--name", 
      "--display-name", 
      "--password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-delete-access-control-rule{
   $flags=(
      "--organization-id", 
      "--name", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-delete-alias{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--alias", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-delete-group{
   $flags=(
      "--organization-id", 
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-delete-mailbox-permissions{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--grantee-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-delete-resource{
   $flags=(
      "--organization-id", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-delete-user{
   $flags=(
      "--organization-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-deregister-from-work-mail{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-describe-group{
   $flags=(
      "--organization-id", 
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-describe-organization{
   $flags=(
      "--organization-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-describe-resource{
   $flags=(
      "--organization-id", 
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-describe-user{
   $flags=(
      "--organization-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-disassociate-delegate-from-resource{
   $flags=(
      "--organization-id", 
      "--resource-id", 
      "--entity-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-disassociate-member-from-group{
   $flags=(
      "--organization-id", 
      "--group-id", 
      "--member-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-get-access-control-effect{
   $flags=(
      "--organization-id", 
      "--ip-address", 
      "--action", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-get-mailbox-details{
   $flags=(
      "--organization-id", 
      "--user-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-access-control-rules{
   $flags=(
      "--organization-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-aliases{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-group-members{
   $flags=(
      "--organization-id", 
      "--group-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-groups{
   $flags=(
      "--organization-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-mailbox-permissions{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-organizations{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-resource-delegates{
   $flags=(
      "--organization-id", 
      "--resource-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-resources{
   $flags=(
      "--organization-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-tags-for-resource{
   $flags=(
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-list-users{
   $flags=(
      "--organization-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-put-access-control-rule{
   $flags=(
      "--name", 
      "--effect", 
      "--description", 
      "--ip-ranges", 
      "--not-ip-ranges", 
      "--actions", 
      "--not-actions", 
      "--user-ids", 
      "--not-user-ids", 
      "--organization-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-put-mailbox-permissions{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--grantee-id", 
      "--permission-values", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-register-to-work-mail{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--email", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-reset-password{
   $flags=(
      "--organization-id", 
      "--user-id", 
      "--password", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-tag-resource{
   $flags=(
      "--resource-arn", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-untag-resource{
   $flags=(
      "--resource-arn", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-update-mailbox-quota{
   $flags=(
      "--organization-id", 
      "--user-id", 
      "--mailbox-quota", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-update-primary-email-address{
   $flags=(
      "--organization-id", 
      "--entity-id", 
      "--email", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmail-update-resource{
   $flags=(
      "--organization-id", 
      "--resource-id", 
      "--name", 
      "--booking-options", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workmailmessageflow{
   $commands=(
      "get-raw-message-content"
    );
   return $commands;
}
function Get-workmailmessageflow-get-raw-message-content{
   $flags=(
      "--message-id"
    );
   return $flags;
}
function Get-workspaces{
   $commands=(
      "associate-ip-groups", 
      "authorize-ip-rules", 
      "copy-workspace-image", 
      "create-ip-group", 
      "create-tags", 
      "create-workspaces", 
      "delete-ip-group", 
      "delete-tags", 
      "delete-workspace-image", 
      "deregister-workspace-directory", 
      "describe-account", 
      "describe-account-modifications", 
      "describe-client-properties", 
      "describe-ip-groups", 
      "describe-tags", 
      "describe-workspace-bundles", 
      "describe-workspace-directories", 
      "describe-workspace-images", 
      "describe-workspace-snapshots", 
      "describe-workspaces", 
      "describe-workspaces-connection-status", 
      "disassociate-ip-groups", 
      "import-workspace-image", 
      "list-available-management-cidr-ranges", 
      "migrate-workspace", 
      "modify-account", 
      "modify-client-properties", 
      "modify-selfservice-permissions", 
      "modify-workspace-access-properties", 
      "modify-workspace-creation-properties", 
      "modify-workspace-properties", 
      "modify-workspace-state", 
      "reboot-workspaces", 
      "rebuild-workspaces", 
      "register-workspace-directory", 
      "restore-workspace", 
      "revoke-ip-rules", 
      "start-workspaces", 
      "stop-workspaces", 
      "terminate-workspaces", 
      "update-rules-of-ip-group"
    );
   return $commands;
}
function Get-workspaces-associate-ip-groups{
   $flags=(
      "--directory-id", 
      "--group-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-authorize-ip-rules{
   $flags=(
      "--group-id", 
      "--user-rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-copy-workspace-image{
   $flags=(
      "--name", 
      "--description", 
      "--source-image-id", 
      "--source-region", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-create-ip-group{
   $flags=(
      "--group-name", 
      "--group-desc", 
      "--user-rules", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-create-tags{
   $flags=(
      "--resource-id", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-create-workspaces{
   $flags=(
      "--workspaces", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-delete-ip-group{
   $flags=(
      "--group-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-delete-tags{
   $flags=(
      "--resource-id", 
      "--tag-keys", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-delete-workspace-image{
   $flags=(
      "--image-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-deregister-workspace-directory{
   $flags=(
      "--directory-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-account{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-account-modifications{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-client-properties{
   $flags=(
      "--resource-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-ip-groups{
   $flags=(
      "--group-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-tags{
   $flags=(
      "--resource-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-workspace-bundles{
   $flags=(
      "--bundle-ids", 
      "--owner", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-workspace-directories{
   $flags=(
      "--directory-ids", 
      "--limit", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-workspace-images{
   $flags=(
      "--image-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-workspace-snapshots{
   $flags=(
      "--workspace-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-workspaces{
   $flags=(
      "--workspace-ids", 
      "--directory-id", 
      "--user-name", 
      "--bundle-id", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-describe-workspaces-connection-status{
   $flags=(
      "--workspace-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-disassociate-ip-groups{
   $flags=(
      "--directory-id", 
      "--group-ids", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-import-workspace-image{
   $flags=(
      "--ec", 
      "--ingestion-process", 
      "--image-name", 
      "--image-description", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-list-available-management-cidr-ranges{
   $flags=(
      "--management-cidr-range-constraint", 
      "--cli-input-json", 
      "--starting-token", 
      "--page-size", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-migrate-workspace{
   $flags=(
      "--source-workspace-id", 
      "--bundle-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-modify-account{
   $flags=(
      "--dedicated-tenancy-support", 
      "--dedicated-tenancy-management-cidr-range", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-modify-client-properties{
   $flags=(
      "--resource-id", 
      "--client-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-modify-selfservice-permissions{
   $flags=(
      "--resource-id", 
      "--selfservice-permissions", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-modify-workspace-access-properties{
   $flags=(
      "--resource-id", 
      "--workspace-access-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-modify-workspace-creation-properties{
   $flags=(
      "--resource-id", 
      "--workspace-creation-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-modify-workspace-properties{
   $flags=(
      "--workspace-id", 
      "--workspace-properties", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-modify-workspace-state{
   $flags=(
      "--workspace-id", 
      "--workspace-state", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-reboot-workspaces{
   $flags=(
      "--reboot-workspace-requests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-rebuild-workspaces{
   $flags=(
      "--rebuild-workspace-requests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-register-workspace-directory{
   $flags=(
      "--directory-id", 
      "--subnet-ids", 
      "--enable-work-docs", 
      "--no-enable-work-docs", 
      "--enable-self-service", 
      "--no-enable-self-service", 
      "--tenancy", 
      "--tags", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-restore-workspace{
   $flags=(
      "--workspace-id", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-revoke-ip-rules{
   $flags=(
      "--group-id", 
      "--user-rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-start-workspaces{
   $flags=(
      "--start-workspace-requests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-stop-workspaces{
   $flags=(
      "--stop-workspace-requests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-terminate-workspaces{
   $flags=(
      "--terminate-workspace-requests", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-workspaces-update-rules-of-ip-group{
   $flags=(
      "--group-id", 
      "--user-rules", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray{
   $commands=(
      "batch-get-traces", 
      "create-group", 
      "create-sampling-rule", 
      "delete-group", 
      "delete-sampling-rule", 
      "get-encryption-config", 
      "get-group", 
      "get-groups", 
      "get-sampling-rules", 
      "get-sampling-statistic-summaries", 
      "get-sampling-targets", 
      "get-service-graph", 
      "get-time-series-service-statistics", 
      "get-trace-graph", 
      "get-trace-summaries", 
      "put-encryption-config", 
      "put-telemetry-records", 
      "put-trace-segments", 
      "update-group", 
      "update-sampling-rule"
    );
   return $commands;
}
function Get-xray-batch-get-traces{
   $flags=(
      "--trace-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-create-group{
   $flags=(
      "--group-name", 
      "--filter-expression", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-create-sampling-rule{
   $flags=(
      "--sampling-rule", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-delete-group{
   $flags=(
      "--group-name", 
      "--group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-delete-sampling-rule{
   $flags=(
      "--rule-name", 
      "--rule-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-encryption-config{
   $flags=(
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-group{
   $flags=(
      "--group-name", 
      "--group-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-groups{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-sampling-rules{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-sampling-statistic-summaries{
   $flags=(
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-sampling-targets{
   $flags=(
      "--sampling-statistics-documents", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-service-graph{
   $flags=(
      "--start-time", 
      "--end-time", 
      "--group-name", 
      "--group-arn", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-time-series-service-statistics{
   $flags=(
      "--start-time", 
      "--end-time", 
      "--group-name", 
      "--group-arn", 
      "--entity-selector-expression", 
      "--period", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-trace-graph{
   $flags=(
      "--trace-ids", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-get-trace-summaries{
   $flags=(
      "--start-time", 
      "--end-time", 
      "--time-range-type", 
      "--sampling", 
      "--no-sampling", 
      "--sampling-strategy", 
      "--filter-expression", 
      "--cli-input-json", 
      "--starting-token", 
      "--max-items", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-put-encryption-config{
   $flags=(
      "--key-id", 
      "--type", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-put-telemetry-records{
   $flags=(
      "--telemetry-records", 
      "--ec", 
      "--hostname", 
      "--resource-arn", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-put-trace-segments{
   $flags=(
      "--trace-segment-documents", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-update-group{
   $flags=(
      "--group-name", 
      "--group-arn", 
      "--filter-expression", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-xray-update-sampling-rule{
   $flags=(
      "--sampling-rule-update", 
      "--cli-input-json", 
      "--generate-cli-skeleton"
    );
   return $flags;
}
function Get-AWSCommonFlags() {
   $flags = (
	"--debug",
	"--endpoint-url",
	"--no-verify-ssl",
	"--no-paginate",
	"--output",
	"--query",
	"--profile",
	"--region",
	"--version",
	"--color",
	"--no-sign-request",
	"--ca-bundle",
	"--cli-read-timeout",
	"--cli-connect-timeout",
	"--cli-binary-format")
   return $flags;
}
function Get-AvailableOptions($lastCommand) {
        $completions = [System.Collections.ArrayList]@();
        if ($lastCommand -in ("aws", "aws.cmd")) {
                $completions += Get-RootCompletionOptions($wordToComplete);
                $completions += Get-AWSCommonFlags;
                return $completions;
        }
                $completions = &"Get-$lastCommand";
                $completions += Get-AWSCommonFlags;
        return $completions;
}

Export-ModuleMember Get-AvailableOptions